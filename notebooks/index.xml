<?xml version="1.0" encoding="UTF-8"?>
<rss  xmlns:atom="http://www.w3.org/2005/Atom" 
      xmlns:media="http://search.yahoo.com/mrss/" 
      xmlns:content="http://purl.org/rss/1.0/modules/content/" 
      xmlns:dc="http://purl.org/dc/elements/1.1/" 
      version="2.0">
<channel>
<title>ES654</title>
<link>https://github.com/nipunbatra/ml2023/notebooks/index.html</link>
<atom:link href="https://github.com/nipunbatra/ml2023/notebooks/index.xml" rel="self" type="application/rss+xml"/>
<description></description>
<generator>quarto-1.2.475</generator>
<lastBuildDate>Wed, 01 Mar 2023 00:00:00 GMT</lastBuildDate>
<item>
  <title>AutoDiff in JAX and PyTorch</title>
  <dc:creator>Nipun Batra</dc:creator>
  <link>https://github.com/nipunbatra/ml2023/notebooks/posts/autodiff-jax-torch.html</link>
  <description><![CDATA[ 



<div class="cell" data-execution_count="1">
<div class="sourceCode cell-code" id="cb1" style="background: #f1f3f5;"><pre class="sourceCode python code-with-copy"><code class="sourceCode python"><span id="cb1-1"><span class="im" style="color: #00769E;">import</span> jax.numpy <span class="im" style="color: #00769E;">as</span> jnp</span>
<span id="cb1-2"><span class="im" style="color: #00769E;">import</span> jax</span>
<span id="cb1-3"></span>
<span id="cb1-4"><span class="im" style="color: #00769E;">import</span> torch</span>
<span id="cb1-5"><span class="bu" style="color: null;">print</span>(torch.__version__)</span>
<span id="cb1-6"><span class="bu" style="color: null;">print</span>(jax.__version__)</span></code></pre></div>
<div class="cell-output cell-output-display" data-execution_count="1">
<pre><code>Array(1., dtype=float32, weak_type=True)</code></pre>
</div>
</div>
<div class="cell" data-execution_count="2">
<div class="sourceCode cell-code" id="cb3" style="background: #f1f3f5;"><pre class="sourceCode python code-with-copy"><code class="sourceCode python"><span id="cb3-1"><span class="kw" style="color: #003B4F;">def</span> f(x):</span>
<span id="cb3-2">    <span class="cf" style="color: #003B4F;">return</span> jnp.sin(x)</span></code></pre></div>
<div class="cell-output cell-output-display" data-execution_count="2">
<pre><code>Array(1., dtype=float32, weak_type=True)</code></pre>
</div>
</div>
<div class="cell" data-execution_count="3">
<div class="sourceCode cell-code" id="cb5" style="background: #f1f3f5;"><pre class="sourceCode python code-with-copy"><code class="sourceCode python"><span id="cb5-1">z <span class="op" style="color: #5E5E5E;">=</span> torch.tensor(<span class="fl" style="color: #AD0000;">0.0</span>, requires_grad<span class="op" style="color: #5E5E5E;">=</span><span class="va" style="color: #111111;">True</span>)</span>
<span id="cb5-2">torch.sin(z).backward()</span>
<span id="cb5-3"><span class="bu" style="color: null;">print</span>(jax.grad(f)(<span class="fl" style="color: #AD0000;">0.0</span>), z.grad)</span></code></pre></div>
<div class="cell-output cell-output-display" data-execution_count="3">
<pre><code>tensor(1.)</code></pre>
</div>
</div>
<div class="cell" data-execution_count="9">
<div class="sourceCode cell-code" id="cb7" style="background: #f1f3f5;"><pre class="sourceCode python code-with-copy"><code class="sourceCode python"><span id="cb7-1"><span class="kw" style="color: #003B4F;">def</span> f(x):</span>
<span id="cb7-2">    <span class="cf" style="color: #003B4F;">return</span> jnp.<span class="bu" style="color: null;">abs</span>(x)</span>
<span id="cb7-3"></span>
<span id="cb7-4"></span>
<span id="cb7-5">z1 <span class="op" style="color: #5E5E5E;">=</span> torch.tensor(<span class="fl" style="color: #AD0000;">0.0001</span>, requires_grad<span class="op" style="color: #5E5E5E;">=</span><span class="va" style="color: #111111;">True</span>)</span>
<span id="cb7-6">torch.<span class="bu" style="color: null;">abs</span>(z1).backward()</span>
<span id="cb7-7"></span>
<span id="cb7-8">z2 <span class="op" style="color: #5E5E5E;">=</span> torch.tensor(<span class="op" style="color: #5E5E5E;">-</span><span class="fl" style="color: #AD0000;">0.0001</span>, requires_grad<span class="op" style="color: #5E5E5E;">=</span><span class="va" style="color: #111111;">True</span>)</span>
<span id="cb7-9">torch.<span class="bu" style="color: null;">abs</span>(z2).backward()</span>
<span id="cb7-10"></span>
<span id="cb7-11">z3 <span class="op" style="color: #5E5E5E;">=</span> torch.tensor(<span class="fl" style="color: #AD0000;">0.0</span>, requires_grad<span class="op" style="color: #5E5E5E;">=</span><span class="va" style="color: #111111;">True</span>)</span>
<span id="cb7-12">torch.<span class="bu" style="color: null;">abs</span>(z3).backward()</span>
<span id="cb7-13"></span>
<span id="cb7-14"><span class="bu" style="color: null;">print</span>(jax.grad(f)(<span class="fl" style="color: #AD0000;">0.0</span>), z1.grad, z2.grad, z3.grad)</span></code></pre></div>
<div class="cell-output cell-output-stdout">
<pre><code>1.0 tensor(1.) tensor(-1.) tensor(0.)</code></pre>
</div>
</div>
<div class="cell" data-execution_count="10">
<div class="sourceCode cell-code" id="cb9" style="background: #f1f3f5;"><pre class="sourceCode python code-with-copy"><code class="sourceCode python"><span id="cb9-1"><span class="co" style="color: #5E5E5E;"># Use functorch</span></span>
<span id="cb9-2"></span>
<span id="cb9-3"><span class="im" style="color: #00769E;">import</span> functorch</span></code></pre></div>
<div class="cell-output cell-output-error">
<pre><code>ImportError: dlopen(/Users/nipun/miniconda3/lib/python3.9/site-packages/functorch/_C.cpython-39-darwin.so, 0x0002): Symbol not found: __ZN2at4_ops10as_strided4callERKNS_6TensorEN3c108ArrayRefINS5_6SymIntEEES8_NS5_8optionalIS7_EE
  Referenced from: &lt;12715304-4308-3E9B-A374-E4ADB3345E65&gt; /Users/nipun/miniconda3/lib/python3.9/site-packages/functorch/_C.cpython-39-darwin.so
  Expected in:     &lt;22ECBAD5-EEDD-3C80-9B5A-0564B60B6811&gt; /Users/nipun/miniconda3/lib/python3.9/site-packages/torch/lib/libtorch_cpu.dylib</code></pre>
</div>
</div>
<div class="cell" data-execution_count="11">
<div class="sourceCode cell-code" id="cb11" style="background: #f1f3f5;"><pre class="sourceCode python code-with-copy"><code class="sourceCode python"></code></pre></div>
<div class="cell-output cell-output-display" data-execution_count="11">
<pre><code>'1.12.1'</code></pre>
</div>
</div>



 ]]></description>
  <guid>https://github.com/nipunbatra/ml2023/notebooks/posts/autodiff-jax-torch.html</guid>
  <pubDate>Wed, 01 Mar 2023 00:00:00 GMT</pubDate>
</item>
<item>
  <title>Logistic Regression</title>
  <dc:creator>Nipun Batra</dc:creator>
  <link>https://github.com/nipunbatra/ml2023/notebooks/posts/logistic.html</link>
  <description><![CDATA[ 



<div class="cell" data-execution_count="1">
<div class="sourceCode cell-code" id="cb1" style="background: #f1f3f5;"><pre class="sourceCode python code-with-copy"><code class="sourceCode python"><span id="cb1-1"><span class="co" style="color: #5E5E5E;"># Create linearly separable data in 2d</span></span>
<span id="cb1-2"></span>
<span id="cb1-3"><span class="im" style="color: #00769E;">import</span> numpy <span class="im" style="color: #00769E;">as</span> np</span>
<span id="cb1-4"><span class="im" style="color: #00769E;">import</span> matplotlib.pyplot <span class="im" style="color: #00769E;">as</span> plt</span>
<span id="cb1-5"><span class="op" style="color: #5E5E5E;">%</span>config InlineBackend.figure_format <span class="op" style="color: #5E5E5E;">=</span> <span class="st" style="color: #20794D;">'retina'</span></span>
<span id="cb1-6"><span class="im" style="color: #00769E;">from</span> sklearn.datasets <span class="im" style="color: #00769E;">import</span> make_classification</span>
<span id="cb1-7"></span>
<span id="cb1-8">X, y <span class="op" style="color: #5E5E5E;">=</span> make_classification(n_samples<span class="op" style="color: #5E5E5E;">=</span><span class="dv" style="color: #AD0000;">100</span>, n_features<span class="op" style="color: #5E5E5E;">=</span><span class="dv" style="color: #AD0000;">2</span>, n_redundant<span class="op" style="color: #5E5E5E;">=</span><span class="dv" style="color: #AD0000;">0</span>, n_informative<span class="op" style="color: #5E5E5E;">=</span><span class="dv" style="color: #AD0000;">2</span>,</span>
<span id="cb1-9">                            n_clusters_per_class<span class="op" style="color: #5E5E5E;">=</span><span class="dv" style="color: #AD0000;">2</span>, class_sep<span class="op" style="color: #5E5E5E;">=</span><span class="fl" style="color: #AD0000;">1.5</span>, random_state<span class="op" style="color: #5E5E5E;">=</span><span class="dv" style="color: #AD0000;">42</span>)</span>
<span id="cb1-10"></span>
<span id="cb1-11">plt.scatter(X[:, <span class="dv" style="color: #AD0000;">0</span>], X[:, <span class="dv" style="color: #AD0000;">1</span>], marker<span class="op" style="color: #5E5E5E;">=</span><span class="st" style="color: #20794D;">'o'</span>, c<span class="op" style="color: #5E5E5E;">=</span>y, s<span class="op" style="color: #5E5E5E;">=</span><span class="dv" style="color: #AD0000;">25</span>, edgecolor<span class="op" style="color: #5E5E5E;">=</span><span class="st" style="color: #20794D;">'k'</span>)</span></code></pre></div>
<div class="cell-output cell-output-display" data-execution_count="1">
<pre><code>&lt;matplotlib.collections.PathCollection at 0x12b5ed280&gt;</code></pre>
</div>
<div class="cell-output cell-output-display">
<p><img src="https://github.com/nipunbatra/ml2023/notebooks/posts/logistic_files/figure-html/cell-2-output-2.png" class="img-fluid"></p>
</div>
</div>
<div class="cell" data-execution_count="92">
<div class="sourceCode cell-code" id="cb3" style="background: #f1f3f5;"><pre class="sourceCode python code-with-copy"><code class="sourceCode python"><span id="cb3-1"><span class="im" style="color: #00769E;">from</span> sklearn.linear_model <span class="im" style="color: #00769E;">import</span> LogisticRegression</span>
<span id="cb3-2"></span>
<span id="cb3-3"><span class="co" style="color: #5E5E5E;"># Without regularization</span></span>
<span id="cb3-4">clf <span class="op" style="color: #5E5E5E;">=</span> LogisticRegression(random_state<span class="op" style="color: #5E5E5E;">=</span><span class="dv" style="color: #AD0000;">0</span>, penalty<span class="op" style="color: #5E5E5E;">=</span><span class="st" style="color: #20794D;">'none'</span>).fit(X, y)</span>
<span id="cb3-5">clf.coef_, clf.intercept_</span></code></pre></div>
<div class="cell-output cell-output-display" data-execution_count="92">
<pre><code>(array([[26.23339925, -5.01002931]]), array([1.74951957]))</code></pre>
</div>
</div>
<div class="cell" data-execution_count="72">
<div class="sourceCode cell-code" id="cb5" style="background: #f1f3f5;"><pre class="sourceCode python code-with-copy"><code class="sourceCode python"><span id="cb5-1"><span class="co" style="color: #5E5E5E;"># Create a surface plot of the decision boundary for any theta_0, theta_1, theta_2</span></span>
<span id="cb5-2"></span>
<span id="cb5-3"><span class="kw" style="color: #003B4F;">def</span> plot_decision_boundary(theta_0, theta_1, theta_2):</span>
<span id="cb5-4">    x_lin <span class="op" style="color: #5E5E5E;">=</span> np.linspace(<span class="op" style="color: #5E5E5E;">-</span><span class="dv" style="color: #AD0000;">4</span>, <span class="dv" style="color: #AD0000;">4</span>, <span class="dv" style="color: #AD0000;">100</span>)</span>
<span id="cb5-5">    y_lin <span class="op" style="color: #5E5E5E;">=</span> <span class="op" style="color: #5E5E5E;">-</span>(theta_0 <span class="op" style="color: #5E5E5E;">+</span> theta_1 <span class="op" style="color: #5E5E5E;">*</span> x_lin) <span class="op" style="color: #5E5E5E;">/</span> theta_2</span>
<span id="cb5-6">    plt.plot(x_lin, y_lin, <span class="st" style="color: #20794D;">'k--'</span>, label<span class="op" style="color: #5E5E5E;">=</span><span class="st" style="color: #20794D;">'Decision boundary ($\sigma(z) = 0.5$))'</span>, lw<span class="op" style="color: #5E5E5E;">=</span><span class="dv" style="color: #AD0000;">5</span>)</span>
<span id="cb5-7">    plt.xlim(<span class="op" style="color: #5E5E5E;">-</span><span class="dv" style="color: #AD0000;">4</span>, <span class="dv" style="color: #AD0000;">4</span>)</span>
<span id="cb5-8">    plt.ylim(<span class="op" style="color: #5E5E5E;">-</span><span class="dv" style="color: #AD0000;">4</span>, <span class="dv" style="color: #AD0000;">4</span>)</span>
<span id="cb5-9">    plt.xlabel(<span class="vs" style="color: #20794D;">r'$x_1$'</span>)</span>
<span id="cb5-10">    plt.ylabel(<span class="vs" style="color: #20794D;">r'$x_2$'</span>)</span>
<span id="cb5-11">    plt.title(<span class="vs" style="color: #20794D;">r'$\theta_0 = </span><span class="sc" style="color: #5E5E5E;">{:.2f}</span><span class="vs" style="color: #20794D;">, \theta_1 = </span><span class="sc" style="color: #5E5E5E;">{:.2f}</span><span class="vs" style="color: #20794D;">, \theta_2 = </span><span class="sc" style="color: #5E5E5E;">{:.2f}</span><span class="vs" style="color: #20794D;">$'</span>.<span class="bu" style="color: null;">format</span>(theta_0, theta_1, theta_2))</span>
<span id="cb5-12"></span>
<span id="cb5-13">    <span class="co" style="color: #5E5E5E;"># Plot the probability of class 1 contour</span></span>
<span id="cb5-14">    x1, x2 <span class="op" style="color: #5E5E5E;">=</span> np.meshgrid(np.linspace(<span class="op" style="color: #5E5E5E;">-</span><span class="dv" style="color: #AD0000;">4</span>, <span class="dv" style="color: #AD0000;">4</span>, <span class="dv" style="color: #AD0000;">100</span>), np.linspace(<span class="op" style="color: #5E5E5E;">-</span><span class="dv" style="color: #AD0000;">4</span>, <span class="dv" style="color: #AD0000;">4</span>, <span class="dv" style="color: #AD0000;">100</span>))</span>
<span id="cb5-15">    z <span class="op" style="color: #5E5E5E;">=</span> <span class="dv" style="color: #AD0000;">1</span> <span class="op" style="color: #5E5E5E;">/</span> (<span class="dv" style="color: #AD0000;">1</span> <span class="op" style="color: #5E5E5E;">+</span> np.exp(<span class="op" style="color: #5E5E5E;">-</span>(theta_0 <span class="op" style="color: #5E5E5E;">+</span> theta_1 <span class="op" style="color: #5E5E5E;">*</span> x1 <span class="op" style="color: #5E5E5E;">+</span> theta_2 <span class="op" style="color: #5E5E5E;">*</span> x2)))</span>
<span id="cb5-16">    plt.contourf(x1, x2, z, linestyles<span class="op" style="color: #5E5E5E;">=</span><span class="st" style="color: #20794D;">'dashed'</span>)</span>
<span id="cb5-17">    plt.colorbar()</span>
<span id="cb5-18"></span>
<span id="cb5-19">    <span class="co" style="color: #5E5E5E;"># Plot the data</span></span>
<span id="cb5-20">    plt.scatter(X[:, <span class="dv" style="color: #AD0000;">0</span>], X[:, <span class="dv" style="color: #AD0000;">1</span>], marker<span class="op" style="color: #5E5E5E;">=</span><span class="st" style="color: #20794D;">'o'</span>, c<span class="op" style="color: #5E5E5E;">=</span>y, s<span class="op" style="color: #5E5E5E;">=</span><span class="dv" style="color: #AD0000;">25</span>, edgecolor<span class="op" style="color: #5E5E5E;">=</span><span class="st" style="color: #20794D;">'k'</span>)</span>
<span id="cb5-21">    plt.legend(loc<span class="op" style="color: #5E5E5E;">=</span><span class="st" style="color: #20794D;">'best'</span>)</span></code></pre></div>
</div>
<div class="cell" data-execution_count="93">
<div class="sourceCode cell-code" id="cb6" style="background: #f1f3f5;"><pre class="sourceCode python code-with-copy"><code class="sourceCode python"><span id="cb6-1"><span class="co" style="color: #5E5E5E;"># Create a slider widget to explore the decision boundary</span></span>
<span id="cb6-2"></span>
<span id="cb6-3"><span class="im" style="color: #00769E;">from</span> ipywidgets <span class="im" style="color: #00769E;">import</span> interact, FloatSlider</span>
<span id="cb6-4"></span>
<span id="cb6-5">interact(plot_decision_boundary,</span>
<span id="cb6-6">            theta_0<span class="op" style="color: #5E5E5E;">=</span>FloatSlider(<span class="bu" style="color: null;">min</span><span class="op" style="color: #5E5E5E;">=-</span><span class="dv" style="color: #AD0000;">2</span>, <span class="bu" style="color: null;">max</span><span class="op" style="color: #5E5E5E;">=</span><span class="dv" style="color: #AD0000;">3</span>, step<span class="op" style="color: #5E5E5E;">=</span><span class="fl" style="color: #AD0000;">0.1</span>, value<span class="op" style="color: #5E5E5E;">=</span><span class="fl" style="color: #AD0000;">0.1</span>),</span>
<span id="cb6-7">            theta_1<span class="op" style="color: #5E5E5E;">=</span>FloatSlider(<span class="bu" style="color: null;">min</span><span class="op" style="color: #5E5E5E;">=-</span><span class="dv" style="color: #AD0000;">5</span>, <span class="bu" style="color: null;">max</span><span class="op" style="color: #5E5E5E;">=</span><span class="dv" style="color: #AD0000;">40</span>, step<span class="op" style="color: #5E5E5E;">=</span><span class="fl" style="color: #AD0000;">0.5</span>, value<span class="op" style="color: #5E5E5E;">=</span><span class="fl" style="color: #AD0000;">0.1</span>),</span>
<span id="cb6-8">            theta_2<span class="op" style="color: #5E5E5E;">=</span>FloatSlider(<span class="bu" style="color: null;">min</span><span class="op" style="color: #5E5E5E;">=-</span><span class="dv" style="color: #AD0000;">10</span>, <span class="bu" style="color: null;">max</span><span class="op" style="color: #5E5E5E;">=</span><span class="dv" style="color: #AD0000;">5</span>, step<span class="op" style="color: #5E5E5E;">=</span><span class="fl" style="color: #AD0000;">0.1</span>, value<span class="op" style="color: #5E5E5E;">=</span><span class="fl" style="color: #AD0000;">0.1</span>))</span>
<span id="cb6-9"></span>
<span id="cb6-10"></span></code></pre></div>
<div class="cell-output cell-output-display">
<script type="application/vnd.jupyter.widget-view+json">
{"model_id":"445ee1832c2c480cab355ed288df639a","version_major":2,"version_minor":0}
</script>
</div>
<div class="cell-output cell-output-display" data-execution_count="93">
<pre><code>&lt;function __main__.plot_decision_boundary(theta_0, theta_1, theta_2)&gt;</code></pre>
</div>
</div>
<div class="cell" data-execution_count="99">
<div class="sourceCode cell-code" id="cb8" style="background: #f1f3f5;"><pre class="sourceCode python code-with-copy"><code class="sourceCode python"><span id="cb8-1"><span class="co" style="color: #5E5E5E;"># Create a 3d plot of the decision boundary for any theta_0, theta_1, theta_2</span></span>
<span id="cb8-2"></span>
<span id="cb8-3"><span class="im" style="color: #00769E;">from</span> mpl_toolkits.mplot3d <span class="im" style="color: #00769E;">import</span> Axes3D</span>
<span id="cb8-4"></span>
<span id="cb8-5"><span class="kw" style="color: #003B4F;">def</span> plot_decision_boundary_3d(theta_0, theta_1, theta_2, azim<span class="op" style="color: #5E5E5E;">=</span><span class="dv" style="color: #AD0000;">30</span>, elev<span class="op" style="color: #5E5E5E;">=</span><span class="dv" style="color: #AD0000;">30</span>):</span>
<span id="cb8-6">    fig <span class="op" style="color: #5E5E5E;">=</span> plt.figure(figsize<span class="op" style="color: #5E5E5E;">=</span>(<span class="dv" style="color: #AD0000;">10</span>, <span class="dv" style="color: #AD0000;">8</span>))</span>
<span id="cb8-7">    ax <span class="op" style="color: #5E5E5E;">=</span> fig.add_subplot(<span class="dv" style="color: #AD0000;">111</span>, projection<span class="op" style="color: #5E5E5E;">=</span><span class="st" style="color: #20794D;">'3d'</span>)</span>
<span id="cb8-8">    x_lin <span class="op" style="color: #5E5E5E;">=</span> np.linspace(<span class="op" style="color: #5E5E5E;">-</span><span class="dv" style="color: #AD0000;">4</span>, <span class="dv" style="color: #AD0000;">4</span>, <span class="dv" style="color: #AD0000;">100</span>)</span>
<span id="cb8-9">    y_lin <span class="op" style="color: #5E5E5E;">=</span> np.linspace(<span class="op" style="color: #5E5E5E;">-</span><span class="dv" style="color: #AD0000;">4</span>, <span class="dv" style="color: #AD0000;">4</span>, <span class="dv" style="color: #AD0000;">100</span>)</span>
<span id="cb8-10">    X_g, Y_g <span class="op" style="color: #5E5E5E;">=</span> np.meshgrid(x_lin, y_lin)</span>
<span id="cb8-11">    Z_g <span class="op" style="color: #5E5E5E;">=</span> <span class="op" style="color: #5E5E5E;">-</span>(theta_0 <span class="op" style="color: #5E5E5E;">+</span> theta_1 <span class="op" style="color: #5E5E5E;">*</span> X_g <span class="op" style="color: #5E5E5E;">+</span> theta_2 <span class="op" style="color: #5E5E5E;">*</span> Y_g)</span>
<span id="cb8-12">    <span class="co" style="color: #5E5E5E;">#ax.plot_surface(X_g, Y_g, Z_g, alpha=0.2)</span></span>
<span id="cb8-13">    ax.set_xlabel(<span class="vs" style="color: #20794D;">r'$x_1$'</span>)</span>
<span id="cb8-14">    ax.set_ylabel(<span class="vs" style="color: #20794D;">r'$x_2$'</span>)</span>
<span id="cb8-15">    ax.set_zlabel(<span class="vs" style="color: #20794D;">r'$x_3$'</span>)</span>
<span id="cb8-16">    ax.set_title(<span class="vs" style="color: #20794D;">r'$\theta_0 = </span><span class="sc" style="color: #5E5E5E;">{:.2f}</span><span class="vs" style="color: #20794D;">, \theta_1 = </span><span class="sc" style="color: #5E5E5E;">{:.2f}</span><span class="vs" style="color: #20794D;">, \theta_2 = </span><span class="sc" style="color: #5E5E5E;">{:.2f}</span><span class="vs" style="color: #20794D;">$'</span>.<span class="bu" style="color: null;">format</span>(theta_0, theta_1, theta_2))</span>
<span id="cb8-17">    </span>
<span id="cb8-18">    <span class="co" style="color: #5E5E5E;"># Scatter plot of data (class 1 is Z = 1, class 0 is Z = 0)</span></span>
<span id="cb8-19">    ax.scatter(X[y <span class="op" style="color: #5E5E5E;">==</span> <span class="dv" style="color: #AD0000;">1</span>, <span class="dv" style="color: #AD0000;">0</span>], X[y <span class="op" style="color: #5E5E5E;">==</span> <span class="dv" style="color: #AD0000;">1</span>, <span class="dv" style="color: #AD0000;">1</span>], <span class="dv" style="color: #AD0000;">1</span>, marker<span class="op" style="color: #5E5E5E;">=</span><span class="st" style="color: #20794D;">'o'</span>, c<span class="op" style="color: #5E5E5E;">=</span><span class="st" style="color: #20794D;">'b'</span>, s<span class="op" style="color: #5E5E5E;">=</span><span class="dv" style="color: #AD0000;">25</span>, edgecolor<span class="op" style="color: #5E5E5E;">=</span><span class="st" style="color: #20794D;">'k'</span>)</span>
<span id="cb8-20">    ax.scatter(X[y <span class="op" style="color: #5E5E5E;">==</span> <span class="dv" style="color: #AD0000;">0</span>, <span class="dv" style="color: #AD0000;">0</span>], X[y <span class="op" style="color: #5E5E5E;">==</span> <span class="dv" style="color: #AD0000;">0</span>, <span class="dv" style="color: #AD0000;">1</span>], <span class="dv" style="color: #AD0000;">0</span>, marker<span class="op" style="color: #5E5E5E;">=</span><span class="st" style="color: #20794D;">'o'</span>, c<span class="op" style="color: #5E5E5E;">=</span><span class="st" style="color: #20794D;">'y'</span>, s<span class="op" style="color: #5E5E5E;">=</span><span class="dv" style="color: #AD0000;">25</span>, edgecolor<span class="op" style="color: #5E5E5E;">=</span><span class="st" style="color: #20794D;">'k'</span>)</span>
<span id="cb8-21"></span>
<span id="cb8-22">    <span class="co" style="color: #5E5E5E;"># Plot the 3d sigmoid function</span></span>
<span id="cb8-23">    x1, x2 <span class="op" style="color: #5E5E5E;">=</span> np.meshgrid(np.linspace(<span class="op" style="color: #5E5E5E;">-</span><span class="dv" style="color: #AD0000;">4</span>, <span class="dv" style="color: #AD0000;">4</span>, <span class="dv" style="color: #AD0000;">100</span>), np.linspace(<span class="op" style="color: #5E5E5E;">-</span><span class="dv" style="color: #AD0000;">4</span>, <span class="dv" style="color: #AD0000;">4</span>, <span class="dv" style="color: #AD0000;">100</span>))</span>
<span id="cb8-24">    z <span class="op" style="color: #5E5E5E;">=</span> <span class="dv" style="color: #AD0000;">1</span> <span class="op" style="color: #5E5E5E;">/</span> (<span class="dv" style="color: #AD0000;">1</span> <span class="op" style="color: #5E5E5E;">+</span> np.exp(<span class="op" style="color: #5E5E5E;">-</span>(theta_0 <span class="op" style="color: #5E5E5E;">+</span> theta_1 <span class="op" style="color: #5E5E5E;">*</span> x1 <span class="op" style="color: #5E5E5E;">+</span> theta_2 <span class="op" style="color: #5E5E5E;">*</span> x2)))</span>
<span id="cb8-25">    ax.plot_surface(x1, x2, z, alpha<span class="op" style="color: #5E5E5E;">=</span><span class="fl" style="color: #AD0000;">0.2</span>, color<span class="op" style="color: #5E5E5E;">=</span><span class="st" style="color: #20794D;">'green'</span>)</span>
<span id="cb8-26">    </span>
<span id="cb8-27">    <span class="co" style="color: #5E5E5E;"># Rotate the plot so that the sigmoid function is visible</span></span>
<span id="cb8-28">    ax.view_init(azim, elev)</span>
<span id="cb8-29"></span>
<span id="cb8-30">    <span class="co" style="color: #5E5E5E;"># Plot the decision plane</span></span>
<span id="cb8-31">    ax.plot_surface(X_g, Y_g, Z_g, alpha<span class="op" style="color: #5E5E5E;">=</span><span class="fl" style="color: #AD0000;">0.2</span>, color<span class="op" style="color: #5E5E5E;">=</span><span class="st" style="color: #20794D;">'k'</span>)</span>
<span id="cb8-32"></span></code></pre></div>
</div>
<div class="cell" data-execution_count="100">
<div class="sourceCode cell-code" id="cb9" style="background: #f1f3f5;"><pre class="sourceCode python code-with-copy"><code class="sourceCode python"><span id="cb9-1"><span class="co" style="color: #5E5E5E;"># Create a slider widget to explore the decision boundary</span></span>
<span id="cb9-2"></span>
<span id="cb9-3"><span class="im" style="color: #00769E;">from</span> ipywidgets <span class="im" style="color: #00769E;">import</span> interact, FloatSlider</span>
<span id="cb9-4"></span>
<span id="cb9-5">interact(plot_decision_boundary_3d,</span>
<span id="cb9-6">            theta_0<span class="op" style="color: #5E5E5E;">=</span>FloatSlider(<span class="bu" style="color: null;">min</span><span class="op" style="color: #5E5E5E;">=-</span><span class="dv" style="color: #AD0000;">2</span>, <span class="bu" style="color: null;">max</span><span class="op" style="color: #5E5E5E;">=</span><span class="dv" style="color: #AD0000;">3</span>, step<span class="op" style="color: #5E5E5E;">=</span><span class="fl" style="color: #AD0000;">0.1</span>, value<span class="op" style="color: #5E5E5E;">=</span><span class="fl" style="color: #AD0000;">0.1</span>),</span>
<span id="cb9-7">            theta_1<span class="op" style="color: #5E5E5E;">=</span>FloatSlider(<span class="bu" style="color: null;">min</span><span class="op" style="color: #5E5E5E;">=-</span><span class="dv" style="color: #AD0000;">5</span>, <span class="bu" style="color: null;">max</span><span class="op" style="color: #5E5E5E;">=</span><span class="dv" style="color: #AD0000;">40</span>, step<span class="op" style="color: #5E5E5E;">=</span><span class="fl" style="color: #AD0000;">0.5</span>, value<span class="op" style="color: #5E5E5E;">=</span><span class="fl" style="color: #AD0000;">0.1</span>),</span>
<span id="cb9-8">            theta_2<span class="op" style="color: #5E5E5E;">=</span>FloatSlider(<span class="bu" style="color: null;">min</span><span class="op" style="color: #5E5E5E;">=-</span><span class="dv" style="color: #AD0000;">10</span>, <span class="bu" style="color: null;">max</span><span class="op" style="color: #5E5E5E;">=</span><span class="dv" style="color: #AD0000;">5</span>, step<span class="op" style="color: #5E5E5E;">=</span><span class="fl" style="color: #AD0000;">0.1</span>, value<span class="op" style="color: #5E5E5E;">=</span><span class="fl" style="color: #AD0000;">0.1</span>),</span>
<span id="cb9-9">            azim<span class="op" style="color: #5E5E5E;">=</span>FloatSlider(<span class="bu" style="color: null;">min</span><span class="op" style="color: #5E5E5E;">=-</span><span class="dv" style="color: #AD0000;">180</span>, <span class="bu" style="color: null;">max</span><span class="op" style="color: #5E5E5E;">=</span><span class="dv" style="color: #AD0000;">180</span>, step<span class="op" style="color: #5E5E5E;">=</span><span class="dv" style="color: #AD0000;">1</span>, value<span class="op" style="color: #5E5E5E;">=</span><span class="dv" style="color: #AD0000;">30</span>),</span>
<span id="cb9-10">            elev<span class="op" style="color: #5E5E5E;">=</span>FloatSlider(<span class="bu" style="color: null;">min</span><span class="op" style="color: #5E5E5E;">=-</span><span class="dv" style="color: #AD0000;">180</span>, <span class="bu" style="color: null;">max</span><span class="op" style="color: #5E5E5E;">=</span><span class="dv" style="color: #AD0000;">180</span>, step<span class="op" style="color: #5E5E5E;">=</span><span class="dv" style="color: #AD0000;">1</span>, value<span class="op" style="color: #5E5E5E;">=</span><span class="dv" style="color: #AD0000;">30</span>))</span>
<span id="cb9-11"></span>
<span id="cb9-12"></span></code></pre></div>
<div class="cell-output cell-output-display">
<script type="application/vnd.jupyter.widget-view+json">
{"model_id":"1337be77d0ab4a688da0b38dcd764071","version_major":2,"version_minor":0}
</script>
</div>
<div class="cell-output cell-output-display" data-execution_count="100">
<pre><code>&lt;function __main__.plot_decision_boundary_3d(theta_0, theta_1, theta_2, azim=30, elev=30)&gt;</code></pre>
</div>
</div>
<div class="cell" data-execution_count="104">
<div class="sourceCode cell-code" id="cb11" style="background: #f1f3f5;"><pre class="sourceCode python code-with-copy"><code class="sourceCode python"><span id="cb11-1"><span class="co" style="color: #5E5E5E;"># Create two 3d plot any theta_0, theta_1, theta_2</span></span>
<span id="cb11-2"><span class="co" style="color: #5E5E5E;"># First showing the decision boundary</span></span>
<span id="cb11-3"><span class="co" style="color: #5E5E5E;"># Second showing the probability of class 1</span></span>
<span id="cb11-4"></span>
<span id="cb11-5"><span class="im" style="color: #00769E;">from</span> mpl_toolkits.mplot3d <span class="im" style="color: #00769E;">import</span> Axes3D</span>
<span id="cb11-6"></span>
<span id="cb11-7"><span class="kw" style="color: #003B4F;">def</span> plot_decision_boundary_3d(theta_0, theta_1, theta_2, azim<span class="op" style="color: #5E5E5E;">=</span><span class="dv" style="color: #AD0000;">30</span>, elev<span class="op" style="color: #5E5E5E;">=</span><span class="dv" style="color: #AD0000;">30</span>):</span>
<span id="cb11-8">    fig <span class="op" style="color: #5E5E5E;">=</span> plt.figure(figsize<span class="op" style="color: #5E5E5E;">=</span>(<span class="dv" style="color: #AD0000;">10</span>, <span class="dv" style="color: #AD0000;">8</span>))</span>
<span id="cb11-9">    ax1 <span class="op" style="color: #5E5E5E;">=</span> fig.add_subplot(<span class="dv" style="color: #AD0000;">121</span>, projection<span class="op" style="color: #5E5E5E;">=</span><span class="st" style="color: #20794D;">'3d'</span>)</span>
<span id="cb11-10">    ax2 <span class="op" style="color: #5E5E5E;">=</span> fig.add_subplot(<span class="dv" style="color: #AD0000;">122</span>, projection<span class="op" style="color: #5E5E5E;">=</span><span class="st" style="color: #20794D;">'3d'</span>)</span>
<span id="cb11-11"></span>
<span id="cb11-12">    x_lin <span class="op" style="color: #5E5E5E;">=</span> np.linspace(<span class="op" style="color: #5E5E5E;">-</span><span class="dv" style="color: #AD0000;">4</span>, <span class="dv" style="color: #AD0000;">4</span>, <span class="dv" style="color: #AD0000;">100</span>)</span>
<span id="cb11-13">    y_lin <span class="op" style="color: #5E5E5E;">=</span> np.linspace(<span class="op" style="color: #5E5E5E;">-</span><span class="dv" style="color: #AD0000;">4</span>, <span class="dv" style="color: #AD0000;">4</span>, <span class="dv" style="color: #AD0000;">100</span>)</span>
<span id="cb11-14">    X_g, Y_g <span class="op" style="color: #5E5E5E;">=</span> np.meshgrid(x_lin, y_lin)</span>
<span id="cb11-15">    Z_g <span class="op" style="color: #5E5E5E;">=</span> <span class="op" style="color: #5E5E5E;">-</span>(theta_0 <span class="op" style="color: #5E5E5E;">+</span> theta_1 <span class="op" style="color: #5E5E5E;">*</span> X_g <span class="op" style="color: #5E5E5E;">+</span> theta_2 <span class="op" style="color: #5E5E5E;">*</span> Y_g)</span>
<span id="cb11-16">    <span class="co" style="color: #5E5E5E;">#ax.plot_surface(X_g, Y_g, Z_g, alpha=0.2)</span></span>
<span id="cb11-17">    ax1.set_xlabel(<span class="vs" style="color: #20794D;">r'$x_1$'</span>)</span>
<span id="cb11-18">    ax1.set_ylabel(<span class="vs" style="color: #20794D;">r'$x_2$'</span>)</span>
<span id="cb11-19">    ax1.set_zlabel(<span class="vs" style="color: #20794D;">r'$x_3$'</span>)</span>
<span id="cb11-20">    ax1.set_title(<span class="vs" style="color: #20794D;">r'$\theta_0 = </span><span class="sc" style="color: #5E5E5E;">{:.2f}</span><span class="vs" style="color: #20794D;">, \theta_1 = </span><span class="sc" style="color: #5E5E5E;">{:.2f}</span><span class="vs" style="color: #20794D;">, \theta_2 = </span><span class="sc" style="color: #5E5E5E;">{:.2f}</span><span class="vs" style="color: #20794D;">$'</span>.<span class="bu" style="color: null;">format</span>(theta_0, theta_1, theta_2))</span>
<span id="cb11-21"></span>
<span id="cb11-22">    <span class="co" style="color: #5E5E5E;"># Scatter plot of data (class 1 is Z = 1, class 0 is Z = 0)</span></span>
<span id="cb11-23">    ax1.scatter(X[y <span class="op" style="color: #5E5E5E;">==</span> <span class="dv" style="color: #AD0000;">1</span>, <span class="dv" style="color: #AD0000;">0</span>], X[y <span class="op" style="color: #5E5E5E;">==</span> <span class="dv" style="color: #AD0000;">1</span>, <span class="dv" style="color: #AD0000;">1</span>], <span class="dv" style="color: #AD0000;">1</span>, marker<span class="op" style="color: #5E5E5E;">=</span><span class="st" style="color: #20794D;">'o'</span>, c<span class="op" style="color: #5E5E5E;">=</span><span class="st" style="color: #20794D;">'b'</span>, s<span class="op" style="color: #5E5E5E;">=</span><span class="dv" style="color: #AD0000;">25</span>, edgecolor<span class="op" style="color: #5E5E5E;">=</span><span class="st" style="color: #20794D;">'k'</span>)</span>
<span id="cb11-24">    ax1.scatter(X[y <span class="op" style="color: #5E5E5E;">==</span> <span class="dv" style="color: #AD0000;">0</span>, <span class="dv" style="color: #AD0000;">0</span>], X[y <span class="op" style="color: #5E5E5E;">==</span> <span class="dv" style="color: #AD0000;">0</span>, <span class="dv" style="color: #AD0000;">1</span>], <span class="dv" style="color: #AD0000;">0</span>, marker<span class="op" style="color: #5E5E5E;">=</span><span class="st" style="color: #20794D;">'o'</span>, c<span class="op" style="color: #5E5E5E;">=</span><span class="st" style="color: #20794D;">'y'</span>, s<span class="op" style="color: #5E5E5E;">=</span><span class="dv" style="color: #AD0000;">25</span>, edgecolor<span class="op" style="color: #5E5E5E;">=</span><span class="st" style="color: #20794D;">'k'</span>)</span>
<span id="cb11-25"></span>
<span id="cb11-26">    <span class="co" style="color: #5E5E5E;"># Plot the 3d sigmoid function</span></span>
<span id="cb11-27">    x1, x2 <span class="op" style="color: #5E5E5E;">=</span> np.meshgrid(np.linspace(<span class="op" style="color: #5E5E5E;">-</span><span class="dv" style="color: #AD0000;">4</span>, <span class="dv" style="color: #AD0000;">4</span>, <span class="dv" style="color: #AD0000;">100</span>), np.linspace(<span class="op" style="color: #5E5E5E;">-</span><span class="dv" style="color: #AD0000;">4</span>, <span class="dv" style="color: #AD0000;">4</span>, <span class="dv" style="color: #AD0000;">100</span>))</span>
<span id="cb11-28">    z <span class="op" style="color: #5E5E5E;">=</span> <span class="dv" style="color: #AD0000;">1</span> <span class="op" style="color: #5E5E5E;">/</span> (<span class="dv" style="color: #AD0000;">1</span> <span class="op" style="color: #5E5E5E;">+</span> np.exp(<span class="op" style="color: #5E5E5E;">-</span>(theta_0 <span class="op" style="color: #5E5E5E;">+</span> theta_1 <span class="op" style="color: #5E5E5E;">*</span> x1 <span class="op" style="color: #5E5E5E;">+</span> theta_2 <span class="op" style="color: #5E5E5E;">*</span> x2)))</span>
<span id="cb11-29"></span>
<span id="cb11-30">    <span class="co" style="color: #5E5E5E;"># Plot the decision plane</span></span>
<span id="cb11-31">    ax1.plot_surface(X_g, Y_g, Z_g, alpha<span class="op" style="color: #5E5E5E;">=</span><span class="fl" style="color: #AD0000;">0.2</span>, color<span class="op" style="color: #5E5E5E;">=</span><span class="st" style="color: #20794D;">'k'</span>)</span>
<span id="cb11-32"></span>
<span id="cb11-33">    <span class="co" style="color: #5E5E5E;"># Plot the probability of class 1</span></span>
<span id="cb11-34">    ax2.plot_surface(x1, x2, z, alpha<span class="op" style="color: #5E5E5E;">=</span><span class="fl" style="color: #AD0000;">0.2</span>, color<span class="op" style="color: #5E5E5E;">=</span><span class="st" style="color: #20794D;">'black'</span>)</span>
<span id="cb11-35">    ax2.scatter(X[y <span class="op" style="color: #5E5E5E;">==</span> <span class="dv" style="color: #AD0000;">1</span>, <span class="dv" style="color: #AD0000;">0</span>], X[y <span class="op" style="color: #5E5E5E;">==</span> <span class="dv" style="color: #AD0000;">1</span>, <span class="dv" style="color: #AD0000;">1</span>], <span class="dv" style="color: #AD0000;">1</span>, marker<span class="op" style="color: #5E5E5E;">=</span><span class="st" style="color: #20794D;">'o'</span>, c<span class="op" style="color: #5E5E5E;">=</span><span class="st" style="color: #20794D;">'b'</span>, s<span class="op" style="color: #5E5E5E;">=</span><span class="dv" style="color: #AD0000;">25</span>, edgecolor<span class="op" style="color: #5E5E5E;">=</span><span class="st" style="color: #20794D;">'k'</span>)</span>
<span id="cb11-36">    ax2.scatter(X[y <span class="op" style="color: #5E5E5E;">==</span> <span class="dv" style="color: #AD0000;">0</span>, <span class="dv" style="color: #AD0000;">0</span>], X[y <span class="op" style="color: #5E5E5E;">==</span> <span class="dv" style="color: #AD0000;">0</span>, <span class="dv" style="color: #AD0000;">1</span>], <span class="dv" style="color: #AD0000;">0</span>, marker<span class="op" style="color: #5E5E5E;">=</span><span class="st" style="color: #20794D;">'o'</span>, c<span class="op" style="color: #5E5E5E;">=</span><span class="st" style="color: #20794D;">'y'</span>, s<span class="op" style="color: #5E5E5E;">=</span><span class="dv" style="color: #AD0000;">25</span>, edgecolor<span class="op" style="color: #5E5E5E;">=</span><span class="st" style="color: #20794D;">'k'</span>)</span>
<span id="cb11-37"></span>
<span id="cb11-38"></span>
<span id="cb11-39">     <span class="co" style="color: #5E5E5E;"># Rotate the plot so that the sigmoid function is visible</span></span>
<span id="cb11-40">    ax1.view_init(azim, elev)</span>
<span id="cb11-41">    ax2.view_init(azim, elev)</span></code></pre></div>
</div>
<div class="cell" data-execution_count="105">
<div class="sourceCode cell-code" id="cb12" style="background: #f1f3f5;"><pre class="sourceCode python code-with-copy"><code class="sourceCode python"><span id="cb12-1"><span class="co" style="color: #5E5E5E;"># Create a slider widget to explore the decision boundary</span></span>
<span id="cb12-2"></span>
<span id="cb12-3"><span class="im" style="color: #00769E;">from</span> ipywidgets <span class="im" style="color: #00769E;">import</span> interact, FloatSlider</span>
<span id="cb12-4"></span>
<span id="cb12-5">interact(plot_decision_boundary_3d,</span>
<span id="cb12-6">            theta_0<span class="op" style="color: #5E5E5E;">=</span>FloatSlider(<span class="bu" style="color: null;">min</span><span class="op" style="color: #5E5E5E;">=-</span><span class="dv" style="color: #AD0000;">2</span>, <span class="bu" style="color: null;">max</span><span class="op" style="color: #5E5E5E;">=</span><span class="dv" style="color: #AD0000;">3</span>, step<span class="op" style="color: #5E5E5E;">=</span><span class="fl" style="color: #AD0000;">0.1</span>, value<span class="op" style="color: #5E5E5E;">=</span><span class="fl" style="color: #AD0000;">0.1</span>),</span>
<span id="cb12-7">            theta_1<span class="op" style="color: #5E5E5E;">=</span>FloatSlider(<span class="bu" style="color: null;">min</span><span class="op" style="color: #5E5E5E;">=-</span><span class="dv" style="color: #AD0000;">5</span>, <span class="bu" style="color: null;">max</span><span class="op" style="color: #5E5E5E;">=</span><span class="dv" style="color: #AD0000;">40</span>, step<span class="op" style="color: #5E5E5E;">=</span><span class="fl" style="color: #AD0000;">0.5</span>, value<span class="op" style="color: #5E5E5E;">=</span><span class="fl" style="color: #AD0000;">0.1</span>),</span>
<span id="cb12-8">            theta_2<span class="op" style="color: #5E5E5E;">=</span>FloatSlider(<span class="bu" style="color: null;">min</span><span class="op" style="color: #5E5E5E;">=-</span><span class="dv" style="color: #AD0000;">10</span>, <span class="bu" style="color: null;">max</span><span class="op" style="color: #5E5E5E;">=</span><span class="dv" style="color: #AD0000;">5</span>, step<span class="op" style="color: #5E5E5E;">=</span><span class="fl" style="color: #AD0000;">0.1</span>, value<span class="op" style="color: #5E5E5E;">=</span><span class="fl" style="color: #AD0000;">0.1</span>),</span>
<span id="cb12-9">            azim<span class="op" style="color: #5E5E5E;">=</span>FloatSlider(<span class="bu" style="color: null;">min</span><span class="op" style="color: #5E5E5E;">=-</span><span class="dv" style="color: #AD0000;">180</span>, <span class="bu" style="color: null;">max</span><span class="op" style="color: #5E5E5E;">=</span><span class="dv" style="color: #AD0000;">180</span>, step<span class="op" style="color: #5E5E5E;">=</span><span class="dv" style="color: #AD0000;">1</span>, value<span class="op" style="color: #5E5E5E;">=</span><span class="dv" style="color: #AD0000;">30</span>),</span>
<span id="cb12-10">            elev<span class="op" style="color: #5E5E5E;">=</span>FloatSlider(<span class="bu" style="color: null;">min</span><span class="op" style="color: #5E5E5E;">=-</span><span class="dv" style="color: #AD0000;">180</span>, <span class="bu" style="color: null;">max</span><span class="op" style="color: #5E5E5E;">=</span><span class="dv" style="color: #AD0000;">180</span>, step<span class="op" style="color: #5E5E5E;">=</span><span class="dv" style="color: #AD0000;">1</span>, value<span class="op" style="color: #5E5E5E;">=</span><span class="dv" style="color: #AD0000;">30</span>))</span>
<span id="cb12-11"></span>
<span id="cb12-12"></span></code></pre></div>
<div class="cell-output cell-output-display">
<script type="application/vnd.jupyter.widget-view+json">
{"model_id":"28debcc48c7d4b7b8e635ae3bb8d740f","version_major":2,"version_minor":0}
</script>
</div>
<div class="cell-output cell-output-display" data-execution_count="105">
<pre><code>&lt;function __main__.plot_decision_boundary_3d(theta_0, theta_1, theta_2, azim=30, elev=30)&gt;</code></pre>
</div>
</div>



 ]]></description>
  <guid>https://github.com/nipunbatra/ml2023/notebooks/posts/logistic.html</guid>
  <pubDate>Tue, 28 Feb 2023 00:00:00 GMT</pubDate>
</item>
<item>
  <title>Neural Network</title>
  <dc:creator>Nipun Batra</dc:creator>
  <link>https://github.com/nipunbatra/ml2023/notebooks/posts/nn.html</link>
  <description><![CDATA[ 



<div class="cell" data-execution_count="1">
<div class="sourceCode cell-code" id="cb1" style="background: #f1f3f5;"><pre class="sourceCode python code-with-copy"><code class="sourceCode python"><span id="cb1-1"><span class="im" style="color: #00769E;">import</span> torch</span>
<span id="cb1-2"><span class="im" style="color: #00769E;">import</span> torch.nn <span class="im" style="color: #00769E;">as</span> nn</span>
<span id="cb1-3"><span class="im" style="color: #00769E;">import</span> torch.nn.functional <span class="im" style="color: #00769E;">as</span> F</span>
<span id="cb1-4"><span class="im" style="color: #00769E;">import</span> torch.optim <span class="im" style="color: #00769E;">as</span> optim</span>
<span id="cb1-5"></span>
<span id="cb1-6"><span class="im" style="color: #00769E;">import</span> numpy <span class="im" style="color: #00769E;">as</span> np</span>
<span id="cb1-7"><span class="im" style="color: #00769E;">import</span> matplotlib.pyplot <span class="im" style="color: #00769E;">as</span> plt</span>
<span id="cb1-8"></span>
<span id="cb1-9"><span class="im" style="color: #00769E;">from</span> torch.utils.data <span class="im" style="color: #00769E;">import</span> DataLoader, TensorDataset</span>
<span id="cb1-10"></span>
<span id="cb1-11"><span class="op" style="color: #5E5E5E;">%</span>matplotlib inline</span>
<span id="cb1-12"><span class="op" style="color: #5E5E5E;">%</span>config InlineBackend.figure_format <span class="op" style="color: #5E5E5E;">=</span> <span class="st" style="color: #20794D;">'retina'</span></span>
<span id="cb1-13"></span>
<span id="cb1-14"><span class="co" style="color: #5E5E5E;"># Set random seed for reproducibility</span></span>
<span id="cb1-15">torch.manual_seed(<span class="dv" style="color: #AD0000;">0</span>)</span>
<span id="cb1-16"></span>
<span id="cb1-17"><span class="co" style="color: #5E5E5E;"># Torch version</span></span>
<span id="cb1-18">torch.__version__</span></code></pre></div>
<div class="cell-output cell-output-display" data-execution_count="1">
<pre><code>'2.0.0'</code></pre>
</div>
</div>
<div class="cell" data-execution_count="10">
<div class="sourceCode cell-code" id="cb3" style="background: #f1f3f5;"><pre class="sourceCode python code-with-copy"><code class="sourceCode python"><span id="cb3-1"><span class="co" style="color: #5E5E5E;"># MNIST dataset</span></span>
<span id="cb3-2"></span>
<span id="cb3-3"><span class="im" style="color: #00769E;">from</span> torchvision <span class="im" style="color: #00769E;">import</span> datasets, transforms</span>
<span id="cb3-4"><span class="im" style="color: #00769E;">import</span> torchvision</span>
<span id="cb3-5"></span>
<span id="cb3-6"><span class="co" style="color: #5E5E5E;"># Split MNIST into train, validation, and test sets</span></span>
<span id="cb3-7">train_data <span class="op" style="color: #5E5E5E;">=</span> datasets.MNIST(root<span class="op" style="color: #5E5E5E;">=</span><span class="st" style="color: #20794D;">'data'</span>, train<span class="op" style="color: #5E5E5E;">=</span><span class="va" style="color: #111111;">True</span>, download<span class="op" style="color: #5E5E5E;">=</span><span class="va" style="color: #111111;">True</span>, transform<span class="op" style="color: #5E5E5E;">=</span>transforms.ToTensor())</span>
<span id="cb3-8">test_data <span class="op" style="color: #5E5E5E;">=</span> datasets.MNIST(root<span class="op" style="color: #5E5E5E;">=</span><span class="st" style="color: #20794D;">'data'</span>, train<span class="op" style="color: #5E5E5E;">=</span><span class="va" style="color: #111111;">False</span>, download<span class="op" style="color: #5E5E5E;">=</span><span class="va" style="color: #111111;">True</span>, transform<span class="op" style="color: #5E5E5E;">=</span>transforms.ToTensor())</span>
<span id="cb3-9"></span>
<span id="cb3-10"><span class="co" style="color: #5E5E5E;"># Split train_data into train and validation sets</span></span>
<span id="cb3-11">val_data <span class="op" style="color: #5E5E5E;">=</span> torch.utils.data.Subset(train_data, <span class="bu" style="color: null;">range</span>(<span class="dv" style="color: #AD0000;">50000</span>, <span class="dv" style="color: #AD0000;">51000</span>))</span>
<span id="cb3-12"></span>
<span id="cb3-13"><span class="co" style="color: #5E5E5E;"># Reduce the size of the training set to 5,000</span></span>
<span id="cb3-14">train_data <span class="op" style="color: #5E5E5E;">=</span> torch.utils.data.Subset(train_data, <span class="bu" style="color: null;">range</span>(<span class="dv" style="color: #AD0000;">0</span>, <span class="dv" style="color: #AD0000;">5000</span>))</span></code></pre></div>
</div>
<div class="cell" data-execution_count="29">
<div class="sourceCode cell-code" id="cb4" style="background: #f1f3f5;"><pre class="sourceCode python code-with-copy"><code class="sourceCode python"><span id="cb4-1"><span class="co" style="color: #5E5E5E;"># Create data loaders</span></span>
<span id="cb4-2">batch_size <span class="op" style="color: #5E5E5E;">=</span> <span class="dv" style="color: #AD0000;">64</span></span>
<span id="cb4-3"></span>
<span id="cb4-4">train_loader <span class="op" style="color: #5E5E5E;">=</span> DataLoader(train_data, batch_size<span class="op" style="color: #5E5E5E;">=</span>batch_size, shuffle<span class="op" style="color: #5E5E5E;">=</span><span class="va" style="color: #111111;">True</span>)</span>
<span id="cb4-5">val_loader <span class="op" style="color: #5E5E5E;">=</span> DataLoader(val_data, batch_size<span class="op" style="color: #5E5E5E;">=</span>batch_size, shuffle<span class="op" style="color: #5E5E5E;">=</span><span class="va" style="color: #111111;">True</span>)</span>
<span id="cb4-6">test_loader <span class="op" style="color: #5E5E5E;">=</span> DataLoader(test_data, batch_size<span class="op" style="color: #5E5E5E;">=</span>batch_size, shuffle<span class="op" style="color: #5E5E5E;">=</span><span class="va" style="color: #111111;">True</span>)</span></code></pre></div>
</div>
<div class="cell" data-execution_count="30">
<div class="sourceCode cell-code" id="cb5" style="background: #f1f3f5;"><pre class="sourceCode python code-with-copy"><code class="sourceCode python"><span id="cb5-1">img, target <span class="op" style="color: #5E5E5E;">=</span> <span class="bu" style="color: null;">next</span>(<span class="bu" style="color: null;">iter</span>(train_loader))</span>
<span id="cb5-2"><span class="bu" style="color: null;">print</span>(img.shape)</span>
<span id="cb5-3"><span class="bu" style="color: null;">print</span>(target.shape)</span></code></pre></div>
<div class="cell-output cell-output-stdout">
<pre><code>torch.Size([64, 1, 28, 28])
torch.Size([64])</code></pre>
</div>
</div>
<div class="cell" data-execution_count="31">
<div class="sourceCode cell-code" id="cb7" style="background: #f1f3f5;"><pre class="sourceCode python code-with-copy"><code class="sourceCode python"><span id="cb7-1">plt.imshow(img[<span class="dv" style="color: #AD0000;">0</span>].numpy().squeeze(), cmap<span class="op" style="color: #5E5E5E;">=</span><span class="st" style="color: #20794D;">'gray_r'</span>)<span class="op" style="color: #5E5E5E;">;</span></span></code></pre></div>
<div class="cell-output cell-output-display">
<p><img src="https://github.com/nipunbatra/ml2023/notebooks/posts/nn_files/figure-html/cell-6-output-1.png" class="img-fluid"></p>
</div>
</div>
<div class="cell" data-execution_count="32">
<div class="sourceCode cell-code" id="cb8" style="background: #f1f3f5;"><pre class="sourceCode python code-with-copy"><code class="sourceCode python"><span id="cb8-1">target</span></code></pre></div>
<div class="cell-output cell-output-display" data-execution_count="32">
<pre><code>tensor([9, 1, 2, 6, 7, 1, 6, 7, 0, 7, 0, 6, 9, 2, 8, 3, 7, 5, 5, 6, 9, 7, 6, 4,
        9, 4, 1, 4, 1, 0, 1, 0, 4, 8, 2, 8, 4, 8, 0, 2, 9, 6, 7, 1, 3, 0, 0, 8,
        0, 1, 6, 1, 9, 8, 3, 7, 1, 0, 3, 2, 3, 3, 6, 0])</code></pre>
</div>
</div>
<div class="cell" data-execution_count="33">
<div class="sourceCode cell-code" id="cb10" style="background: #f1f3f5;"><pre class="sourceCode python code-with-copy"><code class="sourceCode python"><span id="cb10-1"><span class="co" style="color: #5E5E5E;"># Store the labels and Images in TensorBoard</span></span>
<span id="cb10-2"></span>
<span id="cb10-3"><span class="im" style="color: #00769E;">from</span> torch.utils.tensorboard <span class="im" style="color: #00769E;">import</span> SummaryWriter</span>
<span id="cb10-4"></span>
<span id="cb10-5"><span class="co" style="color: #5E5E5E;"># Clean up any old runs</span></span>
<span id="cb10-6"><span class="op" style="color: #5E5E5E;">!</span>rm <span class="op" style="color: #5E5E5E;">-</span>rf runs</span>
<span id="cb10-7"></span>
<span id="cb10-8"><span class="co" style="color: #5E5E5E;"># Default `log_dir` is "runs"</span></span>
<span id="cb10-9">writer <span class="op" style="color: #5E5E5E;">=</span> SummaryWriter(<span class="st" style="color: #20794D;">'runs/mnist'</span>)</span>
<span id="cb10-10"></span>
<span id="cb10-11"><span class="co" style="color: #5E5E5E;"># Add images to tensorboard in the form of a grid in batches of 64</span></span>
<span id="cb10-12">dataiter <span class="op" style="color: #5E5E5E;">=</span> <span class="bu" style="color: null;">iter</span>(DataLoader(train_data, batch_size<span class="op" style="color: #5E5E5E;">=</span><span class="dv" style="color: #AD0000;">64</span>, shuffle<span class="op" style="color: #5E5E5E;">=</span><span class="va" style="color: #111111;">True</span>))</span>
<span id="cb10-13"></span>
<span id="cb10-14"><span class="co" style="color: #5E5E5E;"># Add a slider in tensorboard to iterate through the batches</span></span>
<span id="cb10-15"><span class="cf" style="color: #003B4F;">for</span> i <span class="kw" style="color: #003B4F;">in</span> <span class="bu" style="color: null;">range</span>(<span class="dv" style="color: #AD0000;">10</span>):</span>
<span id="cb10-16">    images, labels <span class="op" style="color: #5E5E5E;">=</span> <span class="bu" style="color: null;">next</span>(dataiter)</span>
<span id="cb10-17">    images <span class="op" style="color: #5E5E5E;">=</span> torchvision.utils.make_grid(images)</span>
<span id="cb10-18">    <span class="co" style="color: #5E5E5E;"># Add images with labels to tensorboard</span></span>
<span id="cb10-19">    writer.add_image(<span class="ss" style="color: #20794D;">f'mnist_images_</span><span class="sc" style="color: #5E5E5E;">{</span>i<span class="sc" style="color: #5E5E5E;">}</span><span class="ss" style="color: #20794D;">'</span>, images, global_step<span class="op" style="color: #5E5E5E;">=</span>i)</span></code></pre></div>
</div>
<div class="cell" data-execution_count="34">
<div class="sourceCode cell-code" id="cb11" style="background: #f1f3f5;"><pre class="sourceCode python code-with-copy"><code class="sourceCode python"><span id="cb11-1"><span class="co" style="color: #5E5E5E;"># Define model for 10-class MNIST classification</span></span>
<span id="cb11-2"></span>
<span id="cb11-3"><span class="kw" style="color: #003B4F;">class</span> MNISTClassifier(nn.Module):</span>
<span id="cb11-4">    <span class="kw" style="color: #003B4F;">def</span> <span class="fu" style="color: #4758AB;">__init__</span>(<span class="va" style="color: #111111;">self</span>):</span>
<span id="cb11-5">        <span class="bu" style="color: null;">super</span>().<span class="fu" style="color: #4758AB;">__init__</span>()</span>
<span id="cb11-6">        <span class="va" style="color: #111111;">self</span>.fc1 <span class="op" style="color: #5E5E5E;">=</span> nn.Linear(<span class="dv" style="color: #AD0000;">784</span>, <span class="dv" style="color: #AD0000;">64</span>)</span>
<span id="cb11-7">        <span class="va" style="color: #111111;">self</span>.fc2 <span class="op" style="color: #5E5E5E;">=</span> nn.Linear(<span class="dv" style="color: #AD0000;">64</span>, <span class="dv" style="color: #AD0000;">32</span>)</span>
<span id="cb11-8">        <span class="va" style="color: #111111;">self</span>.fc3 <span class="op" style="color: #5E5E5E;">=</span> nn.Linear(<span class="dv" style="color: #AD0000;">32</span>, <span class="dv" style="color: #AD0000;">10</span>)</span>
<span id="cb11-9">        </span>
<span id="cb11-10">    <span class="kw" style="color: #003B4F;">def</span> forward(<span class="va" style="color: #111111;">self</span>, x):</span>
<span id="cb11-11">        z1 <span class="op" style="color: #5E5E5E;">=</span> <span class="va" style="color: #111111;">self</span>.fc1(x)</span>
<span id="cb11-12">        a1 <span class="op" style="color: #5E5E5E;">=</span> F.relu(z1)</span>
<span id="cb11-13">        z2 <span class="op" style="color: #5E5E5E;">=</span> <span class="va" style="color: #111111;">self</span>.fc2(a1)</span>
<span id="cb11-14">        a2 <span class="op" style="color: #5E5E5E;">=</span> F.relu(z2)</span>
<span id="cb11-15">        z3 <span class="op" style="color: #5E5E5E;">=</span> <span class="va" style="color: #111111;">self</span>.fc3(a2) <span class="co" style="color: #5E5E5E;"># logits</span></span>
<span id="cb11-16">        <span class="cf" style="color: #003B4F;">return</span> z3</span></code></pre></div>
</div>
<div class="cell" data-execution_count="35">
<div class="sourceCode cell-code" id="cb12" style="background: #f1f3f5;"><pre class="sourceCode python code-with-copy"><code class="sourceCode python"><span id="cb12-1">model <span class="op" style="color: #5E5E5E;">=</span> MNISTClassifier()</span>
<span id="cb12-2"></span>
<span id="cb12-3"></span>
<span id="cb12-4"><span class="co" style="color: #5E5E5E;"># Get model summary</span></span>
<span id="cb12-5"><span class="im" style="color: #00769E;">from</span> torchsummary <span class="im" style="color: #00769E;">import</span> summary</span>
<span id="cb12-6">summary(model, (<span class="dv" style="color: #AD0000;">1</span>, <span class="dv" style="color: #AD0000;">784</span>))</span></code></pre></div>
<div class="cell-output cell-output-stdout">
<pre><code>----------------------------------------------------------------
        Layer (type)               Output Shape         Param #
================================================================
            Linear-1                [-1, 1, 64]          50,240
            Linear-2                [-1, 1, 32]           2,080
            Linear-3                [-1, 1, 10]             330
================================================================
Total params: 52,650
Trainable params: 52,650
Non-trainable params: 0
----------------------------------------------------------------
Input size (MB): 0.00
Forward/backward pass size (MB): 0.00
Params size (MB): 0.20
Estimated Total Size (MB): 0.20
----------------------------------------------------------------</code></pre>
</div>
</div>
<div class="cell" data-execution_count="38">
<div class="sourceCode cell-code" id="cb14" style="background: #f1f3f5;"><pre class="sourceCode python code-with-copy"><code class="sourceCode python"><span id="cb14-1"><span class="co" style="color: #5E5E5E;"># Forward pass through the model</span></span>
<span id="cb14-2"></span>
<span id="cb14-3"></span>
<span id="cb14-4"></span>
<span id="cb14-5">saved_img, saved_target <span class="op" style="color: #5E5E5E;">=</span> <span class="bu" style="color: null;">next</span>(<span class="bu" style="color: null;">iter</span>(train_loader))</span>
<span id="cb14-6">saved_img <span class="op" style="color: #5E5E5E;">=</span> saved_img.view(saved_img.shape[<span class="dv" style="color: #AD0000;">0</span>], <span class="op" style="color: #5E5E5E;">-</span><span class="dv" style="color: #AD0000;">1</span>)</span>
<span id="cb14-7"><span class="bu" style="color: null;">print</span>(saved_img.shape)</span>
<span id="cb14-8"></span>
<span id="cb14-9">plt.imshow(saved_img[<span class="dv" style="color: #AD0000;">0</span>].reshape(<span class="dv" style="color: #AD0000;">28</span>, <span class="dv" style="color: #AD0000;">28</span>), cmap<span class="op" style="color: #5E5E5E;">=</span><span class="st" style="color: #20794D;">'gray_r'</span>)</span>
<span id="cb14-10">plt.title(saved_target[<span class="dv" style="color: #AD0000;">0</span>].item())</span>
<span id="cb14-11"></span>
<span id="cb14-12"></span>
<span id="cb14-13"><span class="cf" style="color: #003B4F;">with</span> torch.no_grad():</span>
<span id="cb14-14">    out <span class="op" style="color: #5E5E5E;">=</span> model(saved_img.view(saved_img.shape[<span class="dv" style="color: #AD0000;">0</span>], <span class="op" style="color: #5E5E5E;">-</span><span class="dv" style="color: #AD0000;">1</span>))</span>
<span id="cb14-15"></span>
<span id="cb14-16"></span>
<span id="cb14-17"></span>
<span id="cb14-18"><span class="bu" style="color: null;">print</span>(out[<span class="dv" style="color: #AD0000;">0</span>])</span>
<span id="cb14-19"></span>
<span id="cb14-20"><span class="co" style="color: #5E5E5E;"># Softmax</span></span>
<span id="cb14-21">probas <span class="op" style="color: #5E5E5E;">=</span> F.softmax(out, dim<span class="op" style="color: #5E5E5E;">=</span><span class="dv" style="color: #AD0000;">1</span>)</span>
<span id="cb14-22"><span class="bu" style="color: null;">print</span>(probas[<span class="dv" style="color: #AD0000;">0</span>])</span></code></pre></div>
<div class="cell-output cell-output-stdout">
<pre><code>torch.Size([64, 784])
tensor([-0.1530, -0.1150,  0.0052, -0.1495,  0.1777, -0.1248,  0.1724,  0.1506,
         0.0998, -0.0954])
tensor([0.0853, 0.0886, 0.0999, 0.0856, 0.1188, 0.0878, 0.1181, 0.1156, 0.1099,
        0.0904])</code></pre>
</div>
<div class="cell-output cell-output-display">
<p><img src="https://github.com/nipunbatra/ml2023/notebooks/posts/nn_files/figure-html/cell-11-output-2.png" class="img-fluid"></p>
</div>
</div>
<div class="cell" data-execution_count="44">
<div class="sourceCode cell-code" id="cb16" style="background: #f1f3f5;"><pre class="sourceCode python code-with-copy"><code class="sourceCode python"><span id="cb16-1">probas[<span class="dv" style="color: #AD0000;">0</span>:<span class="dv" style="color: #AD0000;">1</span>]</span></code></pre></div>
<div class="cell-output cell-output-display" data-execution_count="44">
<pre><code>tensor([[0.0853, 0.0886, 0.0999, 0.0856, 0.1188, 0.0878, 0.1181, 0.1156, 0.1099,
         0.0904]])</code></pre>
</div>
</div>
<div class="cell" data-execution_count="49">
<div class="sourceCode cell-code" id="cb18" style="background: #f1f3f5;"><pre class="sourceCode python code-with-copy"><code class="sourceCode python"><span id="cb18-1"><span class="co" style="color: #5E5E5E;"># Predicted label before training</span></span>
<span id="cb18-2"></span>
<span id="cb18-3">pred <span class="op" style="color: #5E5E5E;">=</span> torch.argmax(probas[<span class="dv" style="color: #AD0000;">0</span>:<span class="dv" style="color: #AD0000;">1</span>], dim<span class="op" style="color: #5E5E5E;">=</span><span class="dv" style="color: #AD0000;">1</span>).item()</span>
<span id="cb18-4"><span class="bu" style="color: null;">print</span>(<span class="ss" style="color: #20794D;">f"Prediction:  </span><span class="sc" style="color: #5E5E5E;">{</span>pred<span class="sc" style="color: #5E5E5E;">}</span><span class="ss" style="color: #20794D;">, True label: </span><span class="sc" style="color: #5E5E5E;">{</span>saved_target[<span class="dv" style="color: #AD0000;">0</span>]<span class="sc" style="color: #5E5E5E;">.</span>item()<span class="sc" style="color: #5E5E5E;">}</span><span class="ss" style="color: #20794D;">"</span>)</span></code></pre></div>
<div class="cell-output cell-output-stdout">
<pre><code>Prediction:  4, True label: 1</code></pre>
</div>
</div>
<div class="cell" data-execution_count="50">
<div class="sourceCode cell-code" id="cb20" style="background: #f1f3f5;"><pre class="sourceCode python code-with-copy"><code class="sourceCode python"><span id="cb20-1">model.fc1.weight.shape, model.fc1.bias.shape</span></code></pre></div>
<div class="cell-output cell-output-display" data-execution_count="50">
<pre><code>(torch.Size([64, 784]), torch.Size([64]))</code></pre>
</div>
</div>
<div class="cell" data-execution_count="51">
<div class="sourceCode cell-code" id="cb22" style="background: #f1f3f5;"><pre class="sourceCode python code-with-copy"><code class="sourceCode python"><span id="cb22-1"><span class="co" style="color: #5E5E5E;"># Number of parameters in fc1</span></span>
<span id="cb22-2"><span class="bu" style="color: null;">print</span>(<span class="st" style="color: #20794D;">"fc1"</span>, model.fc1.weight.numel() <span class="op" style="color: #5E5E5E;">+</span> model.fc1.bias.numel())</span>
<span id="cb22-3"></span>
<span id="cb22-4"><span class="co" style="color: #5E5E5E;"># Number of parameters in fc2</span></span>
<span id="cb22-5"><span class="bu" style="color: null;">print</span>(<span class="st" style="color: #20794D;">"fc2"</span>, model.fc2.weight.numel() <span class="op" style="color: #5E5E5E;">+</span> model.fc2.bias.numel())</span>
<span id="cb22-6"></span>
<span id="cb22-7"><span class="co" style="color: #5E5E5E;"># Number of parameters in fc3</span></span>
<span id="cb22-8"><span class="bu" style="color: null;">print</span>(<span class="st" style="color: #20794D;">"fc3"</span>, model.fc3.weight.numel() <span class="op" style="color: #5E5E5E;">+</span> model.fc3.bias.numel())</span></code></pre></div>
<div class="cell-output cell-output-stdout">
<pre><code>fc1 50240
fc2 2080
fc3 330</code></pre>
</div>
</div>
<div class="cell" data-execution_count="54">
<div class="sourceCode cell-code" id="cb24" style="background: #f1f3f5;"><pre class="sourceCode python code-with-copy"><code class="sourceCode python"><span id="cb24-1"><span class="bu" style="color: null;">len</span>(train_loader)</span></code></pre></div>
<div class="cell-output cell-output-display" data-execution_count="54">
<pre><code>79</code></pre>
</div>
</div>
<div class="cell" data-execution_count="52">
<div class="sourceCode cell-code" id="cb26" style="background: #f1f3f5;"><pre class="sourceCode python code-with-copy"><code class="sourceCode python"><span id="cb26-1"><span class="co" style="color: #5E5E5E;"># Forward pass through the model and writing to tensorboard</span></span>
<span id="cb26-2"></span>
<span id="cb26-3">lr <span class="op" style="color: #5E5E5E;">=</span> <span class="fl" style="color: #AD0000;">0.001</span></span>
<span id="cb26-4">optimizer <span class="op" style="color: #5E5E5E;">=</span> optim.Adam(model.parameters(), lr<span class="op" style="color: #5E5E5E;">=</span>lr)</span>
<span id="cb26-5">criterion <span class="op" style="color: #5E5E5E;">=</span> nn.CrossEntropyLoss()</span>
<span id="cb26-6"></span>
<span id="cb26-7">num_epochs <span class="op" style="color: #5E5E5E;">=</span> <span class="dv" style="color: #AD0000;">1</span></span>
<span id="cb26-8"><span class="cf" style="color: #003B4F;">for</span> epoch <span class="kw" style="color: #003B4F;">in</span> <span class="bu" style="color: null;">range</span>(num_epochs):</span>
<span id="cb26-9">    <span class="cf" style="color: #003B4F;">for</span> batch_idx, (data_test, target) <span class="kw" style="color: #003B4F;">in</span> <span class="bu" style="color: null;">enumerate</span>(train_loader):</span>
<span id="cb26-10">        <span class="co" style="color: #5E5E5E;"># Reshape data to input to the network</span></span>
<span id="cb26-11">        data_test <span class="op" style="color: #5E5E5E;">=</span> data_test.view(data_test.shape[<span class="dv" style="color: #AD0000;">0</span>], <span class="op" style="color: #5E5E5E;">-</span><span class="dv" style="color: #AD0000;">1</span>)</span>
<span id="cb26-12">        <span class="co" style="color: #5E5E5E;"># Forward pass</span></span>
<span id="cb26-13">        output <span class="op" style="color: #5E5E5E;">=</span> model(data_test)</span>
<span id="cb26-14">        loss <span class="op" style="color: #5E5E5E;">=</span> criterion(output, target)</span>
<span id="cb26-15">        <span class="co" style="color: #5E5E5E;"># Backward and optimize</span></span>
<span id="cb26-16">        optimizer.zero_grad()</span>
<span id="cb26-17">        loss.backward()</span>
<span id="cb26-18">        optimizer.step()</span>
<span id="cb26-19"></span>
<span id="cb26-20">        iteration_num <span class="op" style="color: #5E5E5E;">=</span> epoch <span class="op" style="color: #5E5E5E;">*</span> <span class="bu" style="color: null;">len</span>(train_loader) <span class="op" style="color: #5E5E5E;">+</span> batch_idx</span>
<span id="cb26-21">        </span>
<span id="cb26-22">        <span class="co" style="color: #5E5E5E;"># Write to tensorboard</span></span>
<span id="cb26-23">        writer.add_scalar(<span class="st" style="color: #20794D;">'Loss/train'</span>, loss.item(), iteration_num)</span>
<span id="cb26-24">        writer.add_scalar(<span class="st" style="color: #20794D;">'Accuracy/train'</span>, (output.argmax(dim<span class="op" style="color: #5E5E5E;">=</span><span class="dv" style="color: #AD0000;">1</span>) <span class="op" style="color: #5E5E5E;">==</span> target).<span class="bu" style="color: null;">float</span>().mean(), iteration_num)</span>
<span id="cb26-25"></span>
<span id="cb26-26">        <span class="co" style="color: #5E5E5E;"># Find test loss and accuracy</span></span>
<span id="cb26-27">        runing_loss <span class="op" style="color: #5E5E5E;">=</span> <span class="fl" style="color: #AD0000;">0.0</span></span>
<span id="cb26-28">        running_acc <span class="op" style="color: #5E5E5E;">=</span> <span class="fl" style="color: #AD0000;">0.0</span></span>
<span id="cb26-29">        <span class="cf" style="color: #003B4F;">with</span> torch.no_grad():</span>
<span id="cb26-30">            <span class="cf" style="color: #003B4F;">for</span> data_test, target_test <span class="kw" style="color: #003B4F;">in</span> val_loader:</span>
<span id="cb26-31">                data_test <span class="op" style="color: #5E5E5E;">=</span> data_test.view(data_test.shape[<span class="dv" style="color: #AD0000;">0</span>], <span class="op" style="color: #5E5E5E;">-</span><span class="dv" style="color: #AD0000;">1</span>)</span>
<span id="cb26-32">                output_test <span class="op" style="color: #5E5E5E;">=</span> model(data_test)</span>
<span id="cb26-33">                loss_test <span class="op" style="color: #5E5E5E;">=</span> criterion(output_test, target_test)</span>
<span id="cb26-34">                runing_loss <span class="op" style="color: #5E5E5E;">+=</span> loss_test.item()</span>
<span id="cb26-35">                running_acc <span class="op" style="color: #5E5E5E;">+=</span> (output_test.argmax(dim<span class="op" style="color: #5E5E5E;">=</span><span class="dv" style="color: #AD0000;">1</span>) <span class="op" style="color: #5E5E5E;">==</span> target_test).<span class="bu" style="color: null;">float</span>().mean()</span>
<span id="cb26-36">        writer.add_scalar(<span class="st" style="color: #20794D;">'Loss/validation'</span>, runing_loss <span class="op" style="color: #5E5E5E;">/</span> <span class="bu" style="color: null;">len</span>(val_loader), iteration_num)</span>
<span id="cb26-37">        writer.add_scalar(<span class="st" style="color: #20794D;">'Accuracy/validation'</span>, running_acc <span class="op" style="color: #5E5E5E;">/</span> <span class="bu" style="color: null;">len</span>(val_loader), iteration_num)</span>
<span id="cb26-38"></span>
<span id="cb26-39">        <span class="cf" style="color: #003B4F;">if</span> batch_idx <span class="op" style="color: #5E5E5E;">%</span> <span class="dv" style="color: #AD0000;">100</span> <span class="op" style="color: #5E5E5E;">==</span> <span class="dv" style="color: #AD0000;">0</span>:</span>
<span id="cb26-40">            <span class="bu" style="color: null;">print</span> (<span class="ss" style="color: #20794D;">f'Epoch [</span><span class="sc" style="color: #5E5E5E;">{</span>epoch<span class="op" style="color: #5E5E5E;">+</span><span class="dv" style="color: #AD0000;">1</span><span class="sc" style="color: #5E5E5E;">}</span><span class="ss" style="color: #20794D;">/</span><span class="sc" style="color: #5E5E5E;">{</span>num_epochs<span class="sc" style="color: #5E5E5E;">}</span><span class="ss" style="color: #20794D;">], Step [</span><span class="sc" style="color: #5E5E5E;">{</span>batch_idx<span class="sc" style="color: #5E5E5E;">}</span><span class="ss" style="color: #20794D;">/</span><span class="sc" style="color: #5E5E5E;">{</span><span class="bu" style="color: null;">len</span>(train_loader)<span class="sc" style="color: #5E5E5E;">}</span><span class="ss" style="color: #20794D;">], Loss: </span><span class="sc" style="color: #5E5E5E;">{</span>loss<span class="sc" style="color: #5E5E5E;">.</span>item()<span class="sc" style="color: #5E5E5E;">:.4f}</span><span class="ss" style="color: #20794D;">'</span>)</span></code></pre></div>
<div class="cell-output cell-output-stdout">
<pre><code>Epoch [1/1], Step [0/79], Loss: 2.3027</code></pre>
</div>
</div>
<div class="cell" data-execution_count="60">
<div class="sourceCode cell-code" id="cb28" style="background: #f1f3f5;"><pre class="sourceCode python code-with-copy"><code class="sourceCode python"><span id="cb28-1"><span class="co" style="color: #5E5E5E;"># Prediction on the saved image</span></span>
<span id="cb28-2"></span>
<span id="cb28-3"><span class="cf" style="color: #003B4F;">with</span> torch.no_grad():</span>
<span id="cb28-4">    out <span class="op" style="color: #5E5E5E;">=</span> model(saved_img[<span class="dv" style="color: #AD0000;">0</span>:<span class="dv" style="color: #AD0000;">1</span>])</span>
<span id="cb28-5">    probas <span class="op" style="color: #5E5E5E;">=</span> F.softmax(out, dim<span class="op" style="color: #5E5E5E;">=</span><span class="dv" style="color: #AD0000;">1</span>)</span>
<span id="cb28-6">    pred <span class="op" style="color: #5E5E5E;">=</span> torch.argmax(probas, dim<span class="op" style="color: #5E5E5E;">=</span><span class="dv" style="color: #AD0000;">1</span>).item()</span>
<span id="cb28-7">    <span class="bu" style="color: null;">print</span>(pred, saved_target[<span class="dv" style="color: #AD0000;">0</span>].item())</span></code></pre></div>
<div class="cell-output cell-output-stdout">
<pre><code>1 1</code></pre>
</div>
</div>
<div class="cell" data-execution_count="98">
<div class="sourceCode cell-code" id="cb30" style="background: #f1f3f5;"><pre class="sourceCode python code-with-copy"><code class="sourceCode python"><span id="cb30-1"><span class="co" style="color: #5E5E5E;"># Create a HParam dictionary for batch size and learning rate for tensorboard</span></span>
<span id="cb30-2"></span>
<span id="cb30-3">b_sizes <span class="op" style="color: #5E5E5E;">=</span> [<span class="dv" style="color: #AD0000;">32</span>, <span class="dv" style="color: #AD0000;">64</span>, <span class="dv" style="color: #AD0000;">512</span>]</span>
<span id="cb30-4">lrs <span class="op" style="color: #5E5E5E;">=</span> [<span class="fl" style="color: #AD0000;">0.001</span>, <span class="fl" style="color: #AD0000;">0.01</span>, <span class="fl" style="color: #AD0000;">0.1</span>]</span>
<span id="cb30-5"></span>
<span id="cb30-6"></span>
<span id="cb30-7">num_epochs  <span class="op" style="color: #5E5E5E;">=</span> <span class="dv" style="color: #AD0000;">1</span></span>
<span id="cb30-8"><span class="cf" style="color: #003B4F;">for</span> epoch <span class="kw" style="color: #003B4F;">in</span> <span class="bu" style="color: null;">range</span>(num_epochs):</span>
<span id="cb30-9">    <span class="cf" style="color: #003B4F;">for</span> b_size <span class="kw" style="color: #003B4F;">in</span> b_sizes:</span>
<span id="cb30-10">        train_loader <span class="op" style="color: #5E5E5E;">=</span> DataLoader(train_data, batch_size<span class="op" style="color: #5E5E5E;">=</span>b_size, shuffle<span class="op" style="color: #5E5E5E;">=</span><span class="va" style="color: #111111;">True</span>)</span>
<span id="cb30-11">        model <span class="op" style="color: #5E5E5E;">=</span> MNISTClassifier()</span>
<span id="cb30-12">        <span class="cf" style="color: #003B4F;">for</span> lr <span class="kw" style="color: #003B4F;">in</span> lrs:</span>
<span id="cb30-13">            <span class="bu" style="color: null;">print</span>(<span class="ss" style="color: #20794D;">f"Batch size: </span><span class="sc" style="color: #5E5E5E;">{</span>b_size<span class="sc" style="color: #5E5E5E;">}</span><span class="ss" style="color: #20794D;">, Learning rate: </span><span class="sc" style="color: #5E5E5E;">{</span>lr<span class="sc" style="color: #5E5E5E;">}</span><span class="ss" style="color: #20794D;">"</span>)</span>
<span id="cb30-14">            optimizer <span class="op" style="color: #5E5E5E;">=</span> optim.Adam(model.parameters(), lr<span class="op" style="color: #5E5E5E;">=</span>lr)</span>
<span id="cb30-15">            criterion <span class="op" style="color: #5E5E5E;">=</span> nn.CrossEntropyLoss()</span>
<span id="cb30-16">            <span class="cf" style="color: #003B4F;">for</span> batch_idx, (data, target) <span class="kw" style="color: #003B4F;">in</span> <span class="bu" style="color: null;">enumerate</span>(train_loader):</span>
<span id="cb30-17">                <span class="co" style="color: #5E5E5E;"># Reshape data to input to the network</span></span>
<span id="cb30-18">                data <span class="op" style="color: #5E5E5E;">=</span> data.view(data.shape[<span class="dv" style="color: #AD0000;">0</span>], <span class="op" style="color: #5E5E5E;">-</span><span class="dv" style="color: #AD0000;">1</span>)</span>
<span id="cb30-19">                <span class="co" style="color: #5E5E5E;"># Forward pass</span></span>
<span id="cb30-20">                output <span class="op" style="color: #5E5E5E;">=</span> model(data)</span>
<span id="cb30-21">                loss <span class="op" style="color: #5E5E5E;">=</span> criterion(output, target)</span>
<span id="cb30-22">                <span class="co" style="color: #5E5E5E;"># Backward and optimize</span></span>
<span id="cb30-23">                optimizer.zero_grad()</span>
<span id="cb30-24">                loss.backward()</span>
<span id="cb30-25">                optimizer.step()</span>
<span id="cb30-26">                </span>
<span id="cb30-27"></span>
<span id="cb30-28">                <span class="co" style="color: #5E5E5E;"># Write loss as scalar to Tensorboard and hyperparameters to HParams</span></span>
<span id="cb30-29">                writer.add_scalar(<span class="st" style="color: #20794D;">'training loss'</span>,</span>
<span id="cb30-30">                                loss.item(),</span>
<span id="cb30-31">                                epoch <span class="op" style="color: #5E5E5E;">*</span> <span class="bu" style="color: null;">len</span>(train_loader) <span class="op" style="color: #5E5E5E;">+</span> batch_idx)</span>
<span id="cb30-32">                writer.add_hparams({<span class="st" style="color: #20794D;">'lr'</span>: lr, <span class="st" style="color: #20794D;">'bsize'</span>: b_size},</span>
<span id="cb30-33">                                { <span class="st" style="color: #20794D;">'hparam/loss'</span>: loss.item()})</span>
<span id="cb30-34">                </span>
<span id="cb30-35"></span>
<span id="cb30-36">    </span></code></pre></div>
<div class="cell-output cell-output-stdout">
<pre><code>Batch size: 32, Learning rate: 0.001
Batch size: 32, Learning rate: 0.01
Batch size: 32, Learning rate: 0.1
Batch size: 64, Learning rate: 0.001
Batch size: 64, Learning rate: 0.01
Batch size: 64, Learning rate: 0.1
Batch size: 512, Learning rate: 0.001
Batch size: 512, Learning rate: 0.01
Batch size: 512, Learning rate: 0.1</code></pre>
</div>
</div>



 ]]></description>
  <guid>https://github.com/nipunbatra/ml2023/notebooks/posts/nn.html</guid>
  <pubDate>Tue, 28 Feb 2023 00:00:00 GMT</pubDate>
</item>
<item>
  <title>Gradient Descent</title>
  <dc:creator>Nipun Batra</dc:creator>
  <link>https://github.com/nipunbatra/ml2023/notebooks/posts/gd.html</link>
  <description><![CDATA[ 



<div class="cell" data-execution_count="1">
<div class="sourceCode cell-code" id="cb1" style="background: #f1f3f5;"><pre class="sourceCode python code-with-copy"><code class="sourceCode python"><span id="cb1-1"><span class="im" style="color: #00769E;">import</span> jax.numpy <span class="im" style="color: #00769E;">as</span> jnp</span>
<span id="cb1-2"><span class="im" style="color: #00769E;">from</span> jax <span class="im" style="color: #00769E;">import</span> random, jit, vmap, grad, jacfwd, jacrev, hessian, value_and_grad</span>
<span id="cb1-3"><span class="im" style="color: #00769E;">import</span> matplotlib.pyplot <span class="im" style="color: #00769E;">as</span> plt</span>
<span id="cb1-4"><span class="op" style="color: #5E5E5E;">%</span>matplotlib inline</span>
<span id="cb1-5"><span class="op" style="color: #5E5E5E;">%</span>config InlineBackend.figure_format <span class="op" style="color: #5E5E5E;">=</span> <span class="st" style="color: #20794D;">'retina'</span></span></code></pre></div>
</div>
<div class="cell" data-execution_count="35">
<div class="sourceCode cell-code" id="cb2" style="background: #f1f3f5;"><pre class="sourceCode python code-with-copy"><code class="sourceCode python"><span id="cb2-1"><span class="co" style="color: #5E5E5E;"># Simple 2D quadratic function</span></span>
<span id="cb2-2"><span class="kw" style="color: #003B4F;">def</span> f(theta_0, theta_1):</span>
<span id="cb2-3">    <span class="cf" style="color: #003B4F;">return</span> theta_0<span class="op" style="color: #5E5E5E;">**</span><span class="dv" style="color: #AD0000;">2</span> <span class="op" style="color: #5E5E5E;">+</span> theta_1<span class="op" style="color: #5E5E5E;">**</span><span class="dv" style="color: #AD0000;">2</span></span></code></pre></div>
</div>
<div class="cell" data-execution_count="222">
<div class="sourceCode cell-code" id="cb3" style="background: #f1f3f5;"><pre class="sourceCode python code-with-copy"><code class="sourceCode python"><span id="cb3-1"><span class="co" style="color: #5E5E5E;"># Plot surface and contour plots for f using jax.vmap</span></span>
<span id="cb3-2"><span class="kw" style="color: #003B4F;">def</span> create_plot(f):</span>
<span id="cb3-3">    theta_0 <span class="op" style="color: #5E5E5E;">=</span> jnp.linspace(<span class="op" style="color: #5E5E5E;">-</span><span class="dv" style="color: #AD0000;">2</span>, <span class="dv" style="color: #AD0000;">2</span>, <span class="dv" style="color: #AD0000;">100</span>)</span>
<span id="cb3-4">    theta_1 <span class="op" style="color: #5E5E5E;">=</span> jnp.linspace(<span class="op" style="color: #5E5E5E;">-</span><span class="dv" style="color: #AD0000;">2</span>, <span class="dv" style="color: #AD0000;">2</span>, <span class="dv" style="color: #AD0000;">100</span>)</span>
<span id="cb3-5">    theta_0, theta_1 <span class="op" style="color: #5E5E5E;">=</span> jnp.meshgrid(theta_0, theta_1)</span>
<span id="cb3-6">    f_vmap <span class="op" style="color: #5E5E5E;">=</span> jnp.vectorize(f, signature<span class="op" style="color: #5E5E5E;">=</span><span class="st" style="color: #20794D;">'(),()-&gt;()'</span>)</span>
<span id="cb3-7">    f_vals <span class="op" style="color: #5E5E5E;">=</span> f_vmap(theta_0, theta_1)</span>
<span id="cb3-8"></span>
<span id="cb3-9">    <span class="co" style="color: #5E5E5E;"># Create a figure with 2 subplots (3d surface and 2d contour)</span></span>
<span id="cb3-10">    fig <span class="op" style="color: #5E5E5E;">=</span> plt.figure(figsize<span class="op" style="color: #5E5E5E;">=</span>(<span class="dv" style="color: #AD0000;">12</span>, <span class="dv" style="color: #AD0000;">4</span>))</span>
<span id="cb3-11">    ax1 <span class="op" style="color: #5E5E5E;">=</span> fig.add_subplot(<span class="dv" style="color: #AD0000;">121</span>, projection<span class="op" style="color: #5E5E5E;">=</span><span class="st" style="color: #20794D;">'3d'</span>)</span>
<span id="cb3-12">    ax2 <span class="op" style="color: #5E5E5E;">=</span> fig.add_subplot(<span class="dv" style="color: #AD0000;">122</span>)</span>
<span id="cb3-13"></span>
<span id="cb3-14">    <span class="co" style="color: #5E5E5E;"># Plot surface and contour plots</span></span>
<span id="cb3-15">    temp <span class="op" style="color: #5E5E5E;">=</span> ax1.plot_surface(theta_0, theta_1, f_vals, cmap<span class="op" style="color: #5E5E5E;">=</span><span class="st" style="color: #20794D;">'viridis'</span>)</span>
<span id="cb3-16"></span>
<span id="cb3-17">    <span class="co" style="color: #5E5E5E;"># Filled contour plot and marked level set values using clabel</span></span>
<span id="cb3-18">    <span class="co" style="color: #5E5E5E;"># Set 20 levels between min and max of f_vals</span></span>
<span id="cb3-19">    levels <span class="op" style="color: #5E5E5E;">=</span> jnp.linspace(<span class="fl" style="color: #AD0000;">0.5</span>, <span class="bu" style="color: null;">int</span>(jnp.<span class="bu" style="color: null;">max</span>(f_vals))<span class="op" style="color: #5E5E5E;">+</span><span class="fl" style="color: #AD0000;">0.5</span>, <span class="dv" style="color: #AD0000;">11</span>)</span>
<span id="cb3-20"></span>
<span id="cb3-21">    contours <span class="op" style="color: #5E5E5E;">=</span> ax2.contour(theta_0, theta_1, f_vals, levels<span class="op" style="color: #5E5E5E;">=</span>levels, cmap<span class="op" style="color: #5E5E5E;">=</span><span class="st" style="color: #20794D;">'viridis'</span>)</span>
<span id="cb3-22">    ax2.clabel(contours, inline<span class="op" style="color: #5E5E5E;">=</span><span class="va" style="color: #111111;">True</span>, fontsize<span class="op" style="color: #5E5E5E;">=</span><span class="dv" style="color: #AD0000;">8</span>)</span>
<span id="cb3-23"></span>
<span id="cb3-24">    <span class="co" style="color: #5E5E5E;"># Fill using imshow</span></span>
<span id="cb3-25">    ax2.imshow(f_vals, extent<span class="op" style="color: #5E5E5E;">=</span>[<span class="op" style="color: #5E5E5E;">-</span><span class="dv" style="color: #AD0000;">2</span>, <span class="dv" style="color: #AD0000;">2</span>, <span class="op" style="color: #5E5E5E;">-</span><span class="dv" style="color: #AD0000;">2</span>, <span class="dv" style="color: #AD0000;">2</span>], origin<span class="op" style="color: #5E5E5E;">=</span><span class="st" style="color: #20794D;">'lower'</span>, cmap<span class="op" style="color: #5E5E5E;">=</span><span class="st" style="color: #20794D;">'viridis'</span>, alpha<span class="op" style="color: #5E5E5E;">=</span><span class="fl" style="color: #AD0000;">0.5</span>)</span>
<span id="cb3-26">  </span>
<span id="cb3-27">    <span class="co" style="color: #5E5E5E;"># Find the global minimum of f using jax.scipy.optimize.minimize</span></span>
<span id="cb3-28">    <span class="im" style="color: #00769E;">from</span> jax.scipy.optimize <span class="im" style="color: #00769E;">import</span> minimize</span>
<span id="cb3-29">    <span class="kw" style="color: #003B4F;">def</span> f_min(theta):</span>
<span id="cb3-30">        <span class="cf" style="color: #003B4F;">return</span> f(theta[<span class="dv" style="color: #AD0000;">0</span>], theta[<span class="dv" style="color: #AD0000;">1</span>])</span>
<span id="cb3-31">    res <span class="op" style="color: #5E5E5E;">=</span> minimize(f_min, jnp.array([<span class="fl" style="color: #AD0000;">0.</span>, <span class="fl" style="color: #AD0000;">0.</span>]), method<span class="op" style="color: #5E5E5E;">=</span><span class="st" style="color: #20794D;">'BFGS'</span>)</span>
<span id="cb3-32">    theta_min <span class="op" style="color: #5E5E5E;">=</span> res.x</span>
<span id="cb3-33">    f_min <span class="op" style="color: #5E5E5E;">=</span> res.fun</span>
<span id="cb3-34">    <span class="bu" style="color: null;">print</span>(<span class="ss" style="color: #20794D;">f'Global minimum: </span><span class="sc" style="color: #5E5E5E;">{</span>f_min<span class="sc" style="color: #5E5E5E;">}</span><span class="ss" style="color: #20794D;"> at </span><span class="sc" style="color: #5E5E5E;">{</span>theta_min<span class="sc" style="color: #5E5E5E;">}</span><span class="ss" style="color: #20794D;">'</span>)</span>
<span id="cb3-35">    <span class="co" style="color: #5E5E5E;"># Plot the global minimum</span></span>
<span id="cb3-36">    ax2.scatter(theta_min[<span class="dv" style="color: #AD0000;">0</span>], theta_min[<span class="dv" style="color: #AD0000;">1</span>], marker<span class="op" style="color: #5E5E5E;">=</span><span class="st" style="color: #20794D;">'x'</span>, color<span class="op" style="color: #5E5E5E;">=</span><span class="st" style="color: #20794D;">'red'</span>, s<span class="op" style="color: #5E5E5E;">=</span><span class="dv" style="color: #AD0000;">100</span>)</span>
<span id="cb3-37"></span>
<span id="cb3-38">    </span>
<span id="cb3-39"></span>
<span id="cb3-40">    ax2.set_aspect(<span class="st" style="color: #20794D;">'equal'</span>)</span>
<span id="cb3-41"></span>
<span id="cb3-42">    <span class="co" style="color: #5E5E5E;"># Add labels</span></span>
<span id="cb3-43">    ax1.set_xlabel(<span class="vs" style="color: #20794D;">r'$\theta_0$'</span>)</span>
<span id="cb3-44">    ax1.set_ylabel(<span class="vs" style="color: #20794D;">r'$\theta_1$'</span>)</span>
<span id="cb3-45">    ax1.set_zlabel(<span class="vs" style="color: #20794D;">r'$f(\theta_0, \theta_1)$'</span>)</span>
<span id="cb3-46">    ax2.set_xlabel(<span class="vs" style="color: #20794D;">r'$\theta_0$'</span>)</span>
<span id="cb3-47">    ax2.set_ylabel(<span class="vs" style="color: #20794D;">r'$\theta_1$'</span>)</span>
<span id="cb3-48"></span>
<span id="cb3-49">    <span class="co" style="color: #5E5E5E;"># Add colorbar</span></span>
<span id="cb3-50">    fig.colorbar(temp, ax<span class="op" style="color: #5E5E5E;">=</span>ax1, shrink<span class="op" style="color: #5E5E5E;">=</span><span class="fl" style="color: #AD0000;">0.5</span>, aspect<span class="op" style="color: #5E5E5E;">=</span><span class="dv" style="color: #AD0000;">5</span>)</span>
<span id="cb3-51"></span>
<span id="cb3-52">    <span class="co" style="color: #5E5E5E;"># Tight layout</span></span>
<span id="cb3-53">    plt.tight_layout()</span></code></pre></div>
</div>
<div class="cell" data-execution_count="223">
<div class="sourceCode cell-code" id="cb4" style="background: #f1f3f5;"><pre class="sourceCode python code-with-copy"><code class="sourceCode python"><span id="cb4-1">create_plot(f)</span></code></pre></div>
<div class="cell-output cell-output-stdout">
<pre><code>Global minimum: 0.0 at [0. 0.]</code></pre>
</div>
<div class="cell-output cell-output-display">
<p><img src="https://github.com/nipunbatra/ml2023/notebooks/posts/gd_files/figure-html/cell-5-output-2.png" class="img-fluid"></p>
</div>
</div>
<div class="cell" data-execution_count="224">
<div class="sourceCode cell-code" id="cb6" style="background: #f1f3f5;"><pre class="sourceCode python code-with-copy"><code class="sourceCode python"><span id="cb6-1"><span class="co" style="color: #5E5E5E;"># Gradient of f at a given point</span></span>
<span id="cb6-2"><span class="kw" style="color: #003B4F;">def</span> grad_f(theta_0, theta_1):</span>
<span id="cb6-3">    <span class="cf" style="color: #003B4F;">return</span> grad(f, argnums<span class="op" style="color: #5E5E5E;">=</span>(<span class="dv" style="color: #AD0000;">0</span>, <span class="dv" style="color: #AD0000;">1</span>))(theta_0, theta_1)</span></code></pre></div>
</div>
<div class="cell" data-execution_count="225">
<div class="sourceCode cell-code" id="cb7" style="background: #f1f3f5;"><pre class="sourceCode python code-with-copy"><code class="sourceCode python"><span id="cb7-1">grad_f(<span class="fl" style="color: #AD0000;">2.</span>, <span class="fl" style="color: #AD0000;">1.</span>)</span></code></pre></div>
<div class="cell-output cell-output-display" data-execution_count="225">
<pre><code>(Array(4., dtype=float32, weak_type=True),
 Array(2., dtype=float32, weak_type=True))</code></pre>
</div>
</div>
<div class="cell" data-execution_count="226">
<div class="sourceCode cell-code" id="cb9" style="background: #f1f3f5;"><pre class="sourceCode python code-with-copy"><code class="sourceCode python"><span id="cb9-1">theta <span class="op" style="color: #5E5E5E;">=</span> jnp.array([<span class="fl" style="color: #AD0000;">2.</span>, <span class="fl" style="color: #AD0000;">1.</span>])</span>
<span id="cb9-2">theta</span></code></pre></div>
<div class="cell-output cell-output-display" data-execution_count="226">
<pre><code>Array([2., 1.], dtype=float32)</code></pre>
</div>
</div>
<div class="cell" data-execution_count="227">
<div class="sourceCode cell-code" id="cb11" style="background: #f1f3f5;"><pre class="sourceCode python code-with-copy"><code class="sourceCode python"><span id="cb11-1">f(<span class="op" style="color: #5E5E5E;">*</span>theta)</span></code></pre></div>
<div class="cell-output cell-output-display" data-execution_count="227">
<pre><code>Array(5., dtype=float32)</code></pre>
</div>
</div>
<div class="cell" data-execution_count="228">
<div class="sourceCode cell-code" id="cb13" style="background: #f1f3f5;"><pre class="sourceCode python code-with-copy"><code class="sourceCode python"><span id="cb13-1">jnp.array(grad_f(<span class="op" style="color: #5E5E5E;">*</span>theta))</span></code></pre></div>
<div class="cell-output cell-output-display" data-execution_count="228">
<pre><code>Array([4., 2.], dtype=float32)</code></pre>
</div>
</div>
<div class="cell" data-execution_count="229">
<div class="sourceCode cell-code" id="cb15" style="background: #f1f3f5;"><pre class="sourceCode python code-with-copy"><code class="sourceCode python"><span id="cb15-1">lr <span class="op" style="color: #5E5E5E;">=</span> <span class="fl" style="color: #AD0000;">0.1</span></span>
<span id="cb15-2">theta <span class="op" style="color: #5E5E5E;">=</span> theta<span class="op" style="color: #5E5E5E;">-</span> lr <span class="op" style="color: #5E5E5E;">*</span> jnp.array(grad_f(<span class="op" style="color: #5E5E5E;">*</span>theta))</span>
<span id="cb15-3">theta</span></code></pre></div>
<div class="cell-output cell-output-display" data-execution_count="229">
<pre><code>Array([1.6, 0.8], dtype=float32)</code></pre>
</div>
</div>
<div class="cell" data-execution_count="230">
<div class="sourceCode cell-code" id="cb17" style="background: #f1f3f5;"><pre class="sourceCode python code-with-copy"><code class="sourceCode python"><span id="cb17-1">f(<span class="op" style="color: #5E5E5E;">*</span>theta)</span></code></pre></div>
<div class="cell-output cell-output-display" data-execution_count="230">
<pre><code>Array(3.2000003, dtype=float32)</code></pre>
</div>
</div>
<div class="cell" data-execution_count="231">
<div class="sourceCode cell-code" id="cb19" style="background: #f1f3f5;"><pre class="sourceCode python code-with-copy"><code class="sourceCode python"><span id="cb19-1"><span class="co" style="color: #5E5E5E;"># Gradient descent loop</span></span>
<span id="cb19-2"></span>
<span id="cb19-3"><span class="co" style="color: #5E5E5E;"># Initial parameters</span></span>
<span id="cb19-4">theta <span class="op" style="color: #5E5E5E;">=</span> jnp.array([<span class="fl" style="color: #AD0000;">2.</span>, <span class="fl" style="color: #AD0000;">1.</span>])</span>
<span id="cb19-5"></span>
<span id="cb19-6"><span class="co" style="color: #5E5E5E;"># Store parameters and function values for plotting</span></span>
<span id="cb19-7">theta_vals <span class="op" style="color: #5E5E5E;">=</span> [theta]</span>
<span id="cb19-8">f_vals <span class="op" style="color: #5E5E5E;">=</span> [f(<span class="op" style="color: #5E5E5E;">*</span>theta)]</span>
<span id="cb19-9"></span>
<span id="cb19-10"><span class="cf" style="color: #003B4F;">for</span> i <span class="kw" style="color: #003B4F;">in</span> <span class="bu" style="color: null;">range</span>(<span class="dv" style="color: #AD0000;">10</span>):</span>
<span id="cb19-11">    theta <span class="op" style="color: #5E5E5E;">=</span> theta <span class="op" style="color: #5E5E5E;">-</span> lr <span class="op" style="color: #5E5E5E;">*</span> jnp.array(grad_f(<span class="op" style="color: #5E5E5E;">*</span>theta))</span>
<span id="cb19-12">    theta_vals.append(theta)</span>
<span id="cb19-13">    f_vals.append(f(<span class="op" style="color: #5E5E5E;">*</span>theta))</span>
<span id="cb19-14">    <span class="bu" style="color: null;">print</span>(<span class="ss" style="color: #20794D;">f'Iteration </span><span class="sc" style="color: #5E5E5E;">{</span>i<span class="sc" style="color: #5E5E5E;">}</span><span class="ss" style="color: #20794D;">: theta = </span><span class="sc" style="color: #5E5E5E;">{</span>theta<span class="sc" style="color: #5E5E5E;">}</span><span class="ss" style="color: #20794D;">, f = </span><span class="sc" style="color: #5E5E5E;">{</span>f(<span class="op" style="color: #5E5E5E;">*</span>theta)<span class="sc" style="color: #5E5E5E;">}</span><span class="ss" style="color: #20794D;">'</span>)</span>
<span id="cb19-15"></span>
<span id="cb19-16">theta_vals <span class="op" style="color: #5E5E5E;">=</span> jnp.array(theta_vals)</span>
<span id="cb19-17">f_vals <span class="op" style="color: #5E5E5E;">=</span> jnp.array(f_vals)</span></code></pre></div>
<div class="cell-output cell-output-stdout">
<pre><code>Iteration 0: theta = [1.6 0.8], f = 3.200000286102295
Iteration 1: theta = [1.28 0.64], f = 2.047999858856201
Iteration 2: theta = [1.0239999  0.51199996], f = 1.3107198476791382
Iteration 3: theta = [0.8191999  0.40959996], f = 0.8388606309890747
Iteration 4: theta = [0.6553599  0.32767996], f = 0.5368707776069641
Iteration 5: theta = [0.52428794 0.26214397], f = 0.34359729290008545
Iteration 6: theta = [0.41943035 0.20971517], f = 0.21990226209163666
Iteration 7: theta = [0.3355443  0.16777214], f = 0.14073745906352997
Iteration 8: theta = [0.26843542 0.13421771], f = 0.09007196873426437
Iteration 9: theta = [0.21474834 0.10737417], f = 0.05764605849981308</code></pre>
</div>
</div>
<div class="cell" data-execution_count="232">
<div class="sourceCode cell-code" id="cb21" style="background: #f1f3f5;"><pre class="sourceCode python code-with-copy"><code class="sourceCode python"><span id="cb21-1"><span class="co" style="color: #5E5E5E;"># Plot the cost vs iterations</span></span>
<span id="cb21-2">plt.plot(f_vals)</span></code></pre></div>
<div class="cell-output cell-output-display">
<p><img src="https://github.com/nipunbatra/ml2023/notebooks/posts/gd_files/figure-html/cell-14-output-1.png" class="img-fluid"></p>
</div>
</div>
<div class="cell" data-execution_count="233">
<div class="sourceCode cell-code" id="cb22" style="background: #f1f3f5;"><pre class="sourceCode python code-with-copy"><code class="sourceCode python"><span id="cb22-1"><span class="co" style="color: #5E5E5E;"># Simple dataset for linear regression</span></span>
<span id="cb22-2"></span>
<span id="cb22-3">X <span class="op" style="color: #5E5E5E;">=</span> jnp.array([[<span class="fl" style="color: #AD0000;">1.</span>], [<span class="fl" style="color: #AD0000;">2.</span>], [<span class="fl" style="color: #AD0000;">3.</span>]])</span>
<span id="cb22-4">y <span class="op" style="color: #5E5E5E;">=</span> jnp.array([<span class="fl" style="color: #AD0000;">1.</span>, <span class="fl" style="color: #AD0000;">2.2</span>, <span class="fl" style="color: #AD0000;">2.8</span>])</span>
<span id="cb22-5"></span>
<span id="cb22-6"><span class="im" style="color: #00769E;">from</span> sklearn.linear_model <span class="im" style="color: #00769E;">import</span> LinearRegression</span>
<span id="cb22-7">lr <span class="op" style="color: #5E5E5E;">=</span> LinearRegression()</span>
<span id="cb22-8">lr.fit(X, y)</span></code></pre></div>
<div class="cell-output cell-output-display" data-execution_count="233">
<style>#sk-container-id-5 {color: black;background-color: white;}#sk-container-id-5 pre{padding: 0;}#sk-container-id-5 div.sk-toggleable {background-color: white;}#sk-container-id-5 label.sk-toggleable__label {cursor: pointer;display: block;width: 100%;margin-bottom: 0;padding: 0.3em;box-sizing: border-box;text-align: center;}#sk-container-id-5 label.sk-toggleable__label-arrow:before {content: "▸";float: left;margin-right: 0.25em;color: #696969;}#sk-container-id-5 label.sk-toggleable__label-arrow:hover:before {color: black;}#sk-container-id-5 div.sk-estimator:hover label.sk-toggleable__label-arrow:before {color: black;}#sk-container-id-5 div.sk-toggleable__content {max-height: 0;max-width: 0;overflow: hidden;text-align: left;background-color: #f0f8ff;}#sk-container-id-5 div.sk-toggleable__content pre {margin: 0.2em;color: black;border-radius: 0.25em;background-color: #f0f8ff;}#sk-container-id-5 input.sk-toggleable__control:checked~div.sk-toggleable__content {max-height: 200px;max-width: 100%;overflow: auto;}#sk-container-id-5 input.sk-toggleable__control:checked~label.sk-toggleable__label-arrow:before {content: "▾";}#sk-container-id-5 div.sk-estimator input.sk-toggleable__control:checked~label.sk-toggleable__label {background-color: #d4ebff;}#sk-container-id-5 div.sk-label input.sk-toggleable__control:checked~label.sk-toggleable__label {background-color: #d4ebff;}#sk-container-id-5 input.sk-hidden--visually {border: 0;clip: rect(1px 1px 1px 1px);clip: rect(1px, 1px, 1px, 1px);height: 1px;margin: -1px;overflow: hidden;padding: 0;position: absolute;width: 1px;}#sk-container-id-5 div.sk-estimator {font-family: monospace;background-color: #f0f8ff;border: 1px dotted black;border-radius: 0.25em;box-sizing: border-box;margin-bottom: 0.5em;}#sk-container-id-5 div.sk-estimator:hover {background-color: #d4ebff;}#sk-container-id-5 div.sk-parallel-item::after {content: "";width: 100%;border-bottom: 1px solid gray;flex-grow: 1;}#sk-container-id-5 div.sk-label:hover label.sk-toggleable__label {background-color: #d4ebff;}#sk-container-id-5 div.sk-serial::before {content: "";position: absolute;border-left: 1px solid gray;box-sizing: border-box;top: 0;bottom: 0;left: 50%;z-index: 0;}#sk-container-id-5 div.sk-serial {display: flex;flex-direction: column;align-items: center;background-color: white;padding-right: 0.2em;padding-left: 0.2em;position: relative;}#sk-container-id-5 div.sk-item {position: relative;z-index: 1;}#sk-container-id-5 div.sk-parallel {display: flex;align-items: stretch;justify-content: center;background-color: white;position: relative;}#sk-container-id-5 div.sk-item::before, #sk-container-id-5 div.sk-parallel-item::before {content: "";position: absolute;border-left: 1px solid gray;box-sizing: border-box;top: 0;bottom: 0;left: 50%;z-index: -1;}#sk-container-id-5 div.sk-parallel-item {display: flex;flex-direction: column;z-index: 1;position: relative;background-color: white;}#sk-container-id-5 div.sk-parallel-item:first-child::after {align-self: flex-end;width: 50%;}#sk-container-id-5 div.sk-parallel-item:last-child::after {align-self: flex-start;width: 50%;}#sk-container-id-5 div.sk-parallel-item:only-child::after {width: 0;}#sk-container-id-5 div.sk-dashed-wrapped {border: 1px dashed gray;margin: 0 0.4em 0.5em 0.4em;box-sizing: border-box;padding-bottom: 0.4em;background-color: white;}#sk-container-id-5 div.sk-label label {font-family: monospace;font-weight: bold;display: inline-block;line-height: 1.2em;}#sk-container-id-5 div.sk-label-container {text-align: center;}#sk-container-id-5 div.sk-container {/* jupyter's `normalize.less` sets `[hidden] { display: none; }` but bootstrap.min.css set `[hidden] { display: none !important; }` so we also need the `!important` here to be able to override the default hidden behavior on the sphinx rendered scikit-learn.org. See: https://github.com/scikit-learn/scikit-learn/issues/21755 */display: inline-block !important;position: relative;}#sk-container-id-5 div.sk-text-repr-fallback {display: none;}</style><div id="sk-container-id-5" class="sk-top-container"><div class="sk-text-repr-fallback"><pre>LinearRegression()</pre><b>In a Jupyter environment, please rerun this cell to show the HTML representation or trust the notebook. <br>On GitHub, the HTML representation is unable to render, please try loading this page with nbviewer.org.</b></div><div class="sk-container" hidden=""><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="sk-estimator-id-5" type="checkbox" checked=""><label for="sk-estimator-id-5" class="sk-toggleable__label sk-toggleable__label-arrow">LinearRegression</label><div class="sk-toggleable__content"><pre>LinearRegression()</pre></div></div></div></div></div>
</div>
</div>
<div class="cell" data-execution_count="234">
<div class="sourceCode cell-code" id="cb23" style="background: #f1f3f5;"><pre class="sourceCode python code-with-copy"><code class="sourceCode python"><span id="cb23-1">lr.coef_, lr.intercept_</span></code></pre></div>
<div class="cell-output cell-output-display" data-execution_count="234">
<pre><code>(array([0.9000001], dtype=float32), 0.19999981)</code></pre>
</div>
</div>
<div class="cell" data-execution_count="235">
<div class="sourceCode cell-code" id="cb25" style="background: #f1f3f5;"><pre class="sourceCode python code-with-copy"><code class="sourceCode python"><span id="cb25-1"><span class="co" style="color: #5E5E5E;"># Cost function for linear regression using jax.vmap</span></span>
<span id="cb25-2"><span class="kw" style="color: #003B4F;">def</span> cost(theta_0, theta_1):</span>
<span id="cb25-3">    y_hat <span class="op" style="color: #5E5E5E;">=</span> (theta_0 <span class="op" style="color: #5E5E5E;">+</span> theta_1 <span class="op" style="color: #5E5E5E;">*</span> X).flatten()</span>
<span id="cb25-4">    <span class="co" style="color: #5E5E5E;">#print(y_hat, y, y-y_hat, (y-y_hat)**2)</span></span>
<span id="cb25-5">    <span class="cf" style="color: #003B4F;">return</span> jnp.mean((y_hat<span class="op" style="color: #5E5E5E;">-</span> y)<span class="op" style="color: #5E5E5E;">**</span><span class="dv" style="color: #AD0000;">2</span>)</span>
<span id="cb25-6">    </span>
<span id="cb25-7"><span class="co" style="color: #5E5E5E;"># Plot surface and contour plots for cost function</span></span>
<span id="cb25-8"><span class="co" style="color: #5E5E5E;">#create_plot(cost)</span></span></code></pre></div>
</div>
<div class="cell" data-execution_count="236">
<div class="sourceCode cell-code" id="cb26" style="background: #f1f3f5;"><pre class="sourceCode python code-with-copy"><code class="sourceCode python"><span id="cb26-1">cost(<span class="fl" style="color: #AD0000;">2.0</span>, <span class="fl" style="color: #AD0000;">2.0</span>)</span></code></pre></div>
<div class="cell-output cell-output-display" data-execution_count="236">
<pre><code>Array(16.826666, dtype=float32)</code></pre>
</div>
</div>
<div class="cell" data-execution_count="237">
<div class="sourceCode cell-code" id="cb28" style="background: #f1f3f5;"><pre class="sourceCode python code-with-copy"><code class="sourceCode python"><span id="cb28-1">(<span class="dv" style="color: #AD0000;">3</span><span class="op" style="color: #5E5E5E;">**</span><span class="dv" style="color: #AD0000;">2</span> <span class="op" style="color: #5E5E5E;">+</span> <span class="fl" style="color: #AD0000;">3.8</span><span class="op" style="color: #5E5E5E;">**</span><span class="dv" style="color: #AD0000;">2</span> <span class="op" style="color: #5E5E5E;">+</span> <span class="fl" style="color: #AD0000;">5.2</span><span class="op" style="color: #5E5E5E;">**</span><span class="dv" style="color: #AD0000;">2</span>)<span class="op" style="color: #5E5E5E;">/</span><span class="fl" style="color: #AD0000;">3.</span></span></code></pre></div>
<div class="cell-output cell-output-display" data-execution_count="237">
<pre><code>16.826666666666668</code></pre>
</div>
</div>
<div class="cell" data-execution_count="238">
<div class="sourceCode cell-code" id="cb30" style="background: #f1f3f5;"><pre class="sourceCode python code-with-copy"><code class="sourceCode python"><span id="cb30-1"><span class="co" style="color: #5E5E5E;"># Gradient of cost function at a given point</span></span>
<span id="cb30-2"><span class="kw" style="color: #003B4F;">def</span> grad_cost(theta_0, theta_1):</span>
<span id="cb30-3">    <span class="cf" style="color: #003B4F;">return</span> jnp.array(grad(cost, argnums<span class="op" style="color: #5E5E5E;">=</span>(<span class="dv" style="color: #AD0000;">0</span>, <span class="dv" style="color: #AD0000;">1</span>))(theta_0, theta_1))</span>
<span id="cb30-4"></span>
<span id="cb30-5">grad_cost(<span class="fl" style="color: #AD0000;">2.0</span>, <span class="fl" style="color: #AD0000;">2.0</span>)</span></code></pre></div>
<div class="cell-output cell-output-display" data-execution_count="238">
<pre><code>Array([ 8.      , 17.466667], dtype=float32)</code></pre>
</div>
</div>
<div class="cell" data-execution_count="239">
<div class="sourceCode cell-code" id="cb32" style="background: #f1f3f5;"><pre class="sourceCode python code-with-copy"><code class="sourceCode python"><span id="cb32-1"><span class="kw" style="color: #003B4F;">def</span> grad_cost_manual(theta_0, theta_1):</span>
<span id="cb32-2">    y_hat <span class="op" style="color: #5E5E5E;">=</span> (theta_0 <span class="op" style="color: #5E5E5E;">+</span> theta_1 <span class="op" style="color: #5E5E5E;">*</span> X).flatten()</span>
<span id="cb32-3">    <span class="cf" style="color: #003B4F;">return</span> jnp.array([<span class="dv" style="color: #AD0000;">2</span><span class="op" style="color: #5E5E5E;">*</span>jnp.mean(y_hat <span class="op" style="color: #5E5E5E;">-</span> y), <span class="dv" style="color: #AD0000;">2</span><span class="op" style="color: #5E5E5E;">*</span>jnp.mean((y_hat <span class="op" style="color: #5E5E5E;">-</span> y) <span class="op" style="color: #5E5E5E;">*</span> X.flatten())])</span></code></pre></div>
</div>
<div class="cell" data-execution_count="240">
<div class="sourceCode cell-code" id="cb33" style="background: #f1f3f5;"><pre class="sourceCode python code-with-copy"><code class="sourceCode python"><span id="cb33-1">grad_cost_manual(<span class="fl" style="color: #AD0000;">2.0</span>, <span class="fl" style="color: #AD0000;">2.0</span>)</span></code></pre></div>
<div class="cell-output cell-output-display" data-execution_count="240">
<pre><code>Array([ 8.      , 17.466667], dtype=float32)</code></pre>
</div>
</div>
<div class="cell" data-execution_count="241">
<div class="sourceCode cell-code" id="cb35" style="background: #f1f3f5;"><pre class="sourceCode python code-with-copy"><code class="sourceCode python"><span id="cb35-1"><span class="co" style="color: #5E5E5E;"># Plotting cost surface and contours for three points in X individually</span></span>
<span id="cb35-2"></span>
<span id="cb35-3"><span class="kw" style="color: #003B4F;">def</span> cost_i(theta_0, theta_1, i <span class="op" style="color: #5E5E5E;">=</span> <span class="dv" style="color: #AD0000;">1</span>):</span>
<span id="cb35-4">    y_hat <span class="op" style="color: #5E5E5E;">=</span> theta_0 <span class="op" style="color: #5E5E5E;">+</span> theta_1 <span class="op" style="color: #5E5E5E;">*</span> X[i<span class="op" style="color: #5E5E5E;">-</span><span class="dv" style="color: #AD0000;">1</span>:i]</span>
<span id="cb35-5">    <span class="cf" style="color: #003B4F;">return</span> jnp.mean((y_hat<span class="op" style="color: #5E5E5E;">-</span> y[i<span class="op" style="color: #5E5E5E;">-</span><span class="dv" style="color: #AD0000;">1</span>:i])<span class="op" style="color: #5E5E5E;">**</span><span class="dv" style="color: #AD0000;">2</span>)</span></code></pre></div>
</div>
<div class="cell" data-execution_count="242">
<div class="sourceCode cell-code" id="cb36" style="background: #f1f3f5;"><pre class="sourceCode python code-with-copy"><code class="sourceCode python"><span id="cb36-1">(cost_i(<span class="fl" style="color: #AD0000;">2.0</span>, <span class="fl" style="color: #AD0000;">2.0</span>, <span class="dv" style="color: #AD0000;">1</span>) <span class="op" style="color: #5E5E5E;">+</span> cost_i(<span class="fl" style="color: #AD0000;">2.0</span>, <span class="fl" style="color: #AD0000;">2.0</span>, <span class="dv" style="color: #AD0000;">2</span>) <span class="op" style="color: #5E5E5E;">+</span> cost_i(<span class="fl" style="color: #AD0000;">2.0</span>, <span class="fl" style="color: #AD0000;">2.0</span>, <span class="dv" style="color: #AD0000;">3</span>))<span class="op" style="color: #5E5E5E;">/</span><span class="fl" style="color: #AD0000;">3.0</span></span></code></pre></div>
<div class="cell-output cell-output-display" data-execution_count="242">
<pre><code>Array(16.826666, dtype=float32)</code></pre>
</div>
</div>
<div class="cell" data-execution_count="243">
<div class="sourceCode cell-code" id="cb38" style="background: #f1f3f5;"><pre class="sourceCode python code-with-copy"><code class="sourceCode python"><span id="cb38-1"><span class="im" style="color: #00769E;">from</span> functools <span class="im" style="color: #00769E;">import</span> partial</span></code></pre></div>
</div>
<div class="cell" data-execution_count="244">
<div class="sourceCode cell-code" id="cb39" style="background: #f1f3f5;"><pre class="sourceCode python code-with-copy"><code class="sourceCode python"><span id="cb39-1"><span class="co" style="color: #5E5E5E;"># Plot surface and contour plots for cost function</span></span>
<span id="cb39-2"><span class="cf" style="color: #003B4F;">for</span> i <span class="kw" style="color: #003B4F;">in</span> <span class="bu" style="color: null;">range</span>(<span class="dv" style="color: #AD0000;">1</span>, <span class="dv" style="color: #AD0000;">4</span>):</span>
<span id="cb39-3">    cost_i_p <span class="op" style="color: #5E5E5E;">=</span> partial(cost_i, i<span class="op" style="color: #5E5E5E;">=</span>i)</span>
<span id="cb39-4">    create_plot(cost_i_p)</span></code></pre></div>
<div class="cell-output cell-output-stdout">
<pre><code>Global minimum: 0.0 at [0.5 0.5]
Global minimum: 0.0 at [0.44000003 0.88000005]
Global minimum: 0.0 at [0.28000003 0.84      ]</code></pre>
</div>
<div class="cell-output cell-output-display">
<p><img src="https://github.com/nipunbatra/ml2023/notebooks/posts/gd_files/figure-html/cell-26-output-2.png" class="img-fluid"></p>
</div>
<div class="cell-output cell-output-display">
<p><img src="https://github.com/nipunbatra/ml2023/notebooks/posts/gd_files/figure-html/cell-26-output-3.png" class="img-fluid"></p>
</div>
<div class="cell-output cell-output-display">
<p><img src="https://github.com/nipunbatra/ml2023/notebooks/posts/gd_files/figure-html/cell-26-output-4.png" class="img-fluid"></p>
</div>
</div>
<div class="cell" data-execution_count="250">
<div class="sourceCode cell-code" id="cb41" style="background: #f1f3f5;"><pre class="sourceCode python code-with-copy"><code class="sourceCode python"><span id="cb41-1">grad_cost_1 <span class="op" style="color: #5E5E5E;">=</span> grad(cost_i, argnums<span class="op" style="color: #5E5E5E;">=</span>(<span class="dv" style="color: #AD0000;">0</span>, <span class="dv" style="color: #AD0000;">1</span>))</span>
<span id="cb41-2">grad_cost_1(<span class="fl" style="color: #AD0000;">2.0</span>, <span class="fl" style="color: #AD0000;">2.0</span>)</span></code></pre></div>
<div class="cell-output cell-output-display" data-execution_count="250">
<pre><code>(Array(6., dtype=float32, weak_type=True),
 Array(6., dtype=float32, weak_type=True))</code></pre>
</div>
</div>
<div class="cell" data-execution_count="258">
<div class="sourceCode cell-code" id="cb43" style="background: #f1f3f5;"><pre class="sourceCode python code-with-copy"><code class="sourceCode python"><span id="cb43-1">jnp.array(grad_cost_1(<span class="fl" style="color: #AD0000;">2.0</span>, <span class="fl" style="color: #AD0000;">2.0</span>, <span class="dv" style="color: #AD0000;">1</span>)), jnp.array(grad_cost_1(<span class="fl" style="color: #AD0000;">2.0</span>, <span class="fl" style="color: #AD0000;">2.0</span>, <span class="dv" style="color: #AD0000;">2</span>)), jnp.array(grad_cost_1(<span class="fl" style="color: #AD0000;">2.0</span>, <span class="fl" style="color: #AD0000;">2.0</span>, <span class="dv" style="color: #AD0000;">3</span>))</span></code></pre></div>
<div class="cell-output cell-output-display" data-execution_count="258">
<pre><code>(Array([6., 6.], dtype=float32),
 Array([ 7.6, 15.2], dtype=float32),
 Array([10.4     , 31.199999], dtype=float32))</code></pre>
</div>
</div>



 ]]></description>
  <guid>https://github.com/nipunbatra/ml2023/notebooks/posts/gd.html</guid>
  <pubDate>Thu, 16 Feb 2023 00:00:00 GMT</pubDate>
</item>
<item>
  <title>Taylor Series</title>
  <dc:creator>Nipun Batra</dc:creator>
  <link>https://github.com/nipunbatra/ml2023/notebooks/posts/taylor.html</link>
  <description><![CDATA[ 



<div class="cell" data-execution_count="1">
<div class="sourceCode cell-code" id="cb1" style="background: #f1f3f5;"><pre class="sourceCode python code-with-copy"><code class="sourceCode python"><span id="cb1-1"><span class="im" style="color: #00769E;">import</span> jax.numpy <span class="im" style="color: #00769E;">as</span> jnp</span>
<span id="cb1-2"><span class="im" style="color: #00769E;">from</span> jax <span class="im" style="color: #00769E;">import</span> random, jit, vmap, grad, jacfwd, jacrev, hessian, value_and_grad</span>
<span id="cb1-3"><span class="im" style="color: #00769E;">import</span> matplotlib.pyplot <span class="im" style="color: #00769E;">as</span> plt</span>
<span id="cb1-4"><span class="op" style="color: #5E5E5E;">%</span>matplotlib inline</span>
<span id="cb1-5"><span class="op" style="color: #5E5E5E;">%</span>config InlineBackend.figure_format <span class="op" style="color: #5E5E5E;">=</span> <span class="st" style="color: #20794D;">'retina'</span></span></code></pre></div>
</div>
<div class="cell" data-execution_count="2">
<div class="sourceCode cell-code" id="cb2" style="background: #f1f3f5;"><pre class="sourceCode python code-with-copy"><code class="sourceCode python"><span id="cb2-1"><span class="co" style="color: #5E5E5E;"># Define the function to be approximated</span></span>
<span id="cb2-2"></span>
<span id="cb2-3"><span class="kw" style="color: #003B4F;">def</span> f(x):</span>
<span id="cb2-4">    <span class="cf" style="color: #003B4F;">return</span> jnp.sin(x)</span></code></pre></div>
</div>
<div class="cell" data-execution_count="3">
<div class="sourceCode cell-code" id="cb3" style="background: #f1f3f5;"><pre class="sourceCode python code-with-copy"><code class="sourceCode python"><span id="cb3-1"><span class="co" style="color: #5E5E5E;"># Plot the function</span></span>
<span id="cb3-2"></span>
<span id="cb3-3">x <span class="op" style="color: #5E5E5E;">=</span> jnp.linspace(<span class="op" style="color: #5E5E5E;">-</span>jnp.pi, jnp.pi, <span class="dv" style="color: #AD0000;">100</span>)</span>
<span id="cb3-4">plt.plot(x, f(x))</span></code></pre></div>
<div class="cell-output cell-output-display">
<p><img src="https://github.com/nipunbatra/ml2023/notebooks/posts/taylor_files/figure-html/cell-4-output-1.png" class="img-fluid"></p>
</div>
</div>
<div class="cell" data-execution_count="5">
<div class="sourceCode cell-code" id="cb4" style="background: #f1f3f5;"><pre class="sourceCode python code-with-copy"><code class="sourceCode python"><span id="cb4-1"><span class="co" style="color: #5E5E5E;"># First order Taylor approximation for f(x) at x = 0</span></span>
<span id="cb4-2"></span>
<span id="cb4-3"><span class="kw" style="color: #003B4F;">def</span> taylor1(f, x, x0<span class="op" style="color: #5E5E5E;">=</span><span class="fl" style="color: #AD0000;">0.</span>):</span>
<span id="cb4-4">    <span class="cf" style="color: #003B4F;">return</span> f(x0) <span class="op" style="color: #5E5E5E;">+</span> grad(f)(x0) <span class="op" style="color: #5E5E5E;">*</span> (x <span class="op" style="color: #5E5E5E;">-</span> x0)</span></code></pre></div>
</div>
<div class="cell" data-execution_count="6">
<div class="sourceCode cell-code" id="cb5" style="background: #f1f3f5;"><pre class="sourceCode python code-with-copy"><code class="sourceCode python"><span id="cb5-1"><span class="co" style="color: #5E5E5E;"># Plot the Taylor approximation</span></span>
<span id="cb5-2"></span>
<span id="cb5-3">plt.plot(x, f(x), label<span class="op" style="color: #5E5E5E;">=</span><span class="st" style="color: #20794D;">'f(x)'</span>)</span>
<span id="cb5-4">plt.plot(x, taylor1(f, x), label<span class="op" style="color: #5E5E5E;">=</span><span class="st" style="color: #20794D;">'Taylor approximation'</span>)</span></code></pre></div>
<div class="cell-output cell-output-display">
<p><img src="https://github.com/nipunbatra/ml2023/notebooks/posts/taylor_files/figure-html/cell-6-output-1.png" class="img-fluid"></p>
</div>
</div>
<div class="cell" data-execution_count="15">
<div class="sourceCode cell-code" id="cb6" style="background: #f1f3f5;"><pre class="sourceCode python code-with-copy"><code class="sourceCode python"><span id="cb6-1"><span class="co" style="color: #5E5E5E;"># factorial function in JAX</span></span>
<span id="cb6-2"></span>
<span id="cb6-3"><span class="kw" style="color: #003B4F;">def</span> factorial(n):</span>
<span id="cb6-4">    <span class="cf" style="color: #003B4F;">return</span> jnp.prod(jnp.arange(<span class="dv" style="color: #AD0000;">1</span>, n <span class="op" style="color: #5E5E5E;">+</span> <span class="dv" style="color: #AD0000;">1</span>))</span></code></pre></div>
</div>
<div class="cell" data-execution_count="16">
<div class="sourceCode cell-code" id="cb7" style="background: #f1f3f5;"><pre class="sourceCode python code-with-copy"><code class="sourceCode python"><span id="cb7-1"><span class="co" style="color: #5E5E5E;"># Find the nth order Taylor approximation for f(x) at x = 0</span></span>
<span id="cb7-2"></span>
<span id="cb7-3"><span class="kw" style="color: #003B4F;">def</span> taylor(f, x, n, x0<span class="op" style="color: #5E5E5E;">=</span><span class="fl" style="color: #AD0000;">0.</span>):</span>
<span id="cb7-4">    grads <span class="op" style="color: #5E5E5E;">=</span> {<span class="dv" style="color: #AD0000;">0</span>:f}</span>
<span id="cb7-5">    output <span class="op" style="color: #5E5E5E;">=</span> f(x0)</span>
<span id="cb7-6">    <span class="cf" style="color: #003B4F;">for</span> i <span class="kw" style="color: #003B4F;">in</span> <span class="bu" style="color: null;">range</span>(<span class="dv" style="color: #AD0000;">1</span>, n<span class="op" style="color: #5E5E5E;">+</span><span class="dv" style="color: #AD0000;">1</span>):</span>
<span id="cb7-7">        grads[i] <span class="op" style="color: #5E5E5E;">=</span> grad(grads[i<span class="op" style="color: #5E5E5E;">-</span><span class="dv" style="color: #AD0000;">1</span>])</span>
<span id="cb7-8">        output <span class="op" style="color: #5E5E5E;">+=</span> grads[i](x0) <span class="op" style="color: #5E5E5E;">*</span> (x <span class="op" style="color: #5E5E5E;">-</span> x0)<span class="op" style="color: #5E5E5E;">**</span>i <span class="op" style="color: #5E5E5E;">/</span> factorial(i)</span>
<span id="cb7-9">    <span class="cf" style="color: #003B4F;">return</span> output</span></code></pre></div>
</div>
<div class="cell" data-execution_count="30">
<div class="sourceCode cell-code" id="cb8" style="background: #f1f3f5;"><pre class="sourceCode python code-with-copy"><code class="sourceCode python"><span id="cb8-1">plt.plot(x, f(x), label<span class="op" style="color: #5E5E5E;">=</span><span class="st" style="color: #20794D;">'f(x)'</span>, lw<span class="op" style="color: #5E5E5E;">=</span><span class="dv" style="color: #AD0000;">5</span>)</span>
<span id="cb8-2">plt.plot(x, taylor(f, x, <span class="dv" style="color: #AD0000;">1</span>), label<span class="op" style="color: #5E5E5E;">=</span><span class="st" style="color: #20794D;">'Taylor approximation, n=1'</span>)</span>
<span id="cb8-3">plt.plot(x, taylor(f, x, <span class="dv" style="color: #AD0000;">3</span>), label<span class="op" style="color: #5E5E5E;">=</span><span class="st" style="color: #20794D;">'Taylor approximation, n=3'</span>)</span>
<span id="cb8-4">plt.plot(x, taylor(f, x, <span class="dv" style="color: #AD0000;">5</span>), label<span class="op" style="color: #5E5E5E;">=</span><span class="st" style="color: #20794D;">'Taylor approximation, n=5'</span>)</span>
<span id="cb8-5">plt.legend()</span></code></pre></div>
<div class="cell-output cell-output-display" data-execution_count="30">
<pre><code>&lt;matplotlib.legend.Legend at 0x1aea5ea90&gt;</code></pre>
</div>
<div class="cell-output cell-output-display">
<p><img src="https://github.com/nipunbatra/ml2023/notebooks/posts/taylor_files/figure-html/cell-9-output-2.png" class="img-fluid"></p>
</div>
</div>
<div class="cell" data-execution_count="43">
<div class="sourceCode cell-code" id="cb10" style="background: #f1f3f5;"><pre class="sourceCode python code-with-copy"><code class="sourceCode python"><span id="cb10-1">x <span class="op" style="color: #5E5E5E;">=</span> jnp.linspace(<span class="op" style="color: #5E5E5E;">-</span><span class="dv" style="color: #AD0000;">4</span>, <span class="dv" style="color: #AD0000;">4</span>, <span class="dv" style="color: #AD0000;">100</span>)</span>
<span id="cb10-2"></span>
<span id="cb10-3"><span class="kw" style="color: #003B4F;">def</span> g(x):</span>
<span id="cb10-4">    <span class="cf" style="color: #003B4F;">return</span> x<span class="op" style="color: #5E5E5E;">**</span><span class="dv" style="color: #AD0000;">2</span></span>
<span id="cb10-5"></span>
<span id="cb10-6">plt.plot(x, g(x), label<span class="op" style="color: #5E5E5E;">=</span><span class="st" style="color: #20794D;">'g(x)'</span>, lw<span class="op" style="color: #5E5E5E;">=</span><span class="dv" style="color: #AD0000;">4</span>, alpha<span class="op" style="color: #5E5E5E;">=</span><span class="fl" style="color: #AD0000;">0.5</span>)</span>
<span id="cb10-7">plt.plot(x, taylor(g, x, <span class="dv" style="color: #AD0000;">1</span>), label<span class="op" style="color: #5E5E5E;">=</span><span class="st" style="color: #20794D;">'Taylor approximation, n=1'</span>)</span>
<span id="cb10-8">plt.plot(x, taylor(g, x, <span class="dv" style="color: #AD0000;">2</span>), label<span class="op" style="color: #5E5E5E;">=</span><span class="st" style="color: #20794D;">'Taylor approximation, n=3'</span>, ls<span class="op" style="color: #5E5E5E;">=</span><span class="st" style="color: #20794D;">'--'</span>)</span></code></pre></div>
<div class="cell-output cell-output-display">
<p><img src="https://github.com/nipunbatra/ml2023/notebooks/posts/taylor_files/figure-html/cell-10-output-1.png" class="img-fluid"></p>
</div>
</div>
<div class="cell" data-execution_count="44">
<div class="sourceCode cell-code" id="cb11" style="background: #f1f3f5;"><pre class="sourceCode python code-with-copy"><code class="sourceCode python"><span id="cb11-1">plt.plot(x, g(x), label<span class="op" style="color: #5E5E5E;">=</span><span class="st" style="color: #20794D;">'g(x)'</span>, lw<span class="op" style="color: #5E5E5E;">=</span><span class="dv" style="color: #AD0000;">4</span>, alpha<span class="op" style="color: #5E5E5E;">=</span><span class="fl" style="color: #AD0000;">0.5</span>)</span>
<span id="cb11-2">plt.plot(x, taylor(g, x, <span class="dv" style="color: #AD0000;">1</span>, <span class="fl" style="color: #AD0000;">4.1</span>), label<span class="op" style="color: #5E5E5E;">=</span><span class="st" style="color: #20794D;">'Taylor approximation, n=1'</span>)</span>
<span id="cb11-3">plt.plot(x, taylor(g, x, <span class="dv" style="color: #AD0000;">2</span>, <span class="fl" style="color: #AD0000;">4.1</span>), label<span class="op" style="color: #5E5E5E;">=</span><span class="st" style="color: #20794D;">'Taylor approximation, n=3'</span>, ls<span class="op" style="color: #5E5E5E;">=</span><span class="st" style="color: #20794D;">'--'</span>)</span>
<span id="cb11-4">plt.ylim((<span class="op" style="color: #5E5E5E;">-</span><span class="dv" style="color: #AD0000;">2</span>, <span class="dv" style="color: #AD0000;">20</span>))</span></code></pre></div>
<div class="cell-output cell-output-display" data-execution_count="44">
<pre><code>(-2.0, 20.0)</code></pre>
</div>
<div class="cell-output cell-output-display">
<p><img src="https://github.com/nipunbatra/ml2023/notebooks/posts/taylor_files/figure-html/cell-11-output-2.png" class="img-fluid"></p>
</div>
</div>



 ]]></description>
  <guid>https://github.com/nipunbatra/ml2023/notebooks/posts/taylor.html</guid>
  <pubDate>Tue, 14 Feb 2023 00:00:00 GMT</pubDate>
</item>
<item>
  <title>Conditioning and Linear Regression</title>
  <dc:creator>Nipun Batra</dc:creator>
  <link>https://github.com/nipunbatra/ml2023/notebooks/posts/condition-inverse.html</link>
  <description><![CDATA[ 



<div class="cell" data-execution_count="4">
<div class="sourceCode cell-code" id="cb1" style="background: #f1f3f5;"><pre class="sourceCode python code-with-copy"><code class="sourceCode python"><span id="cb1-1"><span class="im" style="color: #00769E;">import</span> numpy <span class="im" style="color: #00769E;">as</span> np</span>
<span id="cb1-2"><span class="im" style="color: #00769E;">import</span> matplotlib.pyplot <span class="im" style="color: #00769E;">as</span> plt</span>
<span id="cb1-3"><span class="op" style="color: #5E5E5E;">%</span>matplotlib inline</span>
<span id="cb1-4"><span class="op" style="color: #5E5E5E;">%</span>config InlineBackend.figure_format <span class="op" style="color: #5E5E5E;">=</span> <span class="st" style="color: #20794D;">'retina'</span></span></code></pre></div>
</div>
<div class="cell" data-execution_count="5">
<div class="sourceCode cell-code" id="cb2" style="background: #f1f3f5;"><pre class="sourceCode python code-with-copy"><code class="sourceCode python"><span id="cb2-1"><span class="co" style="color: #5E5E5E;"># Showing that np.linalg.solve is better conditioned than np.linalg.inv for linear regression normal equations</span></span>
<span id="cb2-2"></span>
<span id="cb2-3"><span class="co" style="color: #5E5E5E;"># Generate data</span></span>
<span id="cb2-4">n <span class="op" style="color: #5E5E5E;">=</span> <span class="dv" style="color: #AD0000;">100</span></span>
<span id="cb2-5">p <span class="op" style="color: #5E5E5E;">=</span> <span class="dv" style="color: #AD0000;">10</span></span>
<span id="cb2-6">X <span class="op" style="color: #5E5E5E;">=</span> np.random.randn(n, p)</span>
<span id="cb2-7">theta <span class="op" style="color: #5E5E5E;">=</span> np.random.randn(p)</span>
<span id="cb2-8">y <span class="op" style="color: #5E5E5E;">=</span> X <span class="op" style="color: #5E5E5E;">@</span> theta <span class="op" style="color: #5E5E5E;">+</span> np.random.randn(n)</span>
<span id="cb2-9"></span>
<span id="cb2-10"><span class="co" style="color: #5E5E5E;"># Solve normal equations</span></span>
<span id="cb2-11">theta_hat <span class="op" style="color: #5E5E5E;">=</span> np.linalg.solve(X.T <span class="op" style="color: #5E5E5E;">@</span> X, X.T <span class="op" style="color: #5E5E5E;">@</span> y)</span>
<span id="cb2-12">theta_hat_inv <span class="op" style="color: #5E5E5E;">=</span> np.linalg.inv(X.T <span class="op" style="color: #5E5E5E;">@</span> X) <span class="op" style="color: #5E5E5E;">@</span> X.T <span class="op" style="color: #5E5E5E;">@</span> y</span>
<span id="cb2-13"></span>
<span id="cb2-14"><span class="co" style="color: #5E5E5E;"># Compare the condition numbers</span></span>
<span id="cb2-15"><span class="bu" style="color: null;">print</span>(np.linalg.cond(X.T <span class="op" style="color: #5E5E5E;">@</span> X))</span>
<span id="cb2-16"><span class="bu" style="color: null;">print</span>(np.linalg.cond(np.linalg.inv(X.T <span class="op" style="color: #5E5E5E;">@</span> X)))</span>
<span id="cb2-17"></span>
<span id="cb2-18"><span class="co" style="color: #5E5E5E;"># Plot the difference between the two solutions</span></span>
<span id="cb2-19">plt.plot(theta_hat <span class="op" style="color: #5E5E5E;">-</span> theta_hat_inv)</span>
<span id="cb2-20">plt.title(<span class="st" style="color: #20794D;">'Difference between solutions'</span>)</span>
<span id="cb2-21">plt.xlabel(<span class="st" style="color: #20794D;">'Index'</span>)</span>
<span id="cb2-22">plt.ylabel(<span class="st" style="color: #20794D;">'Difference'</span>)</span>
<span id="cb2-23">plt.show()</span>
<span id="cb2-24"></span></code></pre></div>
<div class="cell-output cell-output-stdout">
<pre><code>2.980877596192165
2.980877596192165</code></pre>
</div>
<div class="cell-output cell-output-display">
<p><img src="https://github.com/nipunbatra/ml2023/notebooks/posts/condition-inverse_files/figure-html/cell-3-output-2.png" class="img-fluid"></p>
</div>
</div>



 ]]></description>
  <guid>https://github.com/nipunbatra/ml2023/notebooks/posts/condition-inverse.html</guid>
  <pubDate>Fri, 10 Feb 2023 00:00:00 GMT</pubDate>
</item>
<item>
  <title>CNN</title>
  <dc:creator>Nipun Batra</dc:creator>
  <link>https://github.com/nipunbatra/ml2023/notebooks/posts/cnn-edge.html</link>
  <description><![CDATA[ 



<div class="cell" data-execution_count="1">
<div class="sourceCode cell-code" id="cb1" style="background: #f1f3f5;"><pre class="sourceCode python code-with-copy"><code class="sourceCode python"><span id="cb1-1"><span class="im" style="color: #00769E;">import</span> torch</span>
<span id="cb1-2"><span class="im" style="color: #00769E;">import</span> torch.nn.functional <span class="im" style="color: #00769E;">as</span> F</span>
<span id="cb1-3"><span class="im" style="color: #00769E;">from</span> torch <span class="im" style="color: #00769E;">import</span> nn</span>
<span id="cb1-4"><span class="im" style="color: #00769E;">import</span> pandas <span class="im" style="color: #00769E;">as</span> pd</span>
<span id="cb1-5"><span class="im" style="color: #00769E;">import</span> matplotlib.pyplot <span class="im" style="color: #00769E;">as</span> plt <span class="co" style="color: #5E5E5E;"># for making figures</span></span>
<span id="cb1-6"><span class="im" style="color: #00769E;">import</span> seaborn <span class="im" style="color: #00769E;">as</span> sns</span>
<span id="cb1-7"><span class="op" style="color: #5E5E5E;">%</span>matplotlib inline</span></code></pre></div>
</div>
<div class="cell" data-execution_count="2">
<div class="sourceCode cell-code" id="cb2" style="background: #f1f3f5;"><pre class="sourceCode python code-with-copy"><code class="sourceCode python"><span id="cb2-1"><span class="co" style="color: #5E5E5E;"># Create a tensor of size 6x6 with first three columns as 1 and rest as 0</span></span>
<span id="cb2-2">x <span class="op" style="color: #5E5E5E;">=</span> torch.zeros(<span class="dv" style="color: #AD0000;">6</span>, <span class="dv" style="color: #AD0000;">6</span>)</span>
<span id="cb2-3">x[:, :<span class="dv" style="color: #AD0000;">3</span>] <span class="op" style="color: #5E5E5E;">=</span> <span class="dv" style="color: #AD0000;">1</span></span>
<span id="cb2-4"><span class="bu" style="color: null;">print</span>(x)</span></code></pre></div>
<div class="cell-output cell-output-stdout">
<pre><code>tensor([[1., 1., 1., 0., 0., 0.],
        [1., 1., 1., 0., 0., 0.],
        [1., 1., 1., 0., 0., 0.],
        [1., 1., 1., 0., 0., 0.],
        [1., 1., 1., 0., 0., 0.],
        [1., 1., 1., 0., 0., 0.]])</code></pre>
</div>
</div>
<div class="cell" data-execution_count="3">
<div class="sourceCode cell-code" id="cb4" style="background: #f1f3f5;"><pre class="sourceCode python code-with-copy"><code class="sourceCode python"><span id="cb4-1">x.shape</span></code></pre></div>
<div class="cell-output cell-output-display" data-execution_count="3">
<pre><code>torch.Size([6, 6])</code></pre>
</div>
</div>
<div class="cell" data-execution_count="4">
<div class="sourceCode cell-code" id="cb6" style="background: #f1f3f5;"><pre class="sourceCode python code-with-copy"><code class="sourceCode python"><span id="cb6-1"><span class="co" style="color: #5E5E5E;"># Plot the tensor with equal aspect ratio</span></span>
<span id="cb6-2">plt.figure(figsize<span class="op" style="color: #5E5E5E;">=</span>(<span class="dv" style="color: #AD0000;">6</span>, <span class="dv" style="color: #AD0000;">6</span>))</span>
<span id="cb6-3">sns.heatmap(x, cbar<span class="op" style="color: #5E5E5E;">=</span><span class="va" style="color: #111111;">False</span>, xticklabels<span class="op" style="color: #5E5E5E;">=</span><span class="va" style="color: #111111;">False</span>, yticklabels<span class="op" style="color: #5E5E5E;">=</span><span class="va" style="color: #111111;">False</span>, cmap<span class="op" style="color: #5E5E5E;">=</span><span class="st" style="color: #20794D;">'gray'</span>, annot<span class="op" style="color: #5E5E5E;">=</span><span class="va" style="color: #111111;">True</span>)</span></code></pre></div>
<div class="cell-output cell-output-display" data-execution_count="4">
<pre><code>&lt;AxesSubplot: &gt;</code></pre>
</div>
<div class="cell-output cell-output-display">
<p><img src="https://github.com/nipunbatra/ml2023/notebooks/posts/cnn-edge_files/figure-html/cell-5-output-2.png" class="img-fluid"></p>
</div>
</div>
<div class="cell" data-execution_count="5">
<div class="sourceCode cell-code" id="cb8" style="background: #f1f3f5;"><pre class="sourceCode python code-with-copy"><code class="sourceCode python"><span id="cb8-1"><span class="co" style="color: #5E5E5E;"># Create a 3x3 kernel with first column as 1, second as 0 and third as -1</span></span>
<span id="cb8-2"></span>
<span id="cb8-3">k <span class="op" style="color: #5E5E5E;">=</span> torch.tensor([[<span class="dv" style="color: #AD0000;">1</span>, <span class="dv" style="color: #AD0000;">0</span>, <span class="op" style="color: #5E5E5E;">-</span><span class="dv" style="color: #AD0000;">1</span>], [<span class="dv" style="color: #AD0000;">1</span>, <span class="dv" style="color: #AD0000;">0</span>, <span class="op" style="color: #5E5E5E;">-</span><span class="dv" style="color: #AD0000;">1</span>], [<span class="dv" style="color: #AD0000;">1</span>, <span class="dv" style="color: #AD0000;">0</span>, <span class="op" style="color: #5E5E5E;">-</span><span class="dv" style="color: #AD0000;">1</span>]]).<span class="bu" style="color: null;">float</span>()</span>
<span id="cb8-4"><span class="bu" style="color: null;">print</span>(k)</span></code></pre></div>
<div class="cell-output cell-output-stdout">
<pre><code>tensor([[ 1.,  0., -1.],
        [ 1.,  0., -1.],
        [ 1.,  0., -1.]])</code></pre>
</div>
</div>
<div class="cell" data-execution_count="6">
<div class="sourceCode cell-code" id="cb10" style="background: #f1f3f5;"><pre class="sourceCode python code-with-copy"><code class="sourceCode python"><span id="cb10-1"><span class="co" style="color: #5E5E5E;"># Apply the kernel to the image</span></span>
<span id="cb10-2"></span>
<span id="cb10-3"></span>
<span id="cb10-4">y <span class="op" style="color: #5E5E5E;">=</span> F.conv2d(x.view(<span class="dv" style="color: #AD0000;">1</span>, <span class="dv" style="color: #AD0000;">1</span>, <span class="dv" style="color: #AD0000;">6</span>, <span class="dv" style="color: #AD0000;">6</span>), k.view(<span class="dv" style="color: #AD0000;">1</span>, <span class="dv" style="color: #AD0000;">1</span>, <span class="dv" style="color: #AD0000;">3</span>, <span class="dv" style="color: #AD0000;">3</span>))</span>
<span id="cb10-5"><span class="bu" style="color: null;">print</span>(y)</span>
<span id="cb10-6"></span>
<span id="cb10-7"><span class="co" style="color: #5E5E5E;"># Create figure of size of y</span></span>
<span id="cb10-8">plt.figure(figsize<span class="op" style="color: #5E5E5E;">=</span>(y.shape[<span class="dv" style="color: #AD0000;">2</span>], y.shape[<span class="dv" style="color: #AD0000;">3</span>]))</span>
<span id="cb10-9">sns.heatmap(y[<span class="dv" style="color: #AD0000;">0</span>, <span class="dv" style="color: #AD0000;">0</span>], cbar<span class="op" style="color: #5E5E5E;">=</span><span class="va" style="color: #111111;">False</span>, xticklabels<span class="op" style="color: #5E5E5E;">=</span><span class="va" style="color: #111111;">False</span>, yticklabels<span class="op" style="color: #5E5E5E;">=</span><span class="va" style="color: #111111;">False</span>, cmap<span class="op" style="color: #5E5E5E;">=</span><span class="st" style="color: #20794D;">'gray'</span>, annot<span class="op" style="color: #5E5E5E;">=</span><span class="va" style="color: #111111;">True</span>)</span></code></pre></div>
<div class="cell-output cell-output-stdout">
<pre><code>tensor([[[[0., 3., 3., 0.],
          [0., 3., 3., 0.],
          [0., 3., 3., 0.],
          [0., 3., 3., 0.]]]])</code></pre>
</div>
<div class="cell-output cell-output-display" data-execution_count="6">
<pre><code>&lt;AxesSubplot: &gt;</code></pre>
</div>
<div class="cell-output cell-output-display">
<p><img src="https://github.com/nipunbatra/ml2023/notebooks/posts/cnn-edge_files/figure-html/cell-7-output-3.png" class="img-fluid"></p>
</div>
</div>
<div class="cell" data-execution_count="7">
<div class="sourceCode cell-code" id="cb13" style="background: #f1f3f5;"><pre class="sourceCode python code-with-copy"><code class="sourceCode python"><span id="cb13-1">im <span class="op" style="color: #5E5E5E;">=</span> plt.imread(<span class="st" style="color: #20794D;">'lm.jpeg'</span>)</span>
<span id="cb13-2">plt.imshow(im)</span></code></pre></div>
<div class="cell-output cell-output-display" data-execution_count="7">
<pre><code>&lt;matplotlib.image.AxesImage at 0x151220670&gt;</code></pre>
</div>
<div class="cell-output cell-output-display">
<p><img src="https://github.com/nipunbatra/ml2023/notebooks/posts/cnn-edge_files/figure-html/cell-8-output-2.png" class="img-fluid"></p>
</div>
</div>
<div class="cell" data-execution_count="8">
<div class="sourceCode cell-code" id="cb15" style="background: #f1f3f5;"><pre class="sourceCode python code-with-copy"><code class="sourceCode python"><span id="cb15-1"><span class="co" style="color: #5E5E5E;"># Crop to left 180 X 180 pixels</span></span>
<span id="cb15-2"></span>
<span id="cb15-3">im <span class="op" style="color: #5E5E5E;">=</span> im[:<span class="dv" style="color: #AD0000;">180</span>, :<span class="dv" style="color: #AD0000;">180</span>]</span>
<span id="cb15-4">plt.imshow(im, cmap<span class="op" style="color: #5E5E5E;">=</span><span class="st" style="color: #20794D;">'gray'</span>)</span></code></pre></div>
<div class="cell-output cell-output-display" data-execution_count="8">
<pre><code>&lt;matplotlib.image.AxesImage at 0x1512b3cd0&gt;</code></pre>
</div>
<div class="cell-output cell-output-display">
<p><img src="https://github.com/nipunbatra/ml2023/notebooks/posts/cnn-edge_files/figure-html/cell-9-output-2.png" class="img-fluid"></p>
</div>
</div>
<div class="cell" data-execution_count="9">
<div class="sourceCode cell-code" id="cb17" style="background: #f1f3f5;"><pre class="sourceCode python code-with-copy"><code class="sourceCode python"><span id="cb17-1"><span class="co" style="color: #5E5E5E;"># Convert to grayscale</span></span>
<span id="cb17-2">im <span class="op" style="color: #5E5E5E;">=</span> im.mean(axis<span class="op" style="color: #5E5E5E;">=</span><span class="dv" style="color: #AD0000;">2</span>)</span>
<span id="cb17-3">plt.imshow(im, cmap<span class="op" style="color: #5E5E5E;">=</span><span class="st" style="color: #20794D;">'gray'</span>)</span></code></pre></div>
<div class="cell-output cell-output-display" data-execution_count="9">
<pre><code>&lt;matplotlib.image.AxesImage at 0x15133dac0&gt;</code></pre>
</div>
<div class="cell-output cell-output-display">
<p><img src="https://github.com/nipunbatra/ml2023/notebooks/posts/cnn-edge_files/figure-html/cell-10-output-2.png" class="img-fluid"></p>
</div>
</div>
<div class="cell" data-execution_count="10">
<div class="sourceCode cell-code" id="cb19" style="background: #f1f3f5;"><pre class="sourceCode python code-with-copy"><code class="sourceCode python"><span id="cb19-1">im.shape</span></code></pre></div>
<div class="cell-output cell-output-display" data-execution_count="10">
<pre><code>(180, 180)</code></pre>
</div>
</div>
<div class="cell" data-execution_count="11">
<div class="sourceCode cell-code" id="cb21" style="background: #f1f3f5;"><pre class="sourceCode python code-with-copy"><code class="sourceCode python"><span id="cb21-1"><span class="co" style="color: #5E5E5E;"># Detect edges using our filter</span></span>
<span id="cb21-2"></span>
<span id="cb21-3">k <span class="op" style="color: #5E5E5E;">=</span> torch.tensor([[<span class="dv" style="color: #AD0000;">1</span>, <span class="dv" style="color: #AD0000;">0</span>, <span class="op" style="color: #5E5E5E;">-</span><span class="dv" style="color: #AD0000;">1</span>], [<span class="dv" style="color: #AD0000;">1</span>, <span class="dv" style="color: #AD0000;">0</span>, <span class="op" style="color: #5E5E5E;">-</span><span class="dv" style="color: #AD0000;">1</span>], [<span class="dv" style="color: #AD0000;">1</span>, <span class="dv" style="color: #AD0000;">0</span>, <span class="op" style="color: #5E5E5E;">-</span><span class="dv" style="color: #AD0000;">1</span>]]).<span class="bu" style="color: null;">float</span>()</span>
<span id="cb21-4"></span>
<span id="cb21-5"><span class="co" style="color: #5E5E5E;"># Apply the kernel to the image</span></span>
<span id="cb21-6">y <span class="op" style="color: #5E5E5E;">=</span> F.conv2d(torch.tensor(im).<span class="bu" style="color: null;">float</span>().view(<span class="dv" style="color: #AD0000;">1</span>, <span class="dv" style="color: #AD0000;">1</span>, <span class="dv" style="color: #AD0000;">180</span>, <span class="dv" style="color: #AD0000;">180</span>), k.view(<span class="dv" style="color: #AD0000;">1</span>, <span class="dv" style="color: #AD0000;">1</span>, <span class="dv" style="color: #AD0000;">3</span>, <span class="dv" style="color: #AD0000;">3</span>))</span>
<span id="cb21-7"></span></code></pre></div>
</div>
<div class="cell" data-execution_count="13">
<div class="sourceCode cell-code" id="cb22" style="background: #f1f3f5;"><pre class="sourceCode python code-with-copy"><code class="sourceCode python"><span id="cb22-1"><span class="co" style="color: #5E5E5E;"># plot the result</span></span>
<span id="cb22-2"><span class="co" style="color: #5E5E5E;">#plt.figure(figsize=(y.shape[2], y.shape[3]))</span></span>
<span id="cb22-3">plt.imshow(y[<span class="dv" style="color: #AD0000;">0</span>, <span class="dv" style="color: #AD0000;">0</span>], cmap<span class="op" style="color: #5E5E5E;">=</span><span class="st" style="color: #20794D;">'gray'</span>)</span></code></pre></div>
<div class="cell-output cell-output-display" data-execution_count="13">
<pre><code>&lt;matplotlib.image.AxesImage at 0x197097430&gt;</code></pre>
</div>
<div class="cell-output cell-output-display">
<p><img src="https://github.com/nipunbatra/ml2023/notebooks/posts/cnn-edge_files/figure-html/cell-13-output-2.png" class="img-fluid"></p>
</div>
</div>
<div class="cell" data-execution_count="14">
<div class="sourceCode cell-code" id="cb24" style="background: #f1f3f5;"><pre class="sourceCode python code-with-copy"><code class="sourceCode python"><span id="cb24-1"><span class="co" style="color: #5E5E5E;"># Detect horizontal edges using our filter</span></span>
<span id="cb24-2"></span>
<span id="cb24-3">k <span class="op" style="color: #5E5E5E;">=</span> torch.tensor([[<span class="dv" style="color: #AD0000;">1</span>, <span class="dv" style="color: #AD0000;">0</span>, <span class="op" style="color: #5E5E5E;">-</span><span class="dv" style="color: #AD0000;">1</span>], [<span class="dv" style="color: #AD0000;">1</span>, <span class="dv" style="color: #AD0000;">0</span>, <span class="op" style="color: #5E5E5E;">-</span><span class="dv" style="color: #AD0000;">1</span>], [<span class="dv" style="color: #AD0000;">1</span>, <span class="dv" style="color: #AD0000;">0</span>, <span class="op" style="color: #5E5E5E;">-</span><span class="dv" style="color: #AD0000;">1</span>]]).<span class="bu" style="color: null;">float</span>().T</span>
<span id="cb24-4"></span>
<span id="cb24-5"><span class="co" style="color: #5E5E5E;"># Apply the kernel to the image</span></span>
<span id="cb24-6">y <span class="op" style="color: #5E5E5E;">=</span> F.conv2d(torch.tensor(im).<span class="bu" style="color: null;">float</span>().view(<span class="dv" style="color: #AD0000;">1</span>, <span class="dv" style="color: #AD0000;">1</span>, <span class="dv" style="color: #AD0000;">180</span>, <span class="dv" style="color: #AD0000;">180</span>), k.view(<span class="dv" style="color: #AD0000;">1</span>, <span class="dv" style="color: #AD0000;">1</span>, <span class="dv" style="color: #AD0000;">3</span>, <span class="dv" style="color: #AD0000;">3</span>))</span>
<span id="cb24-7">plt.imshow(y[<span class="dv" style="color: #AD0000;">0</span>, <span class="dv" style="color: #AD0000;">0</span>], cmap<span class="op" style="color: #5E5E5E;">=</span><span class="st" style="color: #20794D;">'gray'</span>)</span></code></pre></div>
<div class="cell-output cell-output-display" data-execution_count="14">
<pre><code>&lt;matplotlib.image.AxesImage at 0x197105730&gt;</code></pre>
</div>
<div class="cell-output cell-output-display">
<p><img src="https://github.com/nipunbatra/ml2023/notebooks/posts/cnn-edge_files/figure-html/cell-14-output-2.png" class="img-fluid"></p>
</div>
</div>



 ]]></description>
  <guid>https://github.com/nipunbatra/ml2023/notebooks/posts/cnn-edge.html</guid>
  <pubDate>Tue, 31 Jan 2023 00:00:00 GMT</pubDate>
</item>
<item>
  <title>Linear Regression: Geometric Perspective</title>
  <dc:creator>Nipun Batra</dc:creator>
  <link>https://github.com/nipunbatra/ml2023/notebooks/posts/projection.html</link>
  <description><![CDATA[ 



<div class="cell" data-execution_count="2">
<div class="sourceCode cell-code" id="cb1" style="background: #f1f3f5;"><pre class="sourceCode python code-with-copy"><code class="sourceCode python"><span id="cb1-1"><span class="im" style="color: #00769E;">import</span> numpy <span class="im" style="color: #00769E;">as</span> np</span>
<span id="cb1-2"><span class="im" style="color: #00769E;">import</span> matplotlib.pyplot <span class="im" style="color: #00769E;">as</span> plt</span>
<span id="cb1-3"><span class="op" style="color: #5E5E5E;">%</span>matplotlib inline</span>
<span id="cb1-4"><span class="op" style="color: #5E5E5E;">%</span>config InlineBackend.figure_format <span class="op" style="color: #5E5E5E;">=</span> <span class="st" style="color: #20794D;">'retina'</span></span></code></pre></div>
</div>
<div class="cell" data-execution_count="3">
<div class="sourceCode cell-code" id="cb2" style="background: #f1f3f5;"><pre class="sourceCode python code-with-copy"><code class="sourceCode python"><span id="cb2-1"><span class="co" style="color: #5E5E5E;"># Two three-dimensional vectors</span></span>
<span id="cb2-2">v1 <span class="op" style="color: #5E5E5E;">=</span> np.array([<span class="dv" style="color: #AD0000;">1</span>, <span class="dv" style="color: #AD0000;">1</span>, <span class="dv" style="color: #AD0000;">1</span>])</span>
<span id="cb2-3">v2 <span class="op" style="color: #5E5E5E;">=</span> np.array([<span class="dv" style="color: #AD0000;">2</span>, <span class="op" style="color: #5E5E5E;">-</span><span class="dv" style="color: #AD0000;">2</span>, <span class="dv" style="color: #AD0000;">2</span>])</span>
<span id="cb2-4"></span>
<span id="cb2-5"><span class="co" style="color: #5E5E5E;"># y-vector</span></span>
<span id="cb2-6">y <span class="op" style="color: #5E5E5E;">=</span> np.array([<span class="fl" style="color: #AD0000;">2.5</span>, <span class="op" style="color: #5E5E5E;">-</span><span class="fl" style="color: #AD0000;">0.8</span>, <span class="fl" style="color: #AD0000;">1.2</span>])</span></code></pre></div>
</div>
<div class="cell" data-execution_count="4">
<div class="sourceCode cell-code" id="cb3" style="background: #f1f3f5;"><pre class="sourceCode python code-with-copy"><code class="sourceCode python"><span id="cb3-1"><span class="co" style="color: #5E5E5E;"># plot the vectors in 3D</span></span>
<span id="cb3-2">fig <span class="op" style="color: #5E5E5E;">=</span> plt.figure(figsize<span class="op" style="color: #5E5E5E;">=</span>(<span class="dv" style="color: #AD0000;">8</span>, <span class="dv" style="color: #AD0000;">8</span>))</span>
<span id="cb3-3">ax <span class="op" style="color: #5E5E5E;">=</span> fig.add_subplot(<span class="dv" style="color: #AD0000;">111</span>, projection<span class="op" style="color: #5E5E5E;">=</span><span class="st" style="color: #20794D;">'3d'</span>)</span>
<span id="cb3-4">ax.quiver(<span class="dv" style="color: #AD0000;">0</span>, <span class="dv" style="color: #AD0000;">0</span>, <span class="dv" style="color: #AD0000;">0</span>, v1[<span class="dv" style="color: #AD0000;">0</span>], v1[<span class="dv" style="color: #AD0000;">1</span>], v1[<span class="dv" style="color: #AD0000;">2</span>], color<span class="op" style="color: #5E5E5E;">=</span><span class="st" style="color: #20794D;">'r'</span>, label<span class="op" style="color: #5E5E5E;">=</span><span class="st" style="color: #20794D;">'v1'</span>)</span>
<span id="cb3-5">ax.quiver(<span class="dv" style="color: #AD0000;">0</span>, <span class="dv" style="color: #AD0000;">0</span>, <span class="dv" style="color: #AD0000;">0</span>, v2[<span class="dv" style="color: #AD0000;">0</span>], v2[<span class="dv" style="color: #AD0000;">1</span>], v2[<span class="dv" style="color: #AD0000;">2</span>], color<span class="op" style="color: #5E5E5E;">=</span><span class="st" style="color: #20794D;">'b'</span>, label<span class="op" style="color: #5E5E5E;">=</span><span class="st" style="color: #20794D;">'v2'</span>)</span>
<span id="cb3-6">ax.quiver(<span class="dv" style="color: #AD0000;">0</span>, <span class="dv" style="color: #AD0000;">0</span>, <span class="dv" style="color: #AD0000;">0</span>, y[<span class="dv" style="color: #AD0000;">0</span>], y[<span class="dv" style="color: #AD0000;">1</span>], y[<span class="dv" style="color: #AD0000;">2</span>], color<span class="op" style="color: #5E5E5E;">=</span><span class="st" style="color: #20794D;">'g'</span>, label<span class="op" style="color: #5E5E5E;">=</span><span class="st" style="color: #20794D;">'y'</span>)</span>
<span id="cb3-7"></span>
<span id="cb3-8">ax.set_xlim(<span class="dv" style="color: #AD0000;">0</span>, <span class="dv" style="color: #AD0000;">3</span>)</span>
<span id="cb3-9">ax.set_ylim(<span class="dv" style="color: #AD0000;">0</span>, <span class="dv" style="color: #AD0000;">4</span>)</span>
<span id="cb3-10">ax.set_zlim(<span class="dv" style="color: #AD0000;">0</span>, <span class="dv" style="color: #AD0000;">3</span>)</span>
<span id="cb3-11">ax.set_xlabel(<span class="st" style="color: #20794D;">'x'</span>)</span>
<span id="cb3-12">ax.set_ylabel(<span class="st" style="color: #20794D;">'y'</span>)</span>
<span id="cb3-13">ax.set_zlabel(<span class="st" style="color: #20794D;">'z'</span>)</span>
<span id="cb3-14">ax.legend()</span>
<span id="cb3-15"></span>
<span id="cb3-16">ax.view_init(elev<span class="op" style="color: #5E5E5E;">=</span><span class="dv" style="color: #AD0000;">45</span>, azim<span class="op" style="color: #5E5E5E;">=</span><span class="dv" style="color: #AD0000;">60</span>)</span></code></pre></div>
<div class="cell-output cell-output-display">
<p><img src="https://github.com/nipunbatra/ml2023/notebooks/posts/projection_files/figure-html/cell-4-output-1.png" class="img-fluid"></p>
</div>
</div>
<div class="cell" data-execution_count="5">
<div class="sourceCode cell-code" id="cb4" style="background: #f1f3f5;"><pre class="sourceCode python code-with-copy"><code class="sourceCode python"><span id="cb4-1">theta <span class="op" style="color: #5E5E5E;">=</span> np.linalg.lstsq(np.array([v1, v2]).T, y, rcond<span class="op" style="color: #5E5E5E;">=</span><span class="va" style="color: #111111;">None</span>)[<span class="dv" style="color: #AD0000;">0</span>]</span>
<span id="cb4-2">theta</span></code></pre></div>
<div class="cell-output cell-output-display" data-execution_count="5">
<pre><code>array([0.525 , 0.6625])</code></pre>
</div>
</div>
<div class="cell" data-execution_count="6">
<div class="sourceCode cell-code" id="cb6" style="background: #f1f3f5;"><pre class="sourceCode python code-with-copy"><code class="sourceCode python"><span id="cb6-1"><span class="co" style="color: #5E5E5E;"># Projection of y onto the plane spanned by v1 and v2</span></span>
<span id="cb6-2">y_proj <span class="op" style="color: #5E5E5E;">=</span> np.dot(np.array([v1, v2]).T, theta)</span>
<span id="cb6-3">y_proj</span></code></pre></div>
<div class="cell-output cell-output-display" data-execution_count="6">
<pre><code>array([ 1.85, -0.8 ,  1.85])</code></pre>
</div>
</div>
<div class="cell" data-execution_count="8">
<div class="sourceCode cell-code" id="cb8" style="background: #f1f3f5;"><pre class="sourceCode python code-with-copy"><code class="sourceCode python"><span id="cb8-1"><span class="co" style="color: #5E5E5E;"># Plot the x=z plane filled with color black</span></span>
<span id="cb8-2">fig, ax <span class="op" style="color: #5E5E5E;">=</span> plt.subplots(figsize<span class="op" style="color: #5E5E5E;">=</span>(<span class="dv" style="color: #AD0000;">8</span>, <span class="dv" style="color: #AD0000;">8</span>))</span>
<span id="cb8-3"><span class="co" style="color: #5E5E5E;"># 3d projection</span></span>
<span id="cb8-4">ax <span class="op" style="color: #5E5E5E;">=</span> fig.add_subplot(<span class="dv" style="color: #AD0000;">111</span>, projection<span class="op" style="color: #5E5E5E;">=</span><span class="st" style="color: #20794D;">'3d'</span>)</span>
<span id="cb8-5">xx, zz <span class="op" style="color: #5E5E5E;">=</span> np.meshgrid(np.linspace(<span class="op" style="color: #5E5E5E;">-</span><span class="dv" style="color: #AD0000;">1</span>, <span class="dv" style="color: #AD0000;">4</span>, <span class="dv" style="color: #AD0000;">100</span>), np.linspace(<span class="op" style="color: #5E5E5E;">-</span><span class="dv" style="color: #AD0000;">1</span>, <span class="dv" style="color: #AD0000;">4</span>, <span class="dv" style="color: #AD0000;">100</span>))</span>
<span id="cb8-6">yy <span class="op" style="color: #5E5E5E;">=</span> np.zeros_like(xx)</span>
<span id="cb8-7">ax.plot_surface(xx, yy, zz, alpha<span class="op" style="color: #5E5E5E;">=</span><span class="fl" style="color: #AD0000;">0.2</span>, color<span class="op" style="color: #5E5E5E;">=</span><span class="st" style="color: #20794D;">'k'</span>)</span>
<span id="cb8-8"></span>
<span id="cb8-9"></span>
<span id="cb8-10"><span class="co" style="color: #5E5E5E;"># plot the vectors in 3D</span></span>
<span id="cb8-11">ax.quiver(<span class="dv" style="color: #AD0000;">0</span>, <span class="dv" style="color: #AD0000;">0</span>, <span class="dv" style="color: #AD0000;">0</span>, v1[<span class="dv" style="color: #AD0000;">0</span>], v1[<span class="dv" style="color: #AD0000;">1</span>], v1[<span class="dv" style="color: #AD0000;">2</span>], color<span class="op" style="color: #5E5E5E;">=</span><span class="st" style="color: #20794D;">'r'</span>, label<span class="op" style="color: #5E5E5E;">=</span><span class="st" style="color: #20794D;">'v1'</span>)</span>
<span id="cb8-12">ax.quiver(<span class="dv" style="color: #AD0000;">0</span>, <span class="dv" style="color: #AD0000;">0</span>, <span class="dv" style="color: #AD0000;">0</span>, v2[<span class="dv" style="color: #AD0000;">0</span>], v2[<span class="dv" style="color: #AD0000;">1</span>], v2[<span class="dv" style="color: #AD0000;">2</span>], color<span class="op" style="color: #5E5E5E;">=</span><span class="st" style="color: #20794D;">'b'</span>, label<span class="op" style="color: #5E5E5E;">=</span><span class="st" style="color: #20794D;">'v2'</span>)</span>
<span id="cb8-13">ax.quiver(<span class="dv" style="color: #AD0000;">0</span>, <span class="dv" style="color: #AD0000;">0</span>, <span class="dv" style="color: #AD0000;">0</span>, y[<span class="dv" style="color: #AD0000;">0</span>], y[<span class="dv" style="color: #AD0000;">1</span>], y[<span class="dv" style="color: #AD0000;">2</span>], color<span class="op" style="color: #5E5E5E;">=</span><span class="st" style="color: #20794D;">'g'</span>, label<span class="op" style="color: #5E5E5E;">=</span><span class="st" style="color: #20794D;">'y'</span>)</span>
<span id="cb8-14"></span>
<span id="cb8-15"></span>
<span id="cb8-16"><span class="co" style="color: #5E5E5E;"># Limit the view to the x-z plane</span></span>
<span id="cb8-17"></span>
<span id="cb8-18">ax.set_xlabel(<span class="st" style="color: #20794D;">'x'</span>)</span>
<span id="cb8-19">ax.set_ylabel(<span class="st" style="color: #20794D;">'y'</span>)</span>
<span id="cb8-20">ax.set_zlabel(<span class="st" style="color: #20794D;">'z'</span>)</span>
<span id="cb8-21"></span>
<span id="cb8-22"><span class="co" style="color: #5E5E5E;"># Set the view angle so that we can see the x-z plane appear at a 45 degree angle</span></span>
<span id="cb8-23"><span class="co" style="color: #5E5E5E;">#ax.view_init(azim=70, elev=200)</span></span>
<span id="cb8-24">ax.view_init(elev<span class="op" style="color: #5E5E5E;">=</span><span class="dv" style="color: #AD0000;">60</span>, azim<span class="op" style="color: #5E5E5E;">=-</span><span class="dv" style="color: #AD0000;">80</span>, roll<span class="op" style="color: #5E5E5E;">=</span><span class="dv" style="color: #AD0000;">90</span>)</span>
<span id="cb8-25">ax.view_init(<span class="dv" style="color: #AD0000;">120</span>, <span class="op" style="color: #5E5E5E;">-</span><span class="dv" style="color: #AD0000;">120</span>, <span class="op" style="color: #5E5E5E;">-</span><span class="dv" style="color: #AD0000;">120</span>)</span>
<span id="cb8-26"><span class="co" style="color: #5E5E5E;">#ax.view_init(roll=45)</span></span>
<span id="cb8-27"><span class="co" style="color: #5E5E5E;">#ax.view_init(elev=30, azim=45, roll=15)</span></span>
<span id="cb8-28">ax.set_ylim(<span class="op" style="color: #5E5E5E;">-</span><span class="dv" style="color: #AD0000;">4</span>, <span class="dv" style="color: #AD0000;">4</span>)</span>
<span id="cb8-29">ax.set_xlim(<span class="dv" style="color: #AD0000;">0</span>, <span class="dv" style="color: #AD0000;">4</span>)</span>
<span id="cb8-30">ax.set_zlim(<span class="dv" style="color: #AD0000;">0</span>, <span class="dv" style="color: #AD0000;">4</span>)</span>
<span id="cb8-31"></span>
<span id="cb8-32"></span>
<span id="cb8-33"><span class="co" style="color: #5E5E5E;"># Plot the projection of y onto the plane spanned by v1 and v2</span></span>
<span id="cb8-34">ax.quiver(<span class="dv" style="color: #AD0000;">0</span>, <span class="dv" style="color: #AD0000;">0</span>, <span class="dv" style="color: #AD0000;">0</span>, y_proj[<span class="dv" style="color: #AD0000;">0</span>], y_proj[<span class="dv" style="color: #AD0000;">1</span>], y_proj[<span class="dv" style="color: #AD0000;">2</span>], color<span class="op" style="color: #5E5E5E;">=</span><span class="st" style="color: #20794D;">'k'</span>, label<span class="op" style="color: #5E5E5E;">=</span><span class="st" style="color: #20794D;">'Projection of y onto</span><span class="ch" style="color: #20794D;">\n</span><span class="st" style="color: #20794D;"> the plane spanned by v1 and v2'</span>)</span>
<span id="cb8-35">plt.legend()</span></code></pre></div>
<div class="cell-output cell-output-display" data-execution_count="8">
<pre><code>&lt;matplotlib.legend.Legend at 0x111d52730&gt;</code></pre>
</div>
<div class="cell-output cell-output-display">
<p><img src="https://github.com/nipunbatra/ml2023/notebooks/posts/projection_files/figure-html/cell-7-output-2.png" class="img-fluid"></p>
</div>
</div>



 ]]></description>
  <guid>https://github.com/nipunbatra/ml2023/notebooks/posts/projection.html</guid>
  <pubDate>Tue, 31 Jan 2023 00:00:00 GMT</pubDate>
</item>
<item>
  <title>Maths and JAX: Low Rank</title>
  <dc:creator>Nipun Batra</dc:creator>
  <link>https://github.com/nipunbatra/ml2023/notebooks/posts/lowrank-matrix.html</link>
  <description><![CDATA[ 



<section id="matrix-as-transformation-and-interpreting-low-rank-matrix" class="level1">
<h1>Matrix as transformation and interpreting low rank matrix</h1>
<section id="goals" class="level2">
<h2 class="anchored" data-anchor-id="goals">Goals</h2>
<section id="g1-to-understand-matrix-vector-multiplication-as-transformation-of-the-vector" class="level3">
<h3 class="anchored" data-anchor-id="g1-to-understand-matrix-vector-multiplication-as-transformation-of-the-vector">G1: To understand matrix vector multiplication as transformation of the vector</h3>
<p>Multiplying a matrix A with a vector x transforms x</p>
<p><img src="https://github.com/nipunbatra/ml2023/notebooks/posts/Ax-combined.png" class="img-fluid"></p>
</section>
<section id="g2-understanding-low-rank-matrices-as-applying-transformation-on-a-vector-resulting-in-a-subspace-of-the-original-vector-space" class="level3">
<h3 class="anchored" data-anchor-id="g2-understanding-low-rank-matrices-as-applying-transformation-on-a-vector-resulting-in-a-subspace-of-the-original-vector-space">G2: Understanding low rank matrices as applying transformation on a vector resulting in a subspace of the original vector space</h3>
<p>Transforming a vector via a low rank matrix in the shown examples leads to a line</p>
<p><img src="https://github.com/nipunbatra/ml2023/notebooks/posts/lr-combined.png" class="img-fluid"></p>
<p>We first study Goal 1. The interpretation of matrix vector product is borrowed from the excellent videos from the <a href="https://www.youtube.com/watch?v=kYB8IZa5AuE">3Blue1Brown channel</a>. I’ll first set up the environment by importing a few relevant libraries.</p>
<section id="basic-imports" class="level4">
<h4 class="anchored" data-anchor-id="basic-imports">Basic imports</h4>
<div class="cell" data-execution_count="1">
<div class="sourceCode cell-code" id="cb1" style="background: #f1f3f5;"><pre class="sourceCode python code-with-copy"><code class="sourceCode python"><span id="cb1-1"><span class="im" style="color: #00769E;">import</span> numpy <span class="im" style="color: #00769E;">as</span> np</span>
<span id="cb1-2"><span class="im" style="color: #00769E;">import</span> seaborn <span class="im" style="color: #00769E;">as</span> sns</span>
<span id="cb1-3"><span class="im" style="color: #00769E;">import</span> pandas <span class="im" style="color: #00769E;">as</span> pd</span>
<span id="cb1-4"><span class="im" style="color: #00769E;">import</span> matplotlib.patches <span class="im" style="color: #00769E;">as</span> mpatches</span>
<span id="cb1-5"><span class="im" style="color: #00769E;">import</span> matplotlib.pyplot <span class="im" style="color: #00769E;">as</span> plt</span>
<span id="cb1-6"><span class="im" style="color: #00769E;">from</span> sympy <span class="im" style="color: #00769E;">import</span> Matrix, MatrixSymbol, Eq, MatMul</span>
<span id="cb1-7"></span>
<span id="cb1-8">sns.reset_defaults()</span>
<span id="cb1-9">sns.set_context(context<span class="op" style="color: #5E5E5E;">=</span><span class="st" style="color: #20794D;">"talk"</span>, font_scale<span class="op" style="color: #5E5E5E;">=</span><span class="fl" style="color: #AD0000;">0.75</span>)</span>
<span id="cb1-10"><span class="op" style="color: #5E5E5E;">%</span>matplotlib inline</span>
<span id="cb1-11"><span class="op" style="color: #5E5E5E;">%</span>config InlineBackend.figure_format<span class="op" style="color: #5E5E5E;">=</span><span class="st" style="color: #20794D;">'retina'</span></span></code></pre></div>
</div>
<div class="cell" data-execution_count="2">
<div class="sourceCode cell-code" id="cb2" style="background: #f1f3f5;"><pre class="sourceCode python code-with-copy"><code class="sourceCode python"><span id="cb2-1">sympy_A <span class="op" style="color: #5E5E5E;">=</span> MatrixSymbol(<span class="st" style="color: #20794D;">"A"</span>, <span class="dv" style="color: #AD0000;">2</span>, <span class="dv" style="color: #AD0000;">2</span>)</span>
<span id="cb2-2">sympy_x <span class="op" style="color: #5E5E5E;">=</span> MatrixSymbol(<span class="st" style="color: #20794D;">"x"</span>, <span class="dv" style="color: #AD0000;">2</span>, <span class="dv" style="color: #AD0000;">1</span>)</span>
<span id="cb2-3">y <span class="op" style="color: #5E5E5E;">=</span> MatrixSymbol(<span class="st" style="color: #20794D;">"y"</span>, <span class="dv" style="color: #AD0000;">2</span>, <span class="dv" style="color: #AD0000;">1</span>)</span>
<span id="cb2-4"></span>
<span id="cb2-5">Eq(y, sympy_A<span class="op" style="color: #5E5E5E;">*</span>sympy_x, evaluate<span class="op" style="color: #5E5E5E;">=</span><span class="va" style="color: #111111;">False</span>)</span></code></pre></div>
<div class="cell-output cell-output-display" data-execution_count="2">
<p><img src="https://latex.codecogs.com/png.latex?%5Cdisplaystyle%20y%20=%20A%20x"></p>
</div>
</div>
<p>Given a matrix <code>A</code> and a vector <code>x</code>, we are trying to get <code>y=Ax</code>. Let us first see the values for a specific instance in the 2d space.</p>
<div class="cell" data-execution_count="3">
<div class="sourceCode cell-code" id="cb3" style="background: #f1f3f5;"><pre class="sourceCode python code-with-copy"><code class="sourceCode python"><span id="cb3-1">A <span class="op" style="color: #5E5E5E;">=</span> np.array([[<span class="dv" style="color: #AD0000;">2</span>, <span class="dv" style="color: #AD0000;">1</span>], [<span class="dv" style="color: #AD0000;">1</span>, <span class="dv" style="color: #AD0000;">4</span>]])</span>
<span id="cb3-2"></span>
<span id="cb3-3">x <span class="op" style="color: #5E5E5E;">=</span> np.array([<span class="dv" style="color: #AD0000;">1</span>, <span class="dv" style="color: #AD0000;">1</span>])</span>
<span id="cb3-4">Ax <span class="op" style="color: #5E5E5E;">=</span> A <span class="op" style="color: #5E5E5E;">@</span> x</span>
<span id="cb3-5"></span>
<span id="cb3-6">Eq(Matrix(Ax), MatMul(Matrix(A), Matrix(x)),evaluate<span class="op" style="color: #5E5E5E;">=</span><span class="va" style="color: #111111;">False</span>)</span></code></pre></div>
<div class="cell-output cell-output-display" data-execution_count="3">
<p><img src="https://latex.codecogs.com/png.latex?%5Cdisplaystyle%20%5Cleft%5B%5Cbegin%7Bmatrix%7D3%5C%5C5%5Cend%7Bmatrix%7D%5Cright%5D%20=%20%5Cleft%5B%5Cbegin%7Bmatrix%7D2%20&amp;%201%5C%5C1%20&amp;%204%5Cend%7Bmatrix%7D%5Cright%5D%20%5Cleft%5B%5Cbegin%7Bmatrix%7D1%5C%5C1%5Cend%7Bmatrix%7D%5Cright%5D"></p>
</div>
</div>
<p>Here, we have A = <img src="https://latex.codecogs.com/png.latex?%5Cleft%5B%5Cbegin%7Bmatrix%7D2%20&amp;%201%5C%5C1%20&amp;%204%5Cend%7Bmatrix%7D%5Cright%5D"> and x = <img src="https://latex.codecogs.com/png.latex?%7B%5Ctext%7B%5B1%201%5D%7D%7D"></p>
<p>Now some code to create arrows to represent arrows.</p>
<div class="cell" data-execution_count="4">
<div class="sourceCode cell-code" id="cb4" style="background: #f1f3f5;"><pre class="sourceCode python code-with-copy"><code class="sourceCode python"><span id="cb4-1"><span class="kw" style="color: #003B4F;">def</span> plot_arrow(ax, x, color, label):</span>
<span id="cb4-2">    x_head, y_head <span class="op" style="color: #5E5E5E;">=</span> x[<span class="dv" style="color: #AD0000;">0</span>], x[<span class="dv" style="color: #AD0000;">1</span>]</span>
<span id="cb4-3">    x_tail <span class="op" style="color: #5E5E5E;">=</span> <span class="fl" style="color: #AD0000;">0.0</span></span>
<span id="cb4-4">    y_tail <span class="op" style="color: #5E5E5E;">=</span> <span class="fl" style="color: #AD0000;">0.0</span></span>
<span id="cb4-5">    dx <span class="op" style="color: #5E5E5E;">=</span> x_head <span class="op" style="color: #5E5E5E;">-</span> x_tail</span>
<span id="cb4-6">    dy <span class="op" style="color: #5E5E5E;">=</span> y_head <span class="op" style="color: #5E5E5E;">-</span> y_tail</span>
<span id="cb4-7"></span>
<span id="cb4-8">    arrow <span class="op" style="color: #5E5E5E;">=</span> mpatches.FancyArrowPatch(</span>
<span id="cb4-9">        (x_tail, y_tail), (x_head, y_head), mutation_scale<span class="op" style="color: #5E5E5E;">=</span><span class="dv" style="color: #AD0000;">10</span>, color<span class="op" style="color: #5E5E5E;">=</span>color, label<span class="op" style="color: #5E5E5E;">=</span>label</span>
<span id="cb4-10">    )</span>
<span id="cb4-11"></span>
<span id="cb4-12">    ax.add_patch(arrow)</span>
<span id="cb4-13">    ax.legend(bbox_to_anchor<span class="op" style="color: #5E5E5E;">=</span>(<span class="fl" style="color: #AD0000;">1.6</span>, <span class="dv" style="color: #AD0000;">1</span>), borderaxespad<span class="op" style="color: #5E5E5E;">=</span><span class="dv" style="color: #AD0000;">0</span>)</span></code></pre></div>
</div>
<p>Now some code to plot the vector corresponding to Ax</p>
<div class="cell" data-execution_count="5">
<div class="sourceCode cell-code" id="cb5" style="background: #f1f3f5;"><pre class="sourceCode python code-with-copy"><code class="sourceCode python"><span id="cb5-1"><span class="kw" style="color: #003B4F;">def</span> plot_transform(A, x):</span>
<span id="cb5-2">    Ax <span class="op" style="color: #5E5E5E;">=</span> A <span class="op" style="color: #5E5E5E;">@</span> x</span>
<span id="cb5-3">    fig, ax <span class="op" style="color: #5E5E5E;">=</span> plt.subplots()</span>
<span id="cb5-4">    plot_arrow(ax, x, <span class="st" style="color: #20794D;">"k"</span>, <span class="ss" style="color: #20794D;">f"Original (x) </span><span class="sc" style="color: #5E5E5E;">{</span>x<span class="sc" style="color: #5E5E5E;">}</span><span class="ss" style="color: #20794D;">"</span>)</span>
<span id="cb5-5">    plot_arrow(ax, Ax, <span class="st" style="color: #20794D;">"g"</span>, <span class="ss" style="color: #20794D;">f"Transformed (Ax) </span><span class="sc" style="color: #5E5E5E;">{</span>Ax<span class="sc" style="color: #5E5E5E;">}</span><span class="ss" style="color: #20794D;">"</span>)</span>
<span id="cb5-6">    plt.xlim((<span class="op" style="color: #5E5E5E;">-</span><span class="dv" style="color: #AD0000;">5</span>, <span class="dv" style="color: #AD0000;">5</span>))</span>
<span id="cb5-7">    plt.ylim((<span class="op" style="color: #5E5E5E;">-</span><span class="dv" style="color: #AD0000;">5</span>, <span class="dv" style="color: #AD0000;">5</span>))</span>
<span id="cb5-8">    plt.grid(alpha<span class="op" style="color: #5E5E5E;">=</span><span class="fl" style="color: #AD0000;">0.1</span>)</span>
<span id="cb5-9">    ax.set_aspect(<span class="st" style="color: #20794D;">"equal"</span>)</span>
<span id="cb5-10">    plt.title(<span class="ss" style="color: #20794D;">f"A = </span><span class="sc" style="color: #5E5E5E;">{</span>A<span class="sc" style="color: #5E5E5E;">}</span><span class="ss" style="color: #20794D;">"</span>)</span>
<span id="cb5-11">    sns.despine(left<span class="op" style="color: #5E5E5E;">=</span><span class="va" style="color: #111111;">True</span>, bottom<span class="op" style="color: #5E5E5E;">=</span><span class="va" style="color: #111111;">True</span>)</span>
<span id="cb5-12">    plt.tight_layout()</span></code></pre></div>
</div>
<div class="cell" data-execution_count="6">
<div class="sourceCode cell-code" id="cb6" style="background: #f1f3f5;"><pre class="sourceCode python code-with-copy"><code class="sourceCode python"><span id="cb6-1">plot_transform(np.array([[<span class="fl" style="color: #AD0000;">1.0</span>, <span class="fl" style="color: #AD0000;">1.0</span>], [<span class="fl" style="color: #AD0000;">1.0</span>, <span class="op" style="color: #5E5E5E;">-</span><span class="fl" style="color: #AD0000;">1.0</span>]]), [<span class="fl" style="color: #AD0000;">1.0</span>, <span class="fl" style="color: #AD0000;">2.0</span>])</span>
<span id="cb6-2">plt.savefig(<span class="st" style="color: #20794D;">"Ax1.png"</span>, dpi<span class="op" style="color: #5E5E5E;">=</span><span class="dv" style="color: #AD0000;">100</span>)</span></code></pre></div>
<div class="cell-output cell-output-display">
<p><img src="https://github.com/nipunbatra/ml2023/notebooks/posts/lowrank-matrix_files/figure-html/cell-7-output-1.png" class="img-fluid"></p>
</div>
</div>
<p>In the plot above, we can see that the vector [1, 2] is transformed to [3, -1] via the matrix A.</p>
<p>Let us now write some code to create the rotation matrix and apply it on our input x</p>
<div class="cell" data-execution_count="7">
<div class="sourceCode cell-code" id="cb7" style="background: #f1f3f5;"><pre class="sourceCode python code-with-copy"><code class="sourceCode python"><span id="cb7-1"><span class="kw" style="color: #003B4F;">def</span> rot(angle):</span>
<span id="cb7-2">    theta <span class="op" style="color: #5E5E5E;">=</span> np.radians(angle)</span>
<span id="cb7-3">    c, s <span class="op" style="color: #5E5E5E;">=</span> np.cos(theta), np.sin(theta)</span>
<span id="cb7-4">    R <span class="op" style="color: #5E5E5E;">=</span> np.array(((c, <span class="op" style="color: #5E5E5E;">-</span>s), (s, c)))</span>
<span id="cb7-5">    <span class="cf" style="color: #003B4F;">return</span> np.<span class="bu" style="color: null;">round</span>(R, <span class="dv" style="color: #AD0000;">2</span>)</span></code></pre></div>
</div>
<div class="cell" data-execution_count="8">
<div class="sourceCode cell-code" id="cb8" style="background: #f1f3f5;"><pre class="sourceCode python code-with-copy"><code class="sourceCode python"><span id="cb8-1">x <span class="op" style="color: #5E5E5E;">=</span> np.array([<span class="fl" style="color: #AD0000;">1.0</span>, <span class="fl" style="color: #AD0000;">2.0</span>])</span>
<span id="cb8-2">plot_transform(rot(<span class="dv" style="color: #AD0000;">90</span>), x)</span>
<span id="cb8-3">plt.savefig(<span class="st" style="color: #20794D;">"Ax2"</span>, dpi<span class="op" style="color: #5E5E5E;">=</span><span class="dv" style="color: #AD0000;">100</span>)</span></code></pre></div>
<div class="cell-output cell-output-display">
<p><img src="https://github.com/nipunbatra/ml2023/notebooks/posts/lowrank-matrix_files/figure-html/cell-9-output-1.png" class="img-fluid"></p>
</div>
</div>
<p>As we can see above, creating the 90 degree rotation matrix indeed transforms our vector anticlockwise 90 degrees.</p>
<p>Now let us talk about matrices A that are low rank. I am creating a simple low rank matrix where the second row is some constant times the first row.</p>
<div class="cell" data-execution_count="9">
<div class="sourceCode cell-code" id="cb9" style="background: #f1f3f5;"><pre class="sourceCode python code-with-copy"><code class="sourceCode python"><span id="cb9-1"><span class="kw" style="color: #003B4F;">def</span> plot_lr(x, slope):</span>
<span id="cb9-2">    low_rank <span class="op" style="color: #5E5E5E;">=</span> np.array([<span class="fl" style="color: #AD0000;">1.0</span>, <span class="fl" style="color: #AD0000;">2.0</span>])</span>
<span id="cb9-3">    low_rank <span class="op" style="color: #5E5E5E;">=</span> np.vstack((low_rank, slope <span class="op" style="color: #5E5E5E;">*</span> low_rank))</span>
<span id="cb9-4">    plot_transform(low_rank, x)</span>
<span id="cb9-5">    x_lin <span class="op" style="color: #5E5E5E;">=</span> np.linspace(<span class="op" style="color: #5E5E5E;">-</span><span class="dv" style="color: #AD0000;">5</span>, <span class="dv" style="color: #AD0000;">5</span>, <span class="dv" style="color: #AD0000;">100</span>)</span>
<span id="cb9-6">    y <span class="op" style="color: #5E5E5E;">=</span> x_lin <span class="op" style="color: #5E5E5E;">*</span> slope</span>
<span id="cb9-7">    plt.plot(x_lin, y, alpha<span class="op" style="color: #5E5E5E;">=</span><span class="fl" style="color: #AD0000;">0.4</span>, lw<span class="op" style="color: #5E5E5E;">=</span><span class="dv" style="color: #AD0000;">5</span>, label<span class="op" style="color: #5E5E5E;">=</span><span class="ss" style="color: #20794D;">f"y = </span><span class="sc" style="color: #5E5E5E;">{</span>slope<span class="sc" style="color: #5E5E5E;">}</span><span class="ss" style="color: #20794D;">x"</span>)</span>
<span id="cb9-8">    plt.legend(bbox_to_anchor<span class="op" style="color: #5E5E5E;">=</span>(<span class="fl" style="color: #AD0000;">1.2</span>, <span class="dv" style="color: #AD0000;">1</span>), borderaxespad<span class="op" style="color: #5E5E5E;">=</span><span class="dv" style="color: #AD0000;">0</span>)</span></code></pre></div>
</div>
<div class="cell" data-execution_count="10">
<div class="sourceCode cell-code" id="cb10" style="background: #f1f3f5;"><pre class="sourceCode python code-with-copy"><code class="sourceCode python"><span id="cb10-1">plot_lr(x, <span class="fl" style="color: #AD0000;">1.01</span>)</span>
<span id="cb10-2">plt.tight_layout()</span>
<span id="cb10-3">plt.savefig(<span class="st" style="color: #20794D;">"lr-1.png"</span>, bbox_inches<span class="op" style="color: #5E5E5E;">=</span><span class="st" style="color: #20794D;">"tight"</span>, dpi<span class="op" style="color: #5E5E5E;">=</span><span class="dv" style="color: #AD0000;">100</span>)</span></code></pre></div>
<div class="cell-output cell-output-display">
<p><img src="https://github.com/nipunbatra/ml2023/notebooks/posts/lowrank-matrix_files/figure-html/cell-11-output-1.png" class="img-fluid"></p>
</div>
</div>
<div class="cell" data-execution_count="11">
<div class="sourceCode cell-code" id="cb11" style="background: #f1f3f5;"><pre class="sourceCode python code-with-copy"><code class="sourceCode python"><span id="cb11-1">plot_lr([<span class="fl" style="color: #AD0000;">1.0</span>, <span class="op" style="color: #5E5E5E;">-</span><span class="fl" style="color: #AD0000;">1.0</span>], <span class="fl" style="color: #AD0000;">1.01</span>)</span>
<span id="cb11-2">plt.tight_layout()</span>
<span id="cb11-3">plt.savefig(<span class="st" style="color: #20794D;">"lr-2.png"</span>, bbox_inches<span class="op" style="color: #5E5E5E;">=</span><span class="st" style="color: #20794D;">"tight"</span>, dpi<span class="op" style="color: #5E5E5E;">=</span><span class="dv" style="color: #AD0000;">100</span>)</span></code></pre></div>
<div class="cell-output cell-output-display">
<p><img src="https://github.com/nipunbatra/ml2023/notebooks/posts/lowrank-matrix_files/figure-html/cell-12-output-1.png" class="img-fluid"></p>
</div>
</div>
<div class="cell" data-execution_count="12">
<div class="sourceCode cell-code" id="cb12" style="background: #f1f3f5;"><pre class="sourceCode python code-with-copy"><code class="sourceCode python"><span id="cb12-1">plot_lr([<span class="fl" style="color: #AD0000;">0.5</span>, <span class="op" style="color: #5E5E5E;">-</span><span class="fl" style="color: #AD0000;">0.7</span>], <span class="fl" style="color: #AD0000;">1.01</span>)</span>
<span id="cb12-2">plt.tight_layout()</span>
<span id="cb12-3">plt.savefig(<span class="st" style="color: #20794D;">"lr-3.png"</span>, bbox_inches<span class="op" style="color: #5E5E5E;">=</span><span class="st" style="color: #20794D;">"tight"</span>, dpi<span class="op" style="color: #5E5E5E;">=</span><span class="dv" style="color: #AD0000;">100</span>)</span></code></pre></div>
<div class="cell-output cell-output-display">
<p><img src="https://github.com/nipunbatra/ml2023/notebooks/posts/lowrank-matrix_files/figure-html/cell-13-output-1.png" class="img-fluid"></p>
</div>
</div>
<div class="cell" data-execution_count="13">
<div class="sourceCode cell-code" id="cb13" style="background: #f1f3f5;"><pre class="sourceCode python code-with-copy"><code class="sourceCode python"><span id="cb13-1">plot_lr([<span class="op" style="color: #5E5E5E;">-</span><span class="fl" style="color: #AD0000;">1.0</span>, <span class="fl" style="color: #AD0000;">0.0</span>], <span class="fl" style="color: #AD0000;">1.01</span>)</span>
<span id="cb13-2">plt.tight_layout()</span>
<span id="cb13-3">plt.savefig(<span class="st" style="color: #20794D;">"lr-4.png"</span>, bbox_inches<span class="op" style="color: #5E5E5E;">=</span><span class="st" style="color: #20794D;">"tight"</span>, dpi<span class="op" style="color: #5E5E5E;">=</span><span class="dv" style="color: #AD0000;">100</span>)</span></code></pre></div>
<div class="cell-output cell-output-display">
<p><img src="https://github.com/nipunbatra/ml2023/notebooks/posts/lowrank-matrix_files/figure-html/cell-14-output-1.png" class="img-fluid"></p>
</div>
</div>
<p>To summarize</p>
<p><img src="https://github.com/nipunbatra/ml2023/notebooks/posts/lr-combined.png" class="img-fluid"></p>
<p>In the above plots we can see that changing our x to any vector in the 2d space leads to us to transformed vector not covering the whole 2d space, but on line in the 2d space. One can easily take this learning to higher dimensional matrices A.</p>


</section>
</section>
</section>
</section>

 ]]></description>
  <guid>https://github.com/nipunbatra/ml2023/notebooks/posts/lowrank-matrix.html</guid>
  <pubDate>Tue, 31 Jan 2023 00:00:00 GMT</pubDate>
  <media:content url="https://github.com/nipunbatra/ml2023/notebooks/posts/Ax-combined.png" medium="image" type="image/png"/>
</item>
<item>
  <title>Generating names using MLPs</title>
  <dc:creator>Nipun Batra</dc:creator>
  <link>https://github.com/nipunbatra/ml2023/notebooks/posts/names.html</link>
  <description><![CDATA[ 



<div class="cell" data-execution_count="88">
<div class="sourceCode cell-code" id="cb1" style="background: #f1f3f5;"><pre class="sourceCode python code-with-copy"><code class="sourceCode python"><span id="cb1-1"><span class="im" style="color: #00769E;">import</span> torch</span>
<span id="cb1-2"><span class="im" style="color: #00769E;">import</span> torch.nn.functional <span class="im" style="color: #00769E;">as</span> F</span>
<span id="cb1-3"><span class="im" style="color: #00769E;">from</span> torch <span class="im" style="color: #00769E;">import</span> nn</span>
<span id="cb1-4"><span class="im" style="color: #00769E;">import</span> pandas <span class="im" style="color: #00769E;">as</span> pd</span>
<span id="cb1-5"><span class="im" style="color: #00769E;">import</span> matplotlib.pyplot <span class="im" style="color: #00769E;">as</span> plt <span class="co" style="color: #5E5E5E;"># for making figures</span></span>
<span id="cb1-6"><span class="op" style="color: #5E5E5E;">%</span>matplotlib inline</span></code></pre></div>
</div>
<div class="cell">
<div class="sourceCode cell-code" id="cb2" style="background: #f1f3f5;"><pre class="sourceCode python code-with-copy"><code class="sourceCode python"><span id="cb2-1"><span class="co" style="color: #5E5E5E;"># Get some names from https://github.com/MASTREX/List-of-Indian-Names</span></span></code></pre></div>
</div>
<div class="cell" data-execution_count="85">
<div class="sourceCode cell-code" id="cb3" style="background: #f1f3f5;"><pre class="sourceCode python code-with-copy"><code class="sourceCode python"><span id="cb3-1"><span class="op" style="color: #5E5E5E;">!</span>wget https:<span class="op" style="color: #5E5E5E;">//</span>raw.githubusercontent.com<span class="op" style="color: #5E5E5E;">/</span>balasahebgulave<span class="op" style="color: #5E5E5E;">/</span>Dataset<span class="op" style="color: #5E5E5E;">-</span>Indian<span class="op" style="color: #5E5E5E;">-</span>Names<span class="op" style="color: #5E5E5E;">/</span>master<span class="op" style="color: #5E5E5E;">/</span>Indian_Names.csv <span class="op" style="color: #5E5E5E;">-</span>O names<span class="op" style="color: #5E5E5E;">-</span><span class="bu" style="color: null;">long</span>.csv</span></code></pre></div>
<div class="cell-output cell-output-stdout">
<pre><code>--2023-03-30 10:44:24--  https://raw.githubusercontent.com/balasahebgulave/Dataset-Indian-Names/master/Indian_Names.csv
Resolving raw.githubusercontent.com (raw.githubusercontent.com)... 185.199.108.133, 185.199.111.133, 185.199.110.133, ...
Connecting to raw.githubusercontent.com (raw.githubusercontent.com)|185.199.108.133|:443... connected.
HTTP request sent, awaiting response... 200 OK
Length: 85538 (84K) [text/plain]
Saving to: ‘names-long.csv’

names-long.csv      100%[===================&gt;]  83.53K  --.-KB/s    in 0.02s   

2023-03-30 10:44:25 (4.09 MB/s) - ‘names-long.csv’ saved [85538/85538]
</code></pre>
</div>
</div>
<div class="cell" data-execution_count="89">
<div class="sourceCode cell-code" id="cb5" style="background: #f1f3f5;"><pre class="sourceCode python code-with-copy"><code class="sourceCode python"><span id="cb5-1"><span class="op" style="color: #5E5E5E;">!</span>head names<span class="op" style="color: #5E5E5E;">-</span><span class="bu" style="color: null;">long</span>.csv</span></code></pre></div>
<div class="cell-output cell-output-stdout">
<pre><code>,Name
0,aabid
1,aabida
2,aachal
3,aadesh
4,aadil
5,aadish
6,aaditya
7,aaenab
8,aafreen</code></pre>
</div>
</div>
<div class="cell" data-execution_count="159">
<div class="sourceCode cell-code" id="cb7" style="background: #f1f3f5;"><pre class="sourceCode python code-with-copy"><code class="sourceCode python"><span id="cb7-1">words <span class="op" style="color: #5E5E5E;">=</span> pd.read_csv(<span class="st" style="color: #20794D;">'names-long.csv'</span>)[<span class="st" style="color: #20794D;">"Name"</span>]</span>
<span id="cb7-2">words <span class="op" style="color: #5E5E5E;">=</span> words.<span class="bu" style="color: null;">str</span>.lower()</span>
<span id="cb7-3">words <span class="op" style="color: #5E5E5E;">=</span> words.<span class="bu" style="color: null;">str</span>.strip()</span>
<span id="cb7-4">words <span class="op" style="color: #5E5E5E;">=</span> words.<span class="bu" style="color: null;">str</span>.replace(<span class="st" style="color: #20794D;">" "</span>, <span class="st" style="color: #20794D;">""</span>)</span>
<span id="cb7-5"></span>
<span id="cb7-6">words <span class="op" style="color: #5E5E5E;">=</span> words[words.<span class="bu" style="color: null;">str</span>.<span class="bu" style="color: null;">len</span>() <span class="op" style="color: #5E5E5E;">&gt;</span> <span class="dv" style="color: #AD0000;">2</span>]</span>
<span id="cb7-7">words <span class="op" style="color: #5E5E5E;">=</span> words[words.<span class="bu" style="color: null;">str</span>.<span class="bu" style="color: null;">len</span>() <span class="op" style="color: #5E5E5E;">&lt;</span> <span class="dv" style="color: #AD0000;">10</span>]</span>
<span id="cb7-8"></span>
<span id="cb7-9"><span class="co" style="color: #5E5E5E;"># Randomly shuffle the words</span></span>
<span id="cb7-10">words <span class="op" style="color: #5E5E5E;">=</span> words.sample(frac<span class="op" style="color: #5E5E5E;">=</span><span class="dv" style="color: #AD0000;">1</span>).reset_index(drop<span class="op" style="color: #5E5E5E;">=</span><span class="va" style="color: #111111;">True</span>)</span>
<span id="cb7-11">words <span class="op" style="color: #5E5E5E;">=</span> words.tolist()</span>
<span id="cb7-12"></span>
<span id="cb7-13"><span class="co" style="color: #5E5E5E;"># Remove words having non alphabets</span></span>
<span id="cb7-14">words <span class="op" style="color: #5E5E5E;">=</span> [word <span class="cf" style="color: #003B4F;">for</span> word <span class="kw" style="color: #003B4F;">in</span> words <span class="cf" style="color: #003B4F;">if</span> word.isalpha()]</span>
<span id="cb7-15">words[:<span class="dv" style="color: #AD0000;">10</span>]</span></code></pre></div>
<div class="cell-output cell-output-display" data-execution_count="159">
<pre><code>['mahender',
 'jit',
 'aashu',
 'shadab',
 'sahun',
 'harish',
 'satya',
 'gulnanj',
 'ganesi',
 'dalima']</code></pre>
</div>
</div>
<div class="cell" data-execution_count="160">
<div class="sourceCode cell-code" id="cb9" style="background: #f1f3f5;"><pre class="sourceCode python code-with-copy"><code class="sourceCode python"><span id="cb9-1"><span class="bu" style="color: null;">len</span>(words)</span></code></pre></div>
<div class="cell-output cell-output-display" data-execution_count="160">
<pre><code>6184</code></pre>
</div>
</div>
<div class="cell" data-execution_count="161">
<div class="sourceCode cell-code" id="cb11" style="background: #f1f3f5;"><pre class="sourceCode python code-with-copy"><code class="sourceCode python"><span id="cb11-1"><span class="co" style="color: #5E5E5E;"># build the vocabulary of characters and mappings to/from integers</span></span>
<span id="cb11-2">chars <span class="op" style="color: #5E5E5E;">=</span> <span class="bu" style="color: null;">sorted</span>(<span class="bu" style="color: null;">list</span>(<span class="bu" style="color: null;">set</span>(<span class="st" style="color: #20794D;">''</span>.join(words))))</span>
<span id="cb11-3">stoi <span class="op" style="color: #5E5E5E;">=</span> {s:i<span class="op" style="color: #5E5E5E;">+</span><span class="dv" style="color: #AD0000;">1</span> <span class="cf" style="color: #003B4F;">for</span> i,s <span class="kw" style="color: #003B4F;">in</span> <span class="bu" style="color: null;">enumerate</span>(chars)}</span>
<span id="cb11-4">stoi[<span class="st" style="color: #20794D;">'.'</span>] <span class="op" style="color: #5E5E5E;">=</span> <span class="dv" style="color: #AD0000;">0</span></span>
<span id="cb11-5">itos <span class="op" style="color: #5E5E5E;">=</span> {i:s <span class="cf" style="color: #003B4F;">for</span> s,i <span class="kw" style="color: #003B4F;">in</span> stoi.items()}</span>
<span id="cb11-6"><span class="bu" style="color: null;">print</span>(itos)</span></code></pre></div>
<div class="cell-output cell-output-stdout">
<pre><code>{1: 'a', 2: 'b', 3: 'c', 4: 'd', 5: 'e', 6: 'f', 7: 'g', 8: 'h', 9: 'i', 10: 'j', 11: 'k', 12: 'l', 13: 'm', 14: 'n', 15: 'o', 16: 'p', 17: 'q', 18: 'r', 19: 's', 20: 't', 21: 'u', 22: 'v', 23: 'w', 24: 'x', 25: 'y', 26: 'z', 0: '.'}</code></pre>
</div>
</div>
<div class="cell" data-execution_count="187">
<div class="sourceCode cell-code" id="cb13" style="background: #f1f3f5;"><pre class="sourceCode python code-with-copy"><code class="sourceCode python"><span id="cb13-1">block_size <span class="op" style="color: #5E5E5E;">=</span> <span class="dv" style="color: #AD0000;">3</span> <span class="co" style="color: #5E5E5E;"># context length: how many characters do we take to predict the next one?</span></span>
<span id="cb13-2">X, Y <span class="op" style="color: #5E5E5E;">=</span> [], []</span>
<span id="cb13-3"><span class="cf" style="color: #003B4F;">for</span> w <span class="kw" style="color: #003B4F;">in</span> words[:<span class="dv" style="color: #AD0000;">1000</span>]:</span>
<span id="cb13-4">  </span>
<span id="cb13-5">  <span class="co" style="color: #5E5E5E;">#print(w)</span></span>
<span id="cb13-6">  context <span class="op" style="color: #5E5E5E;">=</span> [<span class="dv" style="color: #AD0000;">0</span>] <span class="op" style="color: #5E5E5E;">*</span> block_size</span>
<span id="cb13-7">  <span class="cf" style="color: #003B4F;">for</span> ch <span class="kw" style="color: #003B4F;">in</span> w <span class="op" style="color: #5E5E5E;">+</span> <span class="st" style="color: #20794D;">'.'</span>:</span>
<span id="cb13-8">    ix <span class="op" style="color: #5E5E5E;">=</span> stoi[ch]</span>
<span id="cb13-9">    X.append(context)</span>
<span id="cb13-10">    Y.append(ix)</span>
<span id="cb13-11">    <span class="bu" style="color: null;">print</span>(<span class="st" style="color: #20794D;">''</span>.join(itos[i] <span class="cf" style="color: #003B4F;">for</span> i <span class="kw" style="color: #003B4F;">in</span> context), <span class="st" style="color: #20794D;">'---&gt;'</span>, itos[ix])</span>
<span id="cb13-12">    context <span class="op" style="color: #5E5E5E;">=</span> context[<span class="dv" style="color: #AD0000;">1</span>:] <span class="op" style="color: #5E5E5E;">+</span> [ix] <span class="co" style="color: #5E5E5E;"># crop and append</span></span>
<span id="cb13-13">  </span>
<span id="cb13-14">X <span class="op" style="color: #5E5E5E;">=</span> torch.tensor(X)</span>
<span id="cb13-15">Y <span class="op" style="color: #5E5E5E;">=</span> torch.tensor(Y)</span></code></pre></div>
<div class="cell-output cell-output-stdout">
<pre><code>... ---&gt; m
..m ---&gt; a
.ma ---&gt; h
mah ---&gt; e
ahe ---&gt; n
hen ---&gt; d
end ---&gt; e
nde ---&gt; r
der ---&gt; .
... ---&gt; j
..j ---&gt; i
.ji ---&gt; t
jit ---&gt; .
... ---&gt; a
..a ---&gt; a
.aa ---&gt; s
aas ---&gt; h
ash ---&gt; u
shu ---&gt; .
... ---&gt; s
..s ---&gt; h
.sh ---&gt; a
sha ---&gt; d
had ---&gt; a
ada ---&gt; b
dab ---&gt; .
... ---&gt; s
..s ---&gt; a
.sa ---&gt; h
sah ---&gt; u
ahu ---&gt; n
hun ---&gt; .
... ---&gt; h
..h ---&gt; a
.ha ---&gt; r
har ---&gt; i
ari ---&gt; s
ris ---&gt; h
ish ---&gt; .
... ---&gt; s
..s ---&gt; a
.sa ---&gt; t
sat ---&gt; y
aty ---&gt; a
tya ---&gt; .
... ---&gt; g
..g ---&gt; u
.gu ---&gt; l
gul ---&gt; n
uln ---&gt; a
lna ---&gt; n
nan ---&gt; j
anj ---&gt; .
... ---&gt; g
..g ---&gt; a
.ga ---&gt; n
gan ---&gt; e
ane ---&gt; s
nes ---&gt; i
esi ---&gt; .
... ---&gt; d
..d ---&gt; a
.da ---&gt; l
dal ---&gt; i
ali ---&gt; m
lim ---&gt; a
ima ---&gt; .
... ---&gt; k
..k ---&gt; o
.ko ---&gt; s
kos ---&gt; y
osy ---&gt; l
syl ---&gt; a
yla ---&gt; y
lay ---&gt; a
aya ---&gt; .
... ---&gt; p
..p ---&gt; o
.po ---&gt; o
poo ---&gt; r
oor ---&gt; a
ora ---&gt; n
ran ---&gt; .
... ---&gt; m
..m ---&gt; o
.mo ---&gt; h
moh ---&gt; a
oha ---&gt; m
ham ---&gt; m
amm ---&gt; a
mma ---&gt; d
mad ---&gt; .
... ---&gt; s
..s ---&gt; i
.si ---&gt; n
sin ---&gt; t
int ---&gt; a
nta ---&gt; .
... ---&gt; y
..y ---&gt; a
.ya ---&gt; k
yak ---&gt; s
aks ---&gt; h
ksh ---&gt; .
... ---&gt; p
..p ---&gt; e
.pe ---&gt; r
per ---&gt; d
erd ---&gt; e
rde ---&gt; e
dee ---&gt; p
eep ---&gt; .
... ---&gt; t
..t ---&gt; i
.ti ---&gt; s
tis ---&gt; h
ish ---&gt; a
sha ---&gt; .
... ---&gt; v
..v ---&gt; a
.va ---&gt; s
vas ---&gt; h
ash ---&gt; i
shi ---&gt; l
hil ---&gt; a
ila ---&gt; .
... ---&gt; d
..d ---&gt; e
.de ---&gt; v
dev ---&gt; r
evr ---&gt; a
vra ---&gt; j
raj ---&gt; .
... ---&gt; s
..s ---&gt; h
.sh ---&gt; a
sha ---&gt; h
hah ---&gt; b
ahb ---&gt; a
hba ---&gt; z
baz ---&gt; .
... ---&gt; r
..r ---&gt; a
.ra ---&gt; m
ram ---&gt; u
amu ---&gt; l
mul ---&gt; u
ulu ---&gt; .
... ---&gt; d
..d ---&gt; h
.dh ---&gt; i
dhi ---&gt; r
hir ---&gt; e
ire ---&gt; n
ren ---&gt; d
end ---&gt; e
nde ---&gt; r
der ---&gt; .
... ---&gt; j
..j ---&gt; u
.ju ---&gt; n
jun ---&gt; e
une ---&gt; b
neb ---&gt; .
... ---&gt; g
..g ---&gt; i
.gi ---&gt; l
gil ---&gt; b
ilb ---&gt; a
lba ---&gt; h
bah ---&gt; a
aha ---&gt; r
har ---&gt; .
... ---&gt; a
..a ---&gt; y
.ay ---&gt; u
ayu ---&gt; s
yus ---&gt; h
ush ---&gt; i
shi ---&gt; .
... ---&gt; d
..d ---&gt; r
.dr ---&gt; u
dru ---&gt; g
rug ---&gt; a
uga ---&gt; .
... ---&gt; k
..k ---&gt; u
.ku ---&gt; s
kus ---&gt; o
uso ---&gt; .
... ---&gt; a
..a ---&gt; t
.at ---&gt; e
ate ---&gt; e
tee ---&gt; k
eek ---&gt; .
... ---&gt; n
..n ---&gt; a
.na ---&gt; j
naj ---&gt; r
ajr ---&gt; e
jre ---&gt; e
ree ---&gt; n
een ---&gt; .
... ---&gt; s
..s ---&gt; w
.sw ---&gt; i
swi ---&gt; t
wit ---&gt; i
iti ---&gt; .
... ---&gt; s
..s ---&gt; a
.sa ---&gt; n
san ---&gt; a
ana ---&gt; m
nam ---&gt; .
... ---&gt; c
..c ---&gt; h
.ch ---&gt; h
chh ---&gt; a
hha ---&gt; b
hab ---&gt; i
abi ---&gt; .
... ---&gt; n
..n ---&gt; i
.ni ---&gt; l
nil ---&gt; a
ila ---&gt; m
lam ---&gt; .
... ---&gt; s
..s ---&gt; r
.sr ---&gt; i
sri ---&gt; t
rit ---&gt; a
ita ---&gt; .
... ---&gt; c
..c ---&gt; h
.ch ---&gt; a
cha ---&gt; n
han ---&gt; d
and ---&gt; a
nda ---&gt; n
dan ---&gt; i
ani ---&gt; .
... ---&gt; p
..p ---&gt; a
.pa ---&gt; r
par ---&gt; n
arn ---&gt; a
rna ---&gt; v
nav ---&gt; .
... ---&gt; s
..s ---&gt; u
.su ---&gt; d
sud ---&gt; h
udh ---&gt; a
dha ---&gt; t
hat ---&gt; a
ata ---&gt; .
... ---&gt; s
..s ---&gt; a
.sa ---&gt; r
sar ---&gt; i
ari ---&gt; k
rik ---&gt; a
ika ---&gt; .
... ---&gt; r
..r ---&gt; a
.ra ---&gt; n
ran ---&gt; k
ank ---&gt; i
nki ---&gt; .
... ---&gt; s
..s ---&gt; a
.sa ---&gt; h
sah ---&gt; a
aha ---&gt; b
hab ---&gt; .
... ---&gt; k
..k ---&gt; a
.ka ---&gt; l
kal ---&gt; a
ala ---&gt; .
... ---&gt; s
..s ---&gt; u
.su ---&gt; r
sur ---&gt; g
urg ---&gt; y
rgy ---&gt; a
gya ---&gt; n
yan ---&gt; .
... ---&gt; j
..j ---&gt; i
.ji ---&gt; n
jin ---&gt; c
inc ---&gt; y
ncy ---&gt; .
... ---&gt; m
..m ---&gt; a
.ma ---&gt; q
maq ---&gt; s
aqs ---&gt; o
qso ---&gt; o
soo ---&gt; d
ood ---&gt; .
... ---&gt; s
..s ---&gt; a
.sa ---&gt; n
san ---&gt; i
ani ---&gt; a
nia ---&gt; .
... ---&gt; n
..n ---&gt; a
.na ---&gt; v
nav ---&gt; e
ave ---&gt; e
vee ---&gt; n
een ---&gt; .
... ---&gt; n
..n ---&gt; i
.ni ---&gt; t
nit ---&gt; u
itu ---&gt; .
... ---&gt; s
..s ---&gt; a
.sa ---&gt; w
saw ---&gt; a
awa ---&gt; n
wan ---&gt; .
... ---&gt; m
..m ---&gt; a
.ma ---&gt; n
man ---&gt; k
ank ---&gt; u
nku ---&gt; .
... ---&gt; b
..b ---&gt; a
.ba ---&gt; l
bal ---&gt; i
ali ---&gt; r
lir ---&gt; a
ira ---&gt; m
ram ---&gt; .
... ---&gt; a
..a ---&gt; r
.ar ---&gt; i
ari ---&gt; b
rib ---&gt; a
iba ---&gt; .
... ---&gt; g
..g ---&gt; u
.gu ---&gt; n
gun ---&gt; g
ung ---&gt; u
ngu ---&gt; n
gun ---&gt; .
... ---&gt; r
..r ---&gt; a
.ra ---&gt; m
ram ---&gt; n
amn ---&gt; i
mni ---&gt; h
nih ---&gt; o
iho ---&gt; r
hor ---&gt; .
... ---&gt; k
..k ---&gt; a
.ka ---&gt; w
kaw ---&gt; i
awi ---&gt; t
wit ---&gt; a
ita ---&gt; .
... ---&gt; s
..s ---&gt; a
.sa ---&gt; v
sav ---&gt; i
avi ---&gt; n
vin ---&gt; a
ina ---&gt; .
... ---&gt; s
..s ---&gt; o
.so ---&gt; n
son ---&gt; i
oni ---&gt; a
nia ---&gt; .
... ---&gt; s
..s ---&gt; e
.se ---&gt; v
sev ---&gt; a
eva ---&gt; .
... ---&gt; s
..s ---&gt; u
.su ---&gt; j
suj ---&gt; a
uja ---&gt; l
jal ---&gt; .
... ---&gt; k
..k ---&gt; i
.ki ---&gt; s
kis ---&gt; h
ish ---&gt; a
sha ---&gt; n
han ---&gt; .
... ---&gt; p
..p ---&gt; e
.pe ---&gt; r
per ---&gt; v
erv ---&gt; e
rve ---&gt; z
vez ---&gt; .
... ---&gt; k
..k ---&gt; r
.kr ---&gt; i
kri ---&gt; s
ris ---&gt; h
ish ---&gt; a
sha ---&gt; n
han ---&gt; a
ana ---&gt; .
... ---&gt; j
..j ---&gt; y
.jy ---&gt; o
jyo ---&gt; t
yot ---&gt; s
ots ---&gt; a
tsa ---&gt; n
san ---&gt; a
ana ---&gt; .
... ---&gt; n
..n ---&gt; a
.na ---&gt; s
nas ---&gt; h
ash ---&gt; i
shi ---&gt; m
him ---&gt; a
ima ---&gt; .
... ---&gt; s
..s ---&gt; h
.sh ---&gt; a
sha ---&gt; k
hak ---&gt; u
aku ---&gt; n
kun ---&gt; a
una ---&gt; .
... ---&gt; c
..c ---&gt; h
.ch ---&gt; e
che ---&gt; e
hee ---&gt; t
eet ---&gt; e
ete ---&gt; .
... ---&gt; h
..h ---&gt; a
.ha ---&gt; b
hab ---&gt; i
abi ---&gt; b
bib ---&gt; .
... ---&gt; s
..s ---&gt; a
.sa ---&gt; h
sah ---&gt; l
ahl ---&gt; e
hle ---&gt; s
les ---&gt; h
esh ---&gt; .
... ---&gt; j
..j ---&gt; a
.ja ---&gt; g
jag ---&gt; r
agr ---&gt; t
grt ---&gt; i
rti ---&gt; .
... ---&gt; v
..v ---&gt; a
.va ---&gt; s
vas ---&gt; h
ash ---&gt; a
sha ---&gt; n
han ---&gt; a
ana ---&gt; v
nav ---&gt; i
avi ---&gt; .
... ---&gt; p
..p ---&gt; u
.pu ---&gt; j
puj ---&gt; a
uja ---&gt; .
... ---&gt; a
..a ---&gt; a
.aa ---&gt; r
aar ---&gt; i
ari ---&gt; f
rif ---&gt; .
... ---&gt; v
..v ---&gt; i
.vi ---&gt; j
vij ---&gt; e
ije ---&gt; n
jen ---&gt; d
end ---&gt; e
nde ---&gt; r
der ---&gt; .
... ---&gt; j
..j ---&gt; i
.ji ---&gt; b
jib ---&gt; a
iba ---&gt; n
ban ---&gt; t
ant ---&gt; i
nti ---&gt; .
... ---&gt; n
..n ---&gt; a
.na ---&gt; b
nab ---&gt; i
abi ---&gt; j
bij ---&gt; a
ija ---&gt; n
jan ---&gt; .
... ---&gt; r
..r ---&gt; o
.ro ---&gt; m
rom ---&gt; a
oma ---&gt; .
... ---&gt; h
..h ---&gt; a
.ha ---&gt; i
hai ---&gt; d
aid ---&gt; e
ide ---&gt; r
der ---&gt; .
... ---&gt; c
..c ---&gt; h
.ch ---&gt; r
chr ---&gt; a
hra ---&gt; n
ran ---&gt; .
... ---&gt; s
..s ---&gt; u
.su ---&gt; l
sul ---&gt; t
ult ---&gt; a
lta ---&gt; n
tan ---&gt; .
... ---&gt; r
..r ---&gt; a
.ra ---&gt; b
rab ---&gt; h
abh ---&gt; i
bhi ---&gt; d
hid ---&gt; a
ida ---&gt; .
... ---&gt; a
..a ---&gt; s
.as ---&gt; m
asm ---&gt; a
sma ---&gt; n
man ---&gt; .
... ---&gt; h
..h ---&gt; a
.ha ---&gt; z
haz ---&gt; a
aza ---&gt; r
zar ---&gt; i
ari ---&gt; .
... ---&gt; n
..n ---&gt; a
.na ---&gt; j
naj ---&gt; m
ajm ---&gt; i
jmi ---&gt; n
min ---&gt; .
... ---&gt; a
..a ---&gt; b
.ab ---&gt; h
abh ---&gt; a
bha ---&gt; .
... ---&gt; s
..s ---&gt; e
.se ---&gt; m
sem ---&gt; a
ema ---&gt; .
... ---&gt; k
..k ---&gt; u
.ku ---&gt; n
kun ---&gt; d
und ---&gt; a
nda ---&gt; .
... ---&gt; v
..v ---&gt; i
.vi ---&gt; s
vis ---&gt; h
ish ---&gt; a
sha ---&gt; m
ham ---&gt; .
... ---&gt; s
..s ---&gt; a
.sa ---&gt; e
sae ---&gt; s
aes ---&gt; h
esh ---&gt; t
sht ---&gt; a
hta ---&gt; .
... ---&gt; m
..m ---&gt; e
.me ---&gt; e
mee ---&gt; s
ees ---&gt; h
esh ---&gt; .
... ---&gt; a
..a ---&gt; k
.ak ---&gt; h
akh ---&gt; t
kht ---&gt; a
hta ---&gt; r
tar ---&gt; i
ari ---&gt; .
... ---&gt; m
..m ---&gt; i
.mi ---&gt; t
mit ---&gt; t
itt ---&gt; h
tth ---&gt; u
thu ---&gt; n
hun ---&gt; .
... ---&gt; t
..t ---&gt; a
.ta ---&gt; r
tar ---&gt; a
ara ---&gt; n
ran ---&gt; n
ann ---&gt; u
nnu ---&gt; m
num ---&gt; .
... ---&gt; b
..b ---&gt; a
.ba ---&gt; c
bac ---&gt; h
ach ---&gt; c
chc ---&gt; h
hch ---&gt; a
cha ---&gt; .
... ---&gt; s
..s ---&gt; u
.su ---&gt; b
sub ---&gt; h
ubh ---&gt; o
bho ---&gt; d
hod ---&gt; h
odh ---&gt; .
... ---&gt; s
..s ---&gt; h
.sh ---&gt; i
shi ---&gt; l
hil ---&gt; .
... ---&gt; b
..b ---&gt; e
.be ---&gt; b
beb ---&gt; y
eby ---&gt; .
... ---&gt; s
..s ---&gt; h
.sh ---&gt; u
shu ---&gt; l
hul ---&gt; e
ule ---&gt; k
lek ---&gt; h
ekh ---&gt; a
kha ---&gt; .
... ---&gt; m
..m ---&gt; o
.mo ---&gt; s
mos ---&gt; h
osh ---&gt; r
shr ---&gt; i
hri ---&gt; .
... ---&gt; r
..r ---&gt; a
.ra ---&gt; f
raf ---&gt; e
afe ---&gt; d
fed ---&gt; d
edd ---&gt; i
ddi ---&gt; n
din ---&gt; .
... ---&gt; g
..g ---&gt; o
.go ---&gt; k
gok ---&gt; u
oku ---&gt; l
kul ---&gt; .
... ---&gt; t
..t ---&gt; e
.te ---&gt; e
tee ---&gt; k
eek ---&gt; a
eka ---&gt; m
kam ---&gt; .
... ---&gt; n
..n ---&gt; a
.na ---&gt; u
nau ---&gt; s
aus ---&gt; h
ush ---&gt; i
shi ---&gt; .
... ---&gt; a
..a ---&gt; b
.ab ---&gt; d
abd ---&gt; u
bdu ---&gt; l
dul ---&gt; l
ull ---&gt; a
lla ---&gt; h
lah ---&gt; .
... ---&gt; h
..h ---&gt; a
.ha ---&gt; n
han ---&gt; n
ann ---&gt; y
nny ---&gt; .
... ---&gt; k
..k ---&gt; i
.ki ---&gt; r
kir ---&gt; a
ira ---&gt; n
ran ---&gt; t
ant ---&gt; i
nti ---&gt; .
... ---&gt; p
..p ---&gt; r
.pr ---&gt; e
pre ---&gt; m
rem ---&gt; s
ems ---&gt; i
msi ---&gt; n
sin ---&gt; g
ing ---&gt; h
ngh ---&gt; .
... ---&gt; i
..i ---&gt; l
.il ---&gt; e
ile ---&gt; m
lem ---&gt; a
ema ---&gt; .
... ---&gt; a
..a ---&gt; m
.am ---&gt; z
amz ---&gt; a
mza ---&gt; d
zad ---&gt; .
... ---&gt; s
..s ---&gt; a
.sa ---&gt; h
sah ---&gt; i
ahi ---&gt; b
hib ---&gt; .
... ---&gt; b
..b ---&gt; a
.ba ---&gt; a
baa ---&gt; m
aam ---&gt; .
... ---&gt; s
..s ---&gt; h
.sh ---&gt; a
sha ---&gt; j
haj ---&gt; i
aji ---&gt; d
jid ---&gt; .
... ---&gt; t
..t ---&gt; e
.te ---&gt; e
tee ---&gt; n
een ---&gt; u
enu ---&gt; .
... ---&gt; t
..t ---&gt; a
.ta ---&gt; m
tam ---&gt; a
ama ---&gt; n
man ---&gt; n
ann ---&gt; a
nna ---&gt; .
... ---&gt; m
..m ---&gt; a
.ma ---&gt; m
mam ---&gt; c
amc ---&gt; h
mch ---&gt; a
cha ---&gt; n
han ---&gt; d
and ---&gt; .
... ---&gt; a
..a ---&gt; b
.ab ---&gt; d
abd ---&gt; u
bdu ---&gt; l
dul ---&gt; l
ull ---&gt; a
lla ---&gt; .
... ---&gt; a
..a ---&gt; m
.am ---&gt; l
aml ---&gt; e
mle ---&gt; s
les ---&gt; h
esh ---&gt; .
... ---&gt; s
..s ---&gt; i
.si ---&gt; k
sik ---&gt; e
ike ---&gt; n
ken ---&gt; d
end ---&gt; e
nde ---&gt; r
der ---&gt; .
... ---&gt; b
..b ---&gt; h
.bh ---&gt; e
bhe ---&gt; e
hee ---&gt; m
eem ---&gt; a
ema ---&gt; .
... ---&gt; d
..d ---&gt; e
.de ---&gt; e
dee ---&gt; p
eep ---&gt; a
epa ---&gt; .
... ---&gt; i
..i ---&gt; b
.ib ---&gt; a
iba ---&gt; r
bar ---&gt; h
arh ---&gt; i
rhi ---&gt; m
him ---&gt; .
... ---&gt; n
..n ---&gt; a
.na ---&gt; v
nav ---&gt; e
ave ---&gt; d
ved ---&gt; .
... ---&gt; m
..m ---&gt; a
.ma ---&gt; m
mam ---&gt; t
amt ---&gt; .
... ---&gt; s
..s ---&gt; a
.sa ---&gt; h
sah ---&gt; a
aha ---&gt; j
haj ---&gt; a
aja ---&gt; d
jad ---&gt; .
... ---&gt; p
..p ---&gt; h
.ph ---&gt; o
pho ---&gt; l
hol ---&gt; .
... ---&gt; t
..t ---&gt; i
.ti ---&gt; k
tik ---&gt; k
ikk ---&gt; u
kku ---&gt; .
... ---&gt; g
..g ---&gt; u
.gu ---&gt; d
gud ---&gt; y
udy ---&gt; a
dya ---&gt; .
... ---&gt; n
..n ---&gt; a
.na ---&gt; z
naz ---&gt; m
azm ---&gt; a
zma ---&gt; a
maa ---&gt; .
... ---&gt; i
..i ---&gt; n
.in ---&gt; d
ind ---&gt; r
ndr ---&gt; a
dra ---&gt; j
raj ---&gt; .
... ---&gt; r
..r ---&gt; u
.ru ---&gt; p
rup ---&gt; a
upa ---&gt; m
pam ---&gt; .
... ---&gt; p
..p ---&gt; a
.pa ---&gt; r
par ---&gt; a
ara ---&gt; s
ras ---&gt; h
ash ---&gt; r
shr ---&gt; a
hra ---&gt; m
ram ---&gt; .
... ---&gt; f
..f ---&gt; a
.fa ---&gt; t
fat ---&gt; e
ate ---&gt; h
teh ---&gt; .
... ---&gt; s
..s ---&gt; a
.sa ---&gt; b
sab ---&gt; e
abe ---&gt; e
bee ---&gt; n
een ---&gt; a
ena ---&gt; .
... ---&gt; b
..b ---&gt; a
.ba ---&gt; r
bar ---&gt; k
ark ---&gt; h
rkh ---&gt; a
kha ---&gt; .
... ---&gt; s
..s ---&gt; a
.sa ---&gt; r
sar ---&gt; i
ari ---&gt; p
rip ---&gt; .
... ---&gt; l
..l ---&gt; a
.la ---&gt; d
lad ---&gt; l
adl ---&gt; i
dli ---&gt; .
... ---&gt; m
..m ---&gt; u
.mu ---&gt; k
muk ---&gt; a
uka ---&gt; r
kar ---&gt; a
ara ---&gt; m
ram ---&gt; .
... ---&gt; s
..s ---&gt; o
.so ---&gt; m
som ---&gt; .
... ---&gt; g
..g ---&gt; u
.gu ---&gt; l
gul ---&gt; a
ula ---&gt; s
las ---&gt; h
ash ---&gt; a
sha ---&gt; n
han ---&gt; .
... ---&gt; p
..p ---&gt; r
.pr ---&gt; a
pra ---&gt; n
ran ---&gt; n
ann ---&gt; a
nna ---&gt; b
nab ---&gt; .
... ---&gt; a
..a ---&gt; l
.al ---&gt; s
als ---&gt; e
lse ---&gt; e
see ---&gt; p
eep ---&gt; a
epa ---&gt; .
... ---&gt; s
..s ---&gt; i
.si ---&gt; s
sis ---&gt; h
ish ---&gt; p
shp ---&gt; a
hpa ---&gt; l
pal ---&gt; .
... ---&gt; n
..n ---&gt; a
.na ---&gt; r
nar ---&gt; e
are ---&gt; s
res ---&gt; h
esh ---&gt; .
... ---&gt; r
..r ---&gt; a
.ra ---&gt; n
ran ---&gt; j
anj ---&gt; e
nje ---&gt; e
jee ---&gt; t
eet ---&gt; a
eta ---&gt; .
... ---&gt; d
..d ---&gt; h
.dh ---&gt; a
dha ---&gt; n
han ---&gt; j
anj ---&gt; a
nja ---&gt; y
jay ---&gt; .
... ---&gt; a
..a ---&gt; n
.an ---&gt; i
ani ---&gt; t
nit ---&gt; a
ita ---&gt; .
... ---&gt; p
..p ---&gt; r
.pr ---&gt; e
pre ---&gt; m
rem ---&gt; c
emc ---&gt; h
mch ---&gt; a
cha ---&gt; n
han ---&gt; d
and ---&gt; .
... ---&gt; m
..m ---&gt; i
.mi ---&gt; n
min ---&gt; a
ina ---&gt; k
nak ---&gt; s
aks ---&gt; h
ksh ---&gt; i
shi ---&gt; .
... ---&gt; s
..s ---&gt; u
.su ---&gt; s
sus ---&gt; m
usm ---&gt; i
smi ---&gt; t
mit ---&gt; a
ita ---&gt; .
... ---&gt; b
..b ---&gt; u
.bu ---&gt; d
bud ---&gt; d
udd ---&gt; h
ddh ---&gt; a
dha ---&gt; .
... ---&gt; b
..b ---&gt; h
.bh ---&gt; o
bho ---&gt; l
hol ---&gt; i
oli ---&gt; .
... ---&gt; a
..a ---&gt; l
.al ---&gt; t
alt ---&gt; m
ltm ---&gt; a
tma ---&gt; s
mas ---&gt; h
ash ---&gt; .
... ---&gt; s
..s ---&gt; a
.sa ---&gt; m
sam ---&gt; a
ama ---&gt; d
mad ---&gt; .
... ---&gt; m
..m ---&gt; o
.mo ---&gt; o
moo ---&gt; l
ool ---&gt; i
oli ---&gt; .
... ---&gt; p
..p ---&gt; u
.pu ---&gt; r
pur ---&gt; v
urv ---&gt; a
rva ---&gt; .
... ---&gt; s
..s ---&gt; a
.sa ---&gt; k
sak ---&gt; u
aku ---&gt; n
kun ---&gt; t
unt ---&gt; l
ntl ---&gt; a
tla ---&gt; .
... ---&gt; m
..m ---&gt; o
.mo ---&gt; h
moh ---&gt; h
ohh ---&gt; m
hhm ---&gt; a
hma ---&gt; d
mad ---&gt; .
... ---&gt; j
..j ---&gt; a
.ja ---&gt; i
jai ---&gt; d
aid ---&gt; e
ide ---&gt; v
dev ---&gt; .
... ---&gt; m
..m ---&gt; o
.mo ---&gt; t
mot ---&gt; i
oti ---&gt; l
til ---&gt; a
ila ---&gt; l
lal ---&gt; .
... ---&gt; a
..a ---&gt; n
.an ---&gt; a
ana ---&gt; r
nar ---&gt; o
aro ---&gt; .
... ---&gt; g
..g ---&gt; o
.go ---&gt; u
gou ---&gt; r
our ---&gt; a
ura ---&gt; v
rav ---&gt; .
... ---&gt; p
..p ---&gt; a
.pa ---&gt; m
pam ---&gt; j
amj ---&gt; e
mje ---&gt; e
jee ---&gt; t
eet ---&gt; .
... ---&gt; b
..b ---&gt; a
.ba ---&gt; t
bat ---&gt; a
ata ---&gt; s
tas ---&gt; i
asi ---&gt; .
... ---&gt; s
..s ---&gt; a
.sa ---&gt; r
sar ---&gt; a
ara ---&gt; d
rad ---&gt; .
... ---&gt; v
..v ---&gt; e
.ve ---&gt; e
vee ---&gt; r
eer ---&gt; p
erp ---&gt; a
rpa ---&gt; l
pal ---&gt; .
... ---&gt; m
..m ---&gt; i
.mi ---&gt; n
min ---&gt; t
int ---&gt; u
ntu ---&gt; .
... ---&gt; p
..p ---&gt; r
.pr ---&gt; a
pra ---&gt; b
rab ---&gt; h
abh ---&gt; a
bha ---&gt; t
hat ---&gt; .
... ---&gt; r
..r ---&gt; i
.ri ---&gt; z
riz ---&gt; w
izw ---&gt; a
zwa ---&gt; n
wan ---&gt; .
... ---&gt; r
..r ---&gt; a
.ra ---&gt; t
rat ---&gt; w
atw ---&gt; a
twa ---&gt; r
war ---&gt; i
ari ---&gt; .
... ---&gt; s
..s ---&gt; a
.sa ---&gt; k
sak ---&gt; a
aka ---&gt; l
kal ---&gt; .
... ---&gt; t
..t ---&gt; a
.ta ---&gt; r
tar ---&gt; a
ara ---&gt; c
rac ---&gt; h
ach ---&gt; a
cha ---&gt; n
han ---&gt; d
and ---&gt; .
... ---&gt; k
..k ---&gt; m
.km ---&gt; l
kml ---&gt; e
mle ---&gt; s
les ---&gt; .
... ---&gt; g
..g ---&gt; a
.ga ---&gt; m
gam ---&gt; e
ame ---&gt; r
mer ---&gt; .
... ---&gt; n
..n ---&gt; u
.nu ---&gt; r
nur ---&gt; b
urb ---&gt; i
rbi ---&gt; .
... ---&gt; a
..a ---&gt; d
.ad ---&gt; n
adn ---&gt; a
dna ---&gt; n
nan ---&gt; .
... ---&gt; r
..r ---&gt; u
.ru ---&gt; m
rum ---&gt; e
ume ---&gt; e
mee ---&gt; t
eet ---&gt; .
... ---&gt; k
..k ---&gt; e
.ke ---&gt; l
kel ---&gt; i
eli ---&gt; .
... ---&gt; a
..a ---&gt; m
.am ---&gt; a
ama ---&gt; n
man ---&gt; d
and ---&gt; e
nde ---&gt; e
dee ---&gt; p
eep ---&gt; .
... ---&gt; s
..s ---&gt; a
.sa ---&gt; n
san ---&gt; n
ann ---&gt; a
nna ---&gt; .
... ---&gt; a
..a ---&gt; s
.as ---&gt; i
asi ---&gt; f
sif ---&gt; .
... ---&gt; s
..s ---&gt; h
.sh ---&gt; a
sha ---&gt; h
hah ---&gt; n
ahn ---&gt; a
hna ---&gt; w
naw ---&gt; a
awa ---&gt; j
waj ---&gt; .
... ---&gt; a
..a ---&gt; j
.aj ---&gt; i
aji ---&gt; t
jit ---&gt; .
... ---&gt; d
..d ---&gt; a
.da ---&gt; y
day ---&gt; a
aya ---&gt; l
yal ---&gt; .
... ---&gt; a
..a ---&gt; n
.an ---&gt; o
ano ---&gt; u
nou ---&gt; r
our ---&gt; a
ura ---&gt; .
... ---&gt; m
..m ---&gt; a
.ma ---&gt; r
mar ---&gt; y
ary ---&gt; a
rya ---&gt; m
yam ---&gt; .
... ---&gt; j
..j ---&gt; a
.ja ---&gt; m
jam ---&gt; s
ams ---&gt; h
msh ---&gt; e
she ---&gt; d
hed ---&gt; .
... ---&gt; k
..k ---&gt; a
.ka ---&gt; r
kar ---&gt; u
aru ---&gt; n
run ---&gt; a
una ---&gt; .
... ---&gt; s
..s ---&gt; h
.sh ---&gt; e
she ---&gt; l
hel ---&gt; l
ell ---&gt; y
lly ---&gt; .
... ---&gt; g
..g ---&gt; u
.gu ---&gt; d
gud ---&gt; i
udi ---&gt; a
dia ---&gt; .
... ---&gt; j
..j ---&gt; a
.ja ---&gt; m
jam ---&gt; a
ama ---&gt; a
maa ---&gt; l
aal ---&gt; .
... ---&gt; a
..a ---&gt; v
.av ---&gt; i
avi ---&gt; .
... ---&gt; m
..m ---&gt; a
.ma ---&gt; h
mah ---&gt; a
aha ---&gt; s
has ---&gt; i
asi ---&gt; n
sin ---&gt; g
ing ---&gt; h
ngh ---&gt; .
... ---&gt; k
..k ---&gt; e
.ke ---&gt; l
kel ---&gt; a
ela ---&gt; s
las ---&gt; h
ash ---&gt; i
shi ---&gt; .
... ---&gt; h
..h ---&gt; u
.hu ---&gt; m
hum ---&gt; e
ume ---&gt; r
mer ---&gt; a
era ---&gt; .
... ---&gt; k
..k ---&gt; a
.ka ---&gt; s
kas ---&gt; i
asi ---&gt; m
sim ---&gt; .
... ---&gt; s
..s ---&gt; u
.su ---&gt; k
suk ---&gt; s
uks ---&gt; h
ksh ---&gt; a
sha ---&gt; n
han ---&gt; a
ana ---&gt; .
... ---&gt; y
..y ---&gt; a
.ya ---&gt; m
yam ---&gt; i
ami ---&gt; n
min ---&gt; i
ini ---&gt; .
... ---&gt; b
..b ---&gt; u
.bu ---&gt; n
bun ---&gt; d
und ---&gt; a
nda ---&gt; .
... ---&gt; c
..c ---&gt; h
.ch ---&gt; a
cha ---&gt; m
ham ---&gt; a
ama ---&gt; n
man ---&gt; .
... ---&gt; b
..b ---&gt; a
.ba ---&gt; l
bal ---&gt; .
... ---&gt; v
..v ---&gt; i
.vi ---&gt; j
vij ---&gt; a
ija ---&gt; y
jay ---&gt; .
... ---&gt; g
..g ---&gt; a
.ga ---&gt; j
gaj ---&gt; a
aja ---&gt; l
jal ---&gt; a
ala ---&gt; .
... ---&gt; s
..s ---&gt; a
.sa ---&gt; r
sar ---&gt; d
ard ---&gt; a
rda ---&gt; r
dar ---&gt; .
... ---&gt; k
..k ---&gt; u
.ku ---&gt; s
kus ---&gt; h
ush ---&gt; m
shm ---&gt; i
hmi ---&gt; t
mit ---&gt; a
ita ---&gt; .
... ---&gt; g
..g ---&gt; u
.gu ---&gt; r
gur ---&gt; .
... ---&gt; s
..s ---&gt; h
.sh ---&gt; u
shu ---&gt; s
hus ---&gt; i
usi ---&gt; l
sil ---&gt; a
ila ---&gt; .
... ---&gt; m
..m ---&gt; o
.mo ---&gt; m
mom ---&gt; i
omi ---&gt; n
min ---&gt; a
ina ---&gt; .
... ---&gt; n
..n ---&gt; a
.na ---&gt; y
nay ---&gt; n
ayn ---&gt; a
yna ---&gt; .
... ---&gt; s
..s ---&gt; h
.sh ---&gt; a
sha ---&gt; n
han ---&gt; k
ank ---&gt; a
nka ---&gt; r
kar ---&gt; .
... ---&gt; g
..g ---&gt; i
.gi ---&gt; t
git ---&gt; a
ita ---&gt; .
... ---&gt; e
..e ---&gt; n
.en ---&gt; g
eng ---&gt; l
ngl ---&gt; a
gla ---&gt; s
las ---&gt; .
... ---&gt; d
..d ---&gt; h
.dh ---&gt; a
dha ---&gt; r
har ---&gt; m
arm ---&gt; v
rmv ---&gt; i
mvi ---&gt; r
vir ---&gt; .
... ---&gt; o
..o ---&gt; m
.om ---&gt; i
omi ---&gt; .
... ---&gt; a
..a ---&gt; a
.aa ---&gt; j
aaj ---&gt; i
aji ---&gt; v
jiv ---&gt; .
... ---&gt; s
..s ---&gt; r
.sr ---&gt; i
sri ---&gt; n
rin ---&gt; i
ini ---&gt; w
niw ---&gt; a
iwa ---&gt; s
was ---&gt; h
ash ---&gt; .
... ---&gt; a
..a ---&gt; f
.af ---&gt; s
afs ---&gt; a
fsa ---&gt; r
sar ---&gt; .
... ---&gt; r
..r ---&gt; e
.re ---&gt; h
reh ---&gt; m
ehm ---&gt; a
hma ---&gt; t
mat ---&gt; .
... ---&gt; c
..c ---&gt; h
.ch ---&gt; h
chh ---&gt; a
hha ---&gt; b
hab ---&gt; i
abi ---&gt; l
bil ---&gt; .
... ---&gt; m
..m ---&gt; a
.ma ---&gt; n
man ---&gt; e
ane ---&gt; e
nee ---&gt; s
ees ---&gt; h
esh ---&gt; .
... ---&gt; t
..t ---&gt; u
.tu ---&gt; l
tul ---&gt; c
ulc ---&gt; h
lch ---&gt; a
cha ---&gt; r
har ---&gt; a
ara ---&gt; m
ram ---&gt; .
... ---&gt; r
..r ---&gt; a
.ra ---&gt; n
ran ---&gt; i
ani ---&gt; p
nip ---&gt; a
ipa ---&gt; l
pal ---&gt; .
... ---&gt; l
..l ---&gt; i
.li ---&gt; l
lil ---&gt; a
ila ---&gt; d
lad ---&gt; e
ade ---&gt; v
dev ---&gt; i
evi ---&gt; .
... ---&gt; c
..c ---&gt; h
.ch ---&gt; h
chh ---&gt; o
hho ---&gt; t
hot ---&gt; u
otu ---&gt; .
... ---&gt; n
..n ---&gt; e
.ne ---&gt; e
nee ---&gt; s
ees ---&gt; a
esa ---&gt; .
... ---&gt; k
..k ---&gt; b
.kb ---&gt; e
kbe ---&gt; t
bet ---&gt; a
eta ---&gt; .
... ---&gt; s
..s ---&gt; u
.su ---&gt; k
suk ---&gt; u
uku ---&gt; m
kum ---&gt; a
uma ---&gt; r
mar ---&gt; .
... ---&gt; a
..a ---&gt; m
.am ---&gt; i
ami ---&gt; t
mit ---&gt; a
ita ---&gt; .
... ---&gt; v
..v ---&gt; e
.ve ---&gt; s
ves ---&gt; a
esa ---&gt; l
sal ---&gt; i
ali ---&gt; .
... ---&gt; v
..v ---&gt; a
.va ---&gt; s
vas ---&gt; i
asi ---&gt; m
sim ---&gt; .
... ---&gt; a
..a ---&gt; a
.aa ---&gt; s
aas ---&gt; h
ash ---&gt; m
shm ---&gt; a
hma ---&gt; .
... ---&gt; b
..b ---&gt; u
.bu ---&gt; d
bud ---&gt; h
udh ---&gt; a
dha ---&gt; n
han ---&gt; .
... ---&gt; c
..c ---&gt; o
.co ---&gt; s
cos ---&gt; m
osm ---&gt; i
smi ---&gt; c
mic ---&gt; .
... ---&gt; t
..t ---&gt; a
.ta ---&gt; s
tas ---&gt; h
ash ---&gt; n
shn ---&gt; i
hni ---&gt; m
nim ---&gt; .
... ---&gt; i
..i ---&gt; s
.is ---&gt; h
ish ---&gt; a
sha ---&gt; t
hat ---&gt; k
atk ---&gt; a
tka ---&gt; r
kar ---&gt; .
... ---&gt; f
..f ---&gt; i
.fi ---&gt; t
fit ---&gt; r
itr ---&gt; a
tra ---&gt; t
rat ---&gt; .
... ---&gt; e
..e ---&gt; k
.ek ---&gt; t
ekt ---&gt; a
kta ---&gt; .
... ---&gt; s
..s ---&gt; h
.sh ---&gt; a
sha ---&gt; b
hab ---&gt; i
abi ---&gt; r
bir ---&gt; .
... ---&gt; r
..r ---&gt; a
.ra ---&gt; j
raj ---&gt; s
ajs ---&gt; h
jsh ---&gt; r
shr ---&gt; e
hre ---&gt; e
ree ---&gt; .
... ---&gt; b
..b ---&gt; a
.ba ---&gt; d
bad ---&gt; a
ada ---&gt; .
... ---&gt; m
..m ---&gt; a
.ma ---&gt; m
mam ---&gt; a
ama ---&gt; n
man ---&gt; .
... ---&gt; m
..m ---&gt; u
.mu ---&gt; n
mun ---&gt; m
unm ---&gt; u
nmu ---&gt; n
mun ---&gt; .
... ---&gt; j
..j ---&gt; a
.ja ---&gt; v
jav ---&gt; i
avi ---&gt; t
vit ---&gt; r
itr ---&gt; i
tri ---&gt; .
... ---&gt; p
..p ---&gt; a
.pa ---&gt; p
pap ---&gt; p
app ---&gt; e
ppe ---&gt; .
... ---&gt; j
..j ---&gt; u
.ju ---&gt; n
jun ---&gt; a
una ---&gt; .
... ---&gt; s
..s ---&gt; c
.sc ---&gt; h
sch ---&gt; i
chi ---&gt; n
hin ---&gt; .
... ---&gt; a
..a ---&gt; k
.ak ---&gt; h
akh ---&gt; l
khl ---&gt; a
hla ---&gt; q
laq ---&gt; .
... ---&gt; i
..i ---&gt; n
.in ---&gt; d
ind ---&gt; e
nde ---&gt; r
der ---&gt; n
ern ---&gt; a
rna ---&gt; t
nat ---&gt; h
ath ---&gt; .
... ---&gt; s
..s ---&gt; a
.sa ---&gt; n
san ---&gt; d
and ---&gt; e
nde ---&gt; e
dee ---&gt; p
eep ---&gt; a
epa ---&gt; .
... ---&gt; d
..d ---&gt; i
.di ---&gt; w
diw ---&gt; a
iwa ---&gt; n
wan ---&gt; .
... ---&gt; r
..r ---&gt; a
.ra ---&gt; m
ram ---&gt; e
ame ---&gt; s
mes ---&gt; h
esh ---&gt; .
... ---&gt; j
..j ---&gt; y
.jy ---&gt; o
jyo ---&gt; t
yot ---&gt; i
oti ---&gt; .
... ---&gt; s
..s ---&gt; a
.sa ---&gt; m
sam ---&gt; u
amu ---&gt; n
mun ---&gt; d
und ---&gt; r
ndr ---&gt; i
dri ---&gt; .
... ---&gt; v
..v ---&gt; i
.vi ---&gt; m
vim ---&gt; l
iml ---&gt; e
mle ---&gt; s
les ---&gt; h
esh ---&gt; .
... ---&gt; s
..s ---&gt; a
.sa ---&gt; r
sar ---&gt; o
aro ---&gt; o
roo ---&gt; p
oop ---&gt; .
... ---&gt; p
..p ---&gt; u
.pu ---&gt; l
pul ---&gt; i
uli ---&gt; t
lit ---&gt; a
ita ---&gt; .
... ---&gt; j
..j ---&gt; i
.ji ---&gt; n
jin ---&gt; a
ina ---&gt; t
nat ---&gt; .
... ---&gt; s
..s ---&gt; a
.sa ---&gt; z
saz ---&gt; y
azy ---&gt; a
zya ---&gt; .
... ---&gt; s
..s ---&gt; u
.su ---&gt; k
suk ---&gt; h
ukh ---&gt; e
khe ---&gt; e
hee ---&gt; y
eey ---&gt; a
eya ---&gt; .
... ---&gt; u
..u ---&gt; n
.un ---&gt; k
unk ---&gt; n
nkn ---&gt; o
kno ---&gt; w
now ---&gt; n
own ---&gt; .
... ---&gt; g
..g ---&gt; o
.go ---&gt; n
gon ---&gt; a
ona ---&gt; .
... ---&gt; s
..s ---&gt; h
.sh ---&gt; e
she ---&gt; i
hei ---&gt; s
eis ---&gt; h
ish ---&gt; .
... ---&gt; p
..p ---&gt; u
.pu ---&gt; s
pus ---&gt; p
usp ---&gt; h
sph ---&gt; a
pha ---&gt; .
... ---&gt; m
..m ---&gt; a
.ma ---&gt; n
man ---&gt; g
ang ---&gt; u
ngu ---&gt; b
gub ---&gt; a
uba ---&gt; i
bai ---&gt; .
... ---&gt; b
..b ---&gt; u
.bu ---&gt; s
bus ---&gt; h
ush ---&gt; a
sha ---&gt; r
har ---&gt; a
ara ---&gt; .
... ---&gt; r
..r ---&gt; o
.ro ---&gt; z
roz ---&gt; i
ozi ---&gt; .
... ---&gt; s
..s ---&gt; i
.si ---&gt; f
sif ---&gt; a
ifa ---&gt; .
... ---&gt; g
..g ---&gt; a
.ga ---&gt; l
gal ---&gt; i
ali ---&gt; y
liy ---&gt; a
iya ---&gt; .
... ---&gt; h
..h ---&gt; e
.he ---&gt; t
het ---&gt; a
eta ---&gt; l
tal ---&gt; .
... ---&gt; l
..l ---&gt; a
.la ---&gt; l
lal ---&gt; i
ali ---&gt; t
lit ---&gt; a
ita ---&gt; .
... ---&gt; j
..j ---&gt; y
.jy ---&gt; o
jyo ---&gt; t
yot ---&gt; y
oty ---&gt; .
... ---&gt; j
..j ---&gt; a
.ja ---&gt; n
jan ---&gt; i
ani ---&gt; d
nid ---&gt; .
... ---&gt; m
..m ---&gt; u
.mu ---&gt; n
mun ---&gt; n
unn ---&gt; i
nni ---&gt; a
nia ---&gt; .
... ---&gt; s
..s ---&gt; a
.sa ---&gt; z
saz ---&gt; i
azi ---&gt; d
zid ---&gt; .
... ---&gt; n
..n ---&gt; i
.ni ---&gt; t
nit ---&gt; t
itt ---&gt; i
tti ---&gt; n
tin ---&gt; .
... ---&gt; p
..p ---&gt; r
.pr ---&gt; a
pra ---&gt; b
rab ---&gt; h
abh ---&gt; a
bha ---&gt; k
hak ---&gt; a
aka ---&gt; r
kar ---&gt; .
... ---&gt; a
..a ---&gt; m
.am ---&gt; r
amr ---&gt; t
mrt ---&gt; a
rta ---&gt; .
... ---&gt; a
..a ---&gt; n
.an ---&gt; u
anu ---&gt; p
nup ---&gt; u
upu ---&gt; m
pum ---&gt; a
uma ---&gt; .
... ---&gt; s
..s ---&gt; h
.sh ---&gt; a
sha ---&gt; k
hak ---&gt; e
ake ---&gt; e
kee ---&gt; l
eel ---&gt; a
ela ---&gt; .
... ---&gt; m
..m ---&gt; i
.mi ---&gt; c
mic ---&gt; h
ich ---&gt; a
cha ---&gt; e
hae ---&gt; l
ael ---&gt; .
... ---&gt; s
..s ---&gt; u
.su ---&gt; p
sup ---&gt; y
upy ---&gt; a
pya ---&gt; r
yar ---&gt; .
... ---&gt; s
..s ---&gt; e
.se ---&gt; e
see ---&gt; b
eeb ---&gt; a
eba ---&gt; .
... ---&gt; m
..m ---&gt; a
.ma ---&gt; n
man ---&gt; e
ane ---&gt; e
nee ---&gt; s
ees ---&gt; h
esh ---&gt; a
sha ---&gt; .
... ---&gt; v
..v ---&gt; i
.vi ---&gt; p
vip ---&gt; a
ipa ---&gt; n
pan ---&gt; .
... ---&gt; s
..s ---&gt; h
.sh ---&gt; i
shi ---&gt; m
him ---&gt; l
iml ---&gt; a
mla ---&gt; .
... ---&gt; g
..g ---&gt; u
.gu ---&gt; d
gud ---&gt; d
udd ---&gt; i
ddi ---&gt; .
... ---&gt; m
..m ---&gt; a
.ma ---&gt; n
man ---&gt; d
and ---&gt; o
ndo ---&gt; t
dot ---&gt; h
oth ---&gt; i
thi ---&gt; .
... ---&gt; f
..f ---&gt; a
.fa ---&gt; i
fai ---&gt; z
aiz ---&gt; .
... ---&gt; r
..r ---&gt; i
.ri ---&gt; t
rit ---&gt; h
ith ---&gt; i
thi ---&gt; k
hik ---&gt; .
... ---&gt; m
..m ---&gt; o
.mo ---&gt; i
moi ---&gt; n
oin ---&gt; .
... ---&gt; s
..s ---&gt; h
.sh ---&gt; a
sha ---&gt; u
hau ---&gt; r
aur ---&gt; a
ura ---&gt; b
rab ---&gt; h
abh ---&gt; .
... ---&gt; n
..n ---&gt; a
.na ---&gt; y
nay ---&gt; a
aya ---&gt; n
yan ---&gt; .
... ---&gt; b
..b ---&gt; h
.bh ---&gt; a
bha ---&gt; w
haw ---&gt; a
awa ---&gt; r
war ---&gt; i
ari ---&gt; .
... ---&gt; r
..r ---&gt; a
.ra ---&gt; n
ran ---&gt; j
anj ---&gt; i
nji ---&gt; t
jit ---&gt; a
ita ---&gt; .
... ---&gt; b
..b ---&gt; a
.ba ---&gt; r
bar ---&gt; j
arj ---&gt; .
... ---&gt; v
..v ---&gt; e
.ve ---&gt; e
vee ---&gt; n
een ---&gt; a
ena ---&gt; .
... ---&gt; j
..j ---&gt; i
.ji ---&gt; m
jim ---&gt; i
imi ---&gt; .
... ---&gt; s
..s ---&gt; h
.sh ---&gt; r
shr ---&gt; e
hre ---&gt; e
ree ---&gt; e
eee ---&gt; .
... ---&gt; s
..s ---&gt; h
.sh ---&gt; r
shr ---&gt; i
hri ---&gt; k
rik ---&gt; a
ika ---&gt; n
kan ---&gt; t
ant ---&gt; .
... ---&gt; p
..p ---&gt; r
.pr ---&gt; e
pre ---&gt; m
rem ---&gt; l
eml ---&gt; a
mla ---&gt; t
lat ---&gt; a
ata ---&gt; .
... ---&gt; n
..n ---&gt; e
.ne ---&gt; e
nee ---&gt; m
eem ---&gt; i
emi ---&gt; .
... ---&gt; h
..h ---&gt; a
.ha ---&gt; r
har ---&gt; i
ari ---&gt; b
rib ---&gt; .
... ---&gt; p
..p ---&gt; h
.ph ---&gt; o
pho ---&gt; o
hoo ---&gt; l
ool ---&gt; l
oll ---&gt; a
lla ---&gt; .
... ---&gt; v
..v ---&gt; i
.vi ---&gt; d
vid ---&gt; y
idy ---&gt; a
dya ---&gt; w
yaw ---&gt; a
awa ---&gt; t
wat ---&gt; i
ati ---&gt; .
... ---&gt; s
..s ---&gt; a
.sa ---&gt; t
sat ---&gt; w
atw ---&gt; a
twa ---&gt; n
wan ---&gt; d
and ---&gt; e
nde ---&gt; r
der ---&gt; .
... ---&gt; a
..a ---&gt; a
.aa ---&gt; d
aad ---&gt; i
adi ---&gt; t
dit ---&gt; y
ity ---&gt; a
tya ---&gt; .
... ---&gt; m
..m ---&gt; e
.me ---&gt; e
mee ---&gt; r
eer ---&gt; a
era ---&gt; .
... ---&gt; b
..b ---&gt; h
.bh ---&gt; a
bha ---&gt; g
hag ---&gt; i
agi ---&gt; p
gip ---&gt; u
ipu ---&gt; r
pur ---&gt; i
uri ---&gt; .
... ---&gt; h
..h ---&gt; a
.ha ---&gt; i
hai ---&gt; l
ail ---&gt; e
ile ---&gt; n
len ---&gt; a
ena ---&gt; .
... ---&gt; l
..l ---&gt; a
.la ---&gt; k
lak ---&gt; h
akh ---&gt; i
khi ---&gt; .
... ---&gt; h
..h ---&gt; a
.ha ---&gt; r
har ---&gt; d
ard ---&gt; a
rda ---&gt; m
dam ---&gt; .
... ---&gt; r
..r ---&gt; a
.ra ---&gt; f
raf ---&gt; i
afi ---&gt; .
... ---&gt; m
..m ---&gt; a
.ma ---&gt; h
mah ---&gt; i
ahi ---&gt; n
hin ---&gt; d
ind ---&gt; r
ndr ---&gt; a
dra ---&gt; .
... ---&gt; r
..r ---&gt; a
.ra ---&gt; j
raj ---&gt; k
ajk ---&gt; a
jka ---&gt; r
kar ---&gt; n
arn ---&gt; t
rnt ---&gt; a
nta ---&gt; .
... ---&gt; a
..a ---&gt; a
.aa ---&gt; s
aas ---&gt; .
... ---&gt; v
..v ---&gt; a
.va ---&gt; i
vai ---&gt; j
aij ---&gt; a
ija ---&gt; n
jan ---&gt; t
ant ---&gt; i
nti ---&gt; .
... ---&gt; k
..k ---&gt; u
.ku ---&gt; n
kun ---&gt; d
und ---&gt; e
nde ---&gt; n
den ---&gt; .
... ---&gt; s
..s ---&gt; h
.sh ---&gt; i
shi ---&gt; t
hit ---&gt; a
ita ---&gt; l
tal ---&gt; .
... ---&gt; d
..d ---&gt; u
.du ---&gt; r
dur ---&gt; g
urg ---&gt; a
rga ---&gt; w
gaw ---&gt; a
awa ---&gt; t
wat ---&gt; i
ati ---&gt; .
... ---&gt; c
..c ---&gt; h
.ch ---&gt; o
cho ---&gt; t
hot ---&gt; t
ott ---&gt; i
tti ---&gt; .
... ---&gt; y
..y ---&gt; a
.ya ---&gt; a
yaa ---&gt; d
aad ---&gt; r
adr ---&gt; a
dra ---&gt; m
ram ---&gt; .
... ---&gt; p
..p ---&gt; a
.pa ---&gt; n
pan ---&gt; d
and ---&gt; u
ndu ---&gt; .
... ---&gt; a
..a ---&gt; s
.as ---&gt; f
asf ---&gt; a
sfa ---&gt; k
fak ---&gt; .
... ---&gt; m
..m ---&gt; a
.ma ---&gt; h
mah ---&gt; v
ahv ---&gt; i
hvi ---&gt; s
vis ---&gt; h
ish ---&gt; .
... ---&gt; r
..r ---&gt; u
.ru ---&gt; b
rub ---&gt; a
uba ---&gt; l
bal ---&gt; .
... ---&gt; r
..r ---&gt; i
.ri ---&gt; m
rim ---&gt; j
imj ---&gt; h
mjh ---&gt; i
jhi ---&gt; m
him ---&gt; .
... ---&gt; s
..s ---&gt; i
.si ---&gt; d
sid ---&gt; h
idh ---&gt; a
dha ---&gt; r
har ---&gt; t
art ---&gt; h
rth ---&gt; .
... ---&gt; r
..r ---&gt; a
.ra ---&gt; v
rav ---&gt; i
avi ---&gt; n
vin ---&gt; a
ina ---&gt; t
nat ---&gt; h
ath ---&gt; .
... ---&gt; l
..l ---&gt; a
.la ---&gt; k
lak ---&gt; s
aks ---&gt; h
ksh ---&gt; m
shm ---&gt; a
hma ---&gt; n
man ---&gt; .
... ---&gt; m
..m ---&gt; u
.mu ---&gt; q
muq ---&gt; h
uqh ---&gt; t
qht ---&gt; a
hta ---&gt; r
tar ---&gt; .
... ---&gt; c
..c ---&gt; h
.ch ---&gt; u
chu ---&gt; n
hun ---&gt; n
unn ---&gt; i
nni ---&gt; .
... ---&gt; m
..m ---&gt; a
.ma ---&gt; h
mah ---&gt; e
ahe ---&gt; n
hen ---&gt; d
end ---&gt; r
ndr ---&gt; a
dra ---&gt; .
... ---&gt; g
..g ---&gt; y
.gy ---&gt; a
gya ---&gt; n
yan ---&gt; w
anw ---&gt; a
nwa ---&gt; t
wat ---&gt; i
ati ---&gt; .
... ---&gt; p
..p ---&gt; r
.pr ---&gt; a
pra ---&gt; t
rat ---&gt; i
ati ---&gt; .
... ---&gt; m
..m ---&gt; e
.me ---&gt; g
meg ---&gt; h
egh ---&gt; a
gha ---&gt; r
har ---&gt; a
ara ---&gt; j
raj ---&gt; .
... ---&gt; j
..j ---&gt; a
.ja ---&gt; i
jai ---&gt; v
aiv ---&gt; i
ivi ---&gt; n
vin ---&gt; d
ind ---&gt; .
... ---&gt; n
..n ---&gt; a
.na ---&gt; r
nar ---&gt; a
ara ---&gt; y
ray ---&gt; a
aya ---&gt; n
yan ---&gt; .
... ---&gt; j
..j ---&gt; a
.ja ---&gt; y
jay ---&gt; a
aya ---&gt; n
yan ---&gt; t
ant ---&gt; i
nti ---&gt; .
... ---&gt; s
..s ---&gt; a
.sa ---&gt; b
sab ---&gt; b
abb ---&gt; i
bbi ---&gt; r
bir ---&gt; .
... ---&gt; k
..k ---&gt; a
.ka ---&gt; m
kam ---&gt; a
ama ---&gt; l
mal ---&gt; .
... ---&gt; r
..r ---&gt; a
.ra ---&gt; j
raj ---&gt; e
aje ---&gt; n
jen ---&gt; d
end ---&gt; e
nde ---&gt; r
der ---&gt; i
eri ---&gt; .
... ---&gt; j
..j ---&gt; i
.ji ---&gt; t
jit ---&gt; t
itt ---&gt; e
tte ---&gt; n
ten ---&gt; d
end ---&gt; e
nde ---&gt; r
der ---&gt; .
... ---&gt; c
..c ---&gt; h
.ch ---&gt; a
cha ---&gt; n
han ---&gt; d
and ---&gt; a
nda ---&gt; n
dan ---&gt; .
... ---&gt; m
..m ---&gt; a
.ma ---&gt; h
mah ---&gt; u
ahu ---&gt; d
hud ---&gt; .
... ---&gt; b
..b ---&gt; h
.bh ---&gt; a
bha ---&gt; g
hag ---&gt; i
agi ---&gt; r
gir ---&gt; a
ira ---&gt; t
rat ---&gt; h
ath ---&gt; .
... ---&gt; v
..v ---&gt; a
.va ---&gt; n
van ---&gt; d
and ---&gt; h
ndh ---&gt; a
dha ---&gt; n
han ---&gt; a
ana ---&gt; .
... ---&gt; b
..b ---&gt; a
.ba ---&gt; n
ban ---&gt; s
ans ---&gt; h
nsh ---&gt; i
shi ---&gt; .
... ---&gt; s
..s ---&gt; a
.sa ---&gt; n
san ---&gt; g
ang ---&gt; e
nge ---&gt; e
gee ---&gt; n
een ---&gt; a
ena ---&gt; .
... ---&gt; g
..g ---&gt; h
.gh ---&gt; a
gha ---&gt; n
han ---&gt; s
ans ---&gt; h
nsh ---&gt; y
shy ---&gt; a
hya ---&gt; m
yam ---&gt; .
... ---&gt; h
..h ---&gt; a
.ha ---&gt; r
har ---&gt; p
arp ---&gt; a
rpa ---&gt; l
pal ---&gt; .
... ---&gt; p
..p ---&gt; a
.pa ---&gt; n
pan ---&gt; d
and ---&gt; i
ndi ---&gt; t
dit ---&gt; .
... ---&gt; g
..g ---&gt; u
.gu ---&gt; l
gul ---&gt; i
uli ---&gt; s
lis ---&gt; t
ist ---&gt; a
sta ---&gt; .
... ---&gt; s
..s ---&gt; a
.sa ---&gt; h
sah ---&gt; k
ahk ---&gt; i
hki ---&gt; r
kir ---&gt; .
... ---&gt; a
..a ---&gt; j
.aj ---&gt; a
aja ---&gt; y
jay ---&gt; p
ayp ---&gt; a
ypa ---&gt; l
pal ---&gt; .
... ---&gt; h
..h ---&gt; a
.ha ---&gt; p
hap ---&gt; p
app ---&gt; y
ppy ---&gt; .
... ---&gt; v
..v ---&gt; i
.vi ---&gt; k
vik ---&gt; r
ikr ---&gt; a
kra ---&gt; m
ram ---&gt; .
... ---&gt; t
..t ---&gt; a
.ta ---&gt; r
tar ---&gt; a
ara ---&gt; n
ran ---&gt; .
... ---&gt; r
..r ---&gt; a
.ra ---&gt; t
rat ---&gt; n
atn ---&gt; .
... ---&gt; r
..r ---&gt; a
.ra ---&gt; m
ram ---&gt; r
amr ---&gt; a
mra ---&gt; t
rat ---&gt; i
ati ---&gt; .
... ---&gt; f
..f ---&gt; r
.fr ---&gt; a
fra ---&gt; .
... ---&gt; m
..m ---&gt; e
.me ---&gt; n
men ---&gt; a
ena ---&gt; k
nak ---&gt; s
aks ---&gt; h
ksh ---&gt; i
shi ---&gt; .
... ---&gt; j
..j ---&gt; a
.ja ---&gt; s
jas ---&gt; h
ash ---&gt; g
shg ---&gt; u
hgu ---&gt; l
gul ---&gt; .
... ---&gt; s
..s ---&gt; a
.sa ---&gt; t
sat ---&gt; v
atv ---&gt; e
tve ---&gt; e
vee ---&gt; r
eer ---&gt; .
... ---&gt; p
..p ---&gt; e
.pe ---&gt; e
pee ---&gt; n
een ---&gt; a
ena ---&gt; .
... ---&gt; d
..d ---&gt; e
.de ---&gt; e
dee ---&gt; p
eep ---&gt; u
epu ---&gt; .
... ---&gt; j
..j ---&gt; i
.ji ---&gt; t
jit ---&gt; e
ite ---&gt; n
ten ---&gt; d
end ---&gt; e
nde ---&gt; r
der ---&gt; a
era ---&gt; .
... ---&gt; y
..y ---&gt; o
.yo ---&gt; g
yog ---&gt; e
oge ---&gt; n
gen ---&gt; d
end ---&gt; e
nde ---&gt; r
der ---&gt; .
... ---&gt; d
..d ---&gt; h
.dh ---&gt; a
dha ---&gt; r
har ---&gt; v
arv ---&gt; e
rve ---&gt; s
ves ---&gt; h
esh ---&gt; .
... ---&gt; j
..j ---&gt; a
.ja ---&gt; i
jai ---&gt; t
ait ---&gt; u
itu ---&gt; n
tun ---&gt; .
... ---&gt; s
..s ---&gt; a
.sa ---&gt; l
sal ---&gt; i
ali ---&gt; n
lin ---&gt; i
ini ---&gt; .
... ---&gt; r
..r ---&gt; i
.ri ---&gt; m
rim ---&gt; p
imp ---&gt; y
mpy ---&gt; .
... ---&gt; s
..s ---&gt; h
.sh ---&gt; a
sha ---&gt; r
har ---&gt; a
ara ---&gt; d
rad ---&gt; .
... ---&gt; s
..s ---&gt; o
.so ---&gt; n
son ---&gt; a
ona ---&gt; .
... ---&gt; p
..p ---&gt; r
.pr ---&gt; i
pri ---&gt; y
riy ---&gt; a
iya ---&gt; k
yak ---&gt; .
... ---&gt; p
..p ---&gt; o
.po ---&gt; m
pom ---&gt; a
oma ---&gt; .
... ---&gt; d
..d ---&gt; a
.da ---&gt; v
dav ---&gt; e
ave ---&gt; e
vee ---&gt; n
een ---&gt; a
ena ---&gt; .
... ---&gt; s
..s ---&gt; h
.sh ---&gt; a
sha ---&gt; m
ham ---&gt; b
amb ---&gt; u
mbu ---&gt; .
... ---&gt; s
..s ---&gt; h
.sh ---&gt; e
she ---&gt; l
hel ---&gt; e
ele ---&gt; n
len ---&gt; d
end ---&gt; e
nde ---&gt; r
der ---&gt; .
... ---&gt; s
..s ---&gt; i
.si ---&gt; v
siv ---&gt; a
iva ---&gt; n
van ---&gt; i
ani ---&gt; .
... ---&gt; r
..r ---&gt; a
.ra ---&gt; m
ram ---&gt; m
amm ---&gt; u
mmu ---&gt; r
mur ---&gt; t
urt ---&gt; i
rti ---&gt; .
... ---&gt; t
..t ---&gt; a
.ta ---&gt; n
tan ---&gt; m
anm ---&gt; a
nma ---&gt; y
may ---&gt; .
... ---&gt; i
..i ---&gt; n
.in ---&gt; d
ind ---&gt; e
nde ---&gt; r
der ---&gt; v
erv ---&gt; e
rve ---&gt; s
ves ---&gt; h
esh ---&gt; .
... ---&gt; r
..r ---&gt; a
.ra ---&gt; j
raj ---&gt; .
... ---&gt; d
..d ---&gt; o
.do ---&gt; u
dou ---&gt; l
oul ---&gt; a
ula ---&gt; t
lat ---&gt; .
... ---&gt; s
..s ---&gt; n
.sn ---&gt; j
snj ---&gt; a
nja ---&gt; n
jan ---&gt; a
ana ---&gt; .
... ---&gt; b
..b ---&gt; h
.bh ---&gt; a
bha ---&gt; j
haj ---&gt; a
aja ---&gt; n
jan ---&gt; .
... ---&gt; s
..s ---&gt; a
.sa ---&gt; k
sak ---&gt; s
aks ---&gt; h
ksh ---&gt; i
shi ---&gt; .
... ---&gt; r
..r ---&gt; a
.ra ---&gt; t
rat ---&gt; h
ath ---&gt; a
tha ---&gt; n
han ---&gt; .
... ---&gt; g
..g ---&gt; i
.gi ---&gt; t
git ---&gt; i
iti ---&gt; k
tik ---&gt; a
ika ---&gt; .
... ---&gt; a
..a ---&gt; n
.an ---&gt; s
ans ---&gt; u
nsu ---&gt; .
... ---&gt; s
..s ---&gt; u
.su ---&gt; n
sun ---&gt; d
und ---&gt; g
ndg ---&gt; a
dga ---&gt; .
... ---&gt; y
..y ---&gt; a
.ya ---&gt; m
yam ---&gt; e
ame ---&gt; e
mee ---&gt; n
een ---&gt; .
... ---&gt; p
..p ---&gt; a
.pa ---&gt; r
par ---&gt; g
arg ---&gt; a
rga ---&gt; t
gat ---&gt; i
ati ---&gt; .
... ---&gt; j
..j ---&gt; a
.ja ---&gt; s
jas ---&gt; w
asw ---&gt; i
swi ---&gt; n
win ---&gt; d
ind ---&gt; e
nde ---&gt; r
der ---&gt; .
... ---&gt; c
..c ---&gt; h
.ch ---&gt; e
che ---&gt; t
het ---&gt; a
eta ---&gt; n
tan ---&gt; r
anr ---&gt; a
nra ---&gt; m
ram ---&gt; .
... ---&gt; r
..r ---&gt; a
.ra ---&gt; m
ram ---&gt; e
ame ---&gt; s
mes ---&gt; h
esh ---&gt; w
shw ---&gt; a
hwa ---&gt; r
war ---&gt; .
... ---&gt; h
..h ---&gt; i
.hi ---&gt; m
him ---&gt; a
ima ---&gt; n
man ---&gt; i
ani ---&gt; .
... ---&gt; n
..n ---&gt; e
.ne ---&gt; e
nee ---&gt; m
eem ---&gt; a
ema ---&gt; .
... ---&gt; b
..b ---&gt; h
.bh ---&gt; a
bha ---&gt; n
han ---&gt; .
... ---&gt; h
..h ---&gt; a
.ha ---&gt; s
has ---&gt; e
ase ---&gt; e
see ---&gt; n
een ---&gt; .
... ---&gt; p
..p ---&gt; a
.pa ---&gt; r
par ---&gt; m
arm ---&gt; j
rmj ---&gt; e
mje ---&gt; e
jee ---&gt; t
eet ---&gt; .
... ---&gt; m
..m ---&gt; e
.me ---&gt; r
mer ---&gt; o
ero ---&gt; .
... ---&gt; g
..g ---&gt; u
.gu ---&gt; g
gug ---&gt; n
ugn ---&gt; a
gna ---&gt; .
... ---&gt; p
..p ---&gt; h
.ph ---&gt; u
phu ---&gt; l
hul ---&gt; k
ulk ---&gt; a
lka ---&gt; n
kan ---&gt; a
ana ---&gt; .
... ---&gt; a
..a ---&gt; n
.an ---&gt; j
anj ---&gt; r
njr ---&gt; e
jre ---&gt; j
rej ---&gt; .
... ---&gt; a
..a ---&gt; k
.ak ---&gt; s
aks ---&gt; h
ksh ---&gt; i
shi ---&gt; t
hit ---&gt; a
ita ---&gt; .
... ---&gt; y
..y ---&gt; a
.ya ---&gt; s
yas ---&gt; o
aso ---&gt; d
sod ---&gt; h
odh ---&gt; a
dha ---&gt; .
... ---&gt; g
..g ---&gt; o
.go ---&gt; r
gor ---&gt; i
ori ---&gt; .
... ---&gt; s
..s ---&gt; a
.sa ---&gt; f
saf ---&gt; e
afe ---&gt; .
... ---&gt; m
..m ---&gt; a
.ma ---&gt; s
mas ---&gt; h
ash ---&gt; e
she ---&gt; e
hee ---&gt; n
een ---&gt; .
... ---&gt; y
..y ---&gt; u
.yu ---&gt; n
yun ---&gt; u
unu ---&gt; s
nus ---&gt; .
... ---&gt; g
..g ---&gt; u
.gu ---&gt; d
gud ---&gt; d
udd ---&gt; i
ddi ---&gt; y
diy ---&gt; a
iya ---&gt; .
... ---&gt; a
..a ---&gt; k
.ak ---&gt; h
akh ---&gt; a
kha ---&gt; t
hat ---&gt; a
ata ---&gt; r
tar ---&gt; i
ari ---&gt; .
... ---&gt; n
..n ---&gt; a
.na ---&gt; r
nar ---&gt; e
are ---&gt; n
ren ---&gt; d
end ---&gt; a
nda ---&gt; r
dar ---&gt; .
... ---&gt; i
..i ---&gt; s
.is ---&gt; h
ish ---&gt; i
shi ---&gt; t
hit ---&gt; a
ita ---&gt; .
... ---&gt; s
..s ---&gt; o
.so ---&gt; m
som ---&gt; a
oma ---&gt; .
... ---&gt; h
..h ---&gt; o
.ho ---&gt; m
hom ---&gt; a
oma ---&gt; .
... ---&gt; s
..s ---&gt; a
.sa ---&gt; n
san ---&gt; o
ano ---&gt; .
... ---&gt; s
..s ---&gt; a
.sa ---&gt; m
sam ---&gt; v
amv ---&gt; e
mve ---&gt; d
ved ---&gt; n
edn ---&gt; a
dna ---&gt; .
... ---&gt; u
..u ---&gt; r
.ur ---&gt; e
ure ---&gt; n
ren ---&gt; d
end ---&gt; r
ndr ---&gt; a
dra ---&gt; .
... ---&gt; s
..s ---&gt; o
.so ---&gt; z
soz ---&gt; i
ozi ---&gt; .
... ---&gt; p
..p ---&gt; a
.pa ---&gt; r
par ---&gt; u
aru ---&gt; l
rul ---&gt; .
... ---&gt; k
..k ---&gt; a
.ka ---&gt; r
kar ---&gt; i
ari ---&gt; s
ris ---&gt; h
ish ---&gt; m
shm ---&gt; a
hma ---&gt; .
... ---&gt; s
..s ---&gt; a
.sa ---&gt; h
sah ---&gt; i
ahi ---&gt; d
hid ---&gt; .
... ---&gt; b
..b ---&gt; h
.bh ---&gt; u
bhu ---&gt; s
hus ---&gt; h
ush ---&gt; a
sha ---&gt; n
han ---&gt; .
... ---&gt; s
..s ---&gt; h
.sh ---&gt; m
shm ---&gt; e
hme ---&gt; j
mej ---&gt; h
ejh ---&gt; a
jha ---&gt; .
... ---&gt; s
..s ---&gt; w
.sw ---&gt; e
swe ---&gt; t
wet ---&gt; a
eta ---&gt; .
... ---&gt; j
..j ---&gt; a
.ja ---&gt; m
jam ---&gt; r
amr ---&gt; u
mru ---&gt; j
ruj ---&gt; a
uja ---&gt; h
jah ---&gt; a
aha ---&gt; .
... ---&gt; k
..k ---&gt; o
.ko ---&gt; k
kok ---&gt; i
oki ---&gt; l
kil ---&gt; .
... ---&gt; r
..r ---&gt; i
.ri ---&gt; j
rij ---&gt; u
iju ---&gt; l
jul ---&gt; .
... ---&gt; g
..g ---&gt; u
.gu ---&gt; r
gur ---&gt; p
urp ---&gt; r
rpr ---&gt; i
pri ---&gt; t
rit ---&gt; .
... ---&gt; n
..n ---&gt; a
.na ---&gt; s
nas ---&gt; e
ase ---&gt; e
see ---&gt; m
eem ---&gt; .
... ---&gt; s
..s ---&gt; a
.sa ---&gt; t
sat ---&gt; e
ate ---&gt; n
ten ---&gt; d
end ---&gt; e
nde ---&gt; r
der ---&gt; .
... ---&gt; r
..r ---&gt; i
.ri ---&gt; y
riy ---&gt; a
iya ---&gt; j
yaj ---&gt; u
aju ---&gt; d
jud ---&gt; i
udi ---&gt; n
din ---&gt; .
... ---&gt; m
..m ---&gt; a
.ma ---&gt; n
man ---&gt; d
and ---&gt; v
ndv ---&gt; i
dvi ---&gt; .
... ---&gt; m
..m ---&gt; a
.ma ---&gt; h
mah ---&gt; a
aha ---&gt; m
ham ---&gt; m
amm ---&gt; d
mmd ---&gt; .
... ---&gt; r
..r ---&gt; a
.ra ---&gt; j
raj ---&gt; n
ajn ---&gt; i
jni ---&gt; s
nis ---&gt; h
ish ---&gt; .
... ---&gt; s
..s ---&gt; u
.su ---&gt; k
suk ---&gt; j
ukj ---&gt; v
kjv ---&gt; e
jve ---&gt; e
vee ---&gt; r
eer ---&gt; .
... ---&gt; m
..m ---&gt; u
.mu ---&gt; s
mus ---&gt; h
ush ---&gt; k
shk ---&gt; a
hka ---&gt; n
kan ---&gt; .
... ---&gt; j
..j ---&gt; h
.jh ---&gt; a
jha ---&gt; w
haw ---&gt; a
awa ---&gt; r
war ---&gt; .
... ---&gt; a
..a ---&gt; a
.aa ---&gt; r
aar ---&gt; u
aru ---&gt; s
rus ---&gt; h
ush ---&gt; i
shi ---&gt; .
... ---&gt; f
..f ---&gt; a
.fa ---&gt; z
faz ---&gt; a
aza ---&gt; l
zal ---&gt; e
ale ---&gt; y
ley ---&gt; .
... ---&gt; f
..f ---&gt; u
.fu ---&gt; l
ful ---&gt; m
ulm ---&gt; i
lmi ---&gt; y
miy ---&gt; a
iya ---&gt; .
... ---&gt; h
..h ---&gt; a
.ha ---&gt; r
har ---&gt; i
ari ---&gt; o
rio ---&gt; m
iom ---&gt; .
... ---&gt; s
..s ---&gt; n
.sn ---&gt; t
snt ---&gt; o
nto ---&gt; s
tos ---&gt; h
osh ---&gt; .
... ---&gt; f
..f ---&gt; a
.fa ---&gt; r
far ---&gt; h
arh ---&gt; a
rha ---&gt; j
haj ---&gt; a
aja ---&gt; .
... ---&gt; k
..k ---&gt; i
.ki ---&gt; s
kis ---&gt; h
ish ---&gt; n
shn ---&gt; a
hna ---&gt; r
nar ---&gt; a
ara ---&gt; m
ram ---&gt; .
... ---&gt; f
..f ---&gt; a
.fa ---&gt; t
fat ---&gt; h
ath ---&gt; e
the ---&gt; r
her ---&gt; .
... ---&gt; b
..b ---&gt; a
.ba ---&gt; r
bar ---&gt; a
ara ---&gt; k
rak ---&gt; h
akh ---&gt; a
kha ---&gt; .
... ---&gt; r
..r ---&gt; u
.ru ---&gt; b
rub ---&gt; e
ube ---&gt; y
bey ---&gt; .
... ---&gt; j
..j ---&gt; i
.ji ---&gt; s
jis ---&gt; h
ish ---&gt; a
sha ---&gt; n
han ---&gt; t
ant ---&gt; .
... ---&gt; s
..s ---&gt; i
.si ---&gt; r
sir ---&gt; i
iri ---&gt; s
ris ---&gt; h
ish ---&gt; .
... ---&gt; f
..f ---&gt; i
.fi ---&gt; z
fiz ---&gt; a
iza ---&gt; .
... ---&gt; k
..k ---&gt; i
.ki ---&gt; t
kit ---&gt; t
itt ---&gt; i
tti ---&gt; .
... ---&gt; h
..h ---&gt; i
.hi ---&gt; m
him ---&gt; m
imm ---&gt; a
mma ---&gt; t
mat ---&gt; .
... ---&gt; d
..d ---&gt; o
.do ---&gt; l
dol ---&gt; i
oli ---&gt; .
... ---&gt; n
..n ---&gt; a
.na ---&gt; s
nas ---&gt; e
ase ---&gt; e
see ---&gt; b
eeb ---&gt; a
eba ---&gt; .
... ---&gt; j
..j ---&gt; o
.jo ---&gt; y
joy ---&gt; t
oyt ---&gt; i
yti ---&gt; .
... ---&gt; p
..p ---&gt; r
.pr ---&gt; a
pra ---&gt; m
ram ---&gt; e
ame ---&gt; e
mee ---&gt; l
eel ---&gt; a
ela ---&gt; .
... ---&gt; d
..d ---&gt; e
.de ---&gt; p
dep ---&gt; a
epa ---&gt; n
pan ---&gt; d
and ---&gt; e
nde ---&gt; r
der ---&gt; .
... ---&gt; k
..k ---&gt; u
.ku ---&gt; s
kus ---&gt; u
usu ---&gt; m
sum ---&gt; a
uma ---&gt; k
mak ---&gt; a
aka ---&gt; r
kar ---&gt; .
... ---&gt; d
..d ---&gt; e
.de ---&gt; v
dev ---&gt; .
... ---&gt; t
..t ---&gt; u
.tu ---&gt; l
tul ---&gt; s
uls ---&gt; a
lsa ---&gt; .
... ---&gt; j
..j ---&gt; h
.jh ---&gt; u
jhu ---&gt; m
hum ---&gt; k
umk ---&gt; i
mki ---&gt; .
... ---&gt; m
..m ---&gt; i
.mi ---&gt; d
mid ---&gt; h
idh ---&gt; a
dha ---&gt; n
han ---&gt; a
ana ---&gt; .
... ---&gt; r
..r ---&gt; a
.ra ---&gt; b
rab ---&gt; i
abi ---&gt; t
bit ---&gt; a
ita ---&gt; .
... ---&gt; s
..s ---&gt; h
.sh ---&gt; a
sha ---&gt; m
ham ---&gt; p
amp ---&gt; a
mpa ---&gt; .
... ---&gt; d
..d ---&gt; i
.di ---&gt; r
dir ---&gt; g
irg ---&gt; a
rga ---&gt; j
gaj ---&gt; .
... ---&gt; s
..s ---&gt; h
.sh ---&gt; i
shi ---&gt; v
hiv ---&gt; a
iva ---&gt; n
van ---&gt; g
ang ---&gt; i
ngi ---&gt; .
... ---&gt; s
..s ---&gt; u
.su ---&gt; n
sun ---&gt; i
uni ---&gt; t
nit ---&gt; a
ita ---&gt; .
... ---&gt; c
..c ---&gt; h
.ch ---&gt; a
cha ---&gt; n
han ---&gt; d
and ---&gt; r
ndr ---&gt; i
dri ---&gt; k
rik ---&gt; a
ika ---&gt; .
... ---&gt; d
..d ---&gt; e
.de ---&gt; v
dev ---&gt; i
evi ---&gt; .
... ---&gt; r
..r ---&gt; a
.ra ---&gt; g
rag ---&gt; n
agn ---&gt; i
gni ---&gt; .
... ---&gt; c
..c ---&gt; h
.ch ---&gt; u
chu ---&gt; n
hun ---&gt; a
una ---&gt; r
nar ---&gt; a
ara ---&gt; m
ram ---&gt; .
... ---&gt; k
..k ---&gt; a
.ka ---&gt; b
kab ---&gt; i
abi ---&gt; r
bir ---&gt; .
... ---&gt; r
..r ---&gt; i
.ri ---&gt; n
rin ---&gt; k
ink ---&gt; e
nke ---&gt; .
... ---&gt; b
..b ---&gt; a
.ba ---&gt; d
bad ---&gt; s
ads ---&gt; h
dsh ---&gt; y
shy ---&gt; a
hya ---&gt; .
... ---&gt; p
..p ---&gt; r
.pr ---&gt; e
pre ---&gt; m
rem ---&gt; p
emp ---&gt; a
mpa ---&gt; l
pal ---&gt; .
... ---&gt; p
..p ---&gt; a
.pa ---&gt; p
pap ---&gt; i
api ---&gt; y
piy ---&gt; a
iya ---&gt; .
... ---&gt; m
..m ---&gt; a
.ma ---&gt; m
mam ---&gt; .
... ---&gt; j
..j ---&gt; a
.ja ---&gt; s
jas ---&gt; v
asv ---&gt; e
sve ---&gt; e
vee ---&gt; r
eer ---&gt; .
... ---&gt; d
..d ---&gt; a
.da ---&gt; u
dau ---&gt; l
aul ---&gt; a
ula ---&gt; t
lat ---&gt; .
... ---&gt; g
..g ---&gt; a
.ga ---&gt; r
gar ---&gt; v
arv ---&gt; .
... ---&gt; b
..b ---&gt; a
.ba ---&gt; c
bac ---&gt; c
acc ---&gt; h
cch ---&gt; u
chu ---&gt; .
... ---&gt; n
..n ---&gt; a
.na ---&gt; s
nas ---&gt; e
ase ---&gt; e
see ---&gt; f
eef ---&gt; .
... ---&gt; v
..v ---&gt; y
.vy ---&gt; e
vye ---&gt; l
yel ---&gt; e
ele ---&gt; t
let ---&gt; .
... ---&gt; m
..m ---&gt; a
.ma ---&gt; r
mar ---&gt; z
arz ---&gt; i
rzi ---&gt; n
zin ---&gt; a
ina ---&gt; .
... ---&gt; b
..b ---&gt; i
.bi ---&gt; p
bip ---&gt; n
ipn ---&gt; e
pne ---&gt; s
nes ---&gt; h
esh ---&gt; .
... ---&gt; k
..k ---&gt; a
.ka ---&gt; c
kac ---&gt; h
ach ---&gt; r
chr ---&gt; i
hri ---&gt; .
... ---&gt; m
..m ---&gt; a
.ma ---&gt; d
mad ---&gt; h
adh ---&gt; u
dhu ---&gt; n
hun ---&gt; i
uni ---&gt; .
... ---&gt; n
..n ---&gt; a
.na ---&gt; r
nar ---&gt; o
aro ---&gt; o
roo ---&gt; .
... ---&gt; a
..a ---&gt; b
.ab ---&gt; u
abu ---&gt; .
... ---&gt; s
..s ---&gt; a
.sa ---&gt; t
sat ---&gt; y
aty ---&gt; v
tyv ---&gt; a
yva ---&gt; t
vat ---&gt; i
ati ---&gt; .
... ---&gt; p
..p ---&gt; r
.pr ---&gt; e
pre ---&gt; y
rey ---&gt; o
eyo ---&gt; j
yoj ---&gt; i
oji ---&gt; t
jit ---&gt; .
... ---&gt; r
..r ---&gt; a
.ra ---&gt; f
raf ---&gt; i
afi ---&gt; q
fiq ---&gt; .
... ---&gt; k
..k ---&gt; a
.ka ---&gt; l
kal ---&gt; a
ala ---&gt; w
law ---&gt; a
awa ---&gt; t
wat ---&gt; i
ati ---&gt; .
... ---&gt; d
..d ---&gt; a
.da ---&gt; l
dal ---&gt; i
ali ---&gt; .
... ---&gt; e
..e ---&gt; b
.eb ---&gt; a
eba ---&gt; n
ban ---&gt; e
ane ---&gt; .
... ---&gt; n
..n ---&gt; a
.na ---&gt; j
naj ---&gt; r
ajr ---&gt; i
jri ---&gt; n
rin ---&gt; .
... ---&gt; s
..s ---&gt; u
.su ---&gt; m
sum ---&gt; a
uma ---&gt; n
man ---&gt; .
... ---&gt; a
..a ---&gt; z
.az ---&gt; a
aza ---&gt; m
zam ---&gt; .
... ---&gt; a
..a ---&gt; y
.ay ---&gt; u
ayu ---&gt; b
yub ---&gt; e
ube ---&gt; .
... ---&gt; i
..i ---&gt; n
.in ---&gt; d
ind ---&gt; r
ndr ---&gt; e
dre ---&gt; s
res ---&gt; h
esh ---&gt; .
... ---&gt; b
..b ---&gt; a
.ba ---&gt; h
bah ---&gt; r
ahr ---&gt; a
hra ---&gt; t
rat ---&gt; .
... ---&gt; s
..s ---&gt; a
.sa ---&gt; m
sam ---&gt; s
ams ---&gt; e
mse ---&gt; r
ser ---&gt; .
... ---&gt; n
..n ---&gt; a
.na ---&gt; z
naz ---&gt; i
azi ---&gt; m
zim ---&gt; .
... ---&gt; r
..r ---&gt; a
.ra ---&gt; j
raj ---&gt; i
aji ---&gt; t
jit ---&gt; .
... ---&gt; b
..b ---&gt; i
.bi ---&gt; j
bij ---&gt; e
ije ---&gt; n
jen ---&gt; d
end ---&gt; r
ndr ---&gt; a
dra ---&gt; .
... ---&gt; j
..j ---&gt; a
.ja ---&gt; q
jaq ---&gt; u
aqu ---&gt; i
qui ---&gt; r
uir ---&gt; .
... ---&gt; a
..a ---&gt; b
.ab ---&gt; h
abh ---&gt; i
bhi ---&gt; n
hin ---&gt; w
inw ---&gt; a
nwa ---&gt; v
wav ---&gt; .
... ---&gt; p
..p ---&gt; a
.pa ---&gt; n
pan ---&gt; a
ana ---&gt; j
naj ---&gt; .
... ---&gt; s
..s ---&gt; a
.sa ---&gt; h
sah ---&gt; a
aha ---&gt; n
han ---&gt; a
ana ---&gt; j
naj ---&gt; .
... ---&gt; a
..a ---&gt; r
.ar ---&gt; h
arh ---&gt; a
rha ---&gt; m
ham ---&gt; .
... ---&gt; s
..s ---&gt; u
.su ---&gt; b
sub ---&gt; o
ubo ---&gt; d
bod ---&gt; h
odh ---&gt; .
... ---&gt; p
..p ---&gt; h
.ph ---&gt; o
pho ---&gt; o
hoo ---&gt; l
ool ---&gt; i
oli ---&gt; .
... ---&gt; a
..a ---&gt; m
.am ---&gt; r
amr ---&gt; i
mri ---&gt; t
rit ---&gt; p
itp ---&gt; a
tpa ---&gt; l
pal ---&gt; .
... ---&gt; p
..p ---&gt; h
.ph ---&gt; o
pho ---&gt; o
hoo ---&gt; l
ool ---&gt; .
... ---&gt; v
..v ---&gt; i
.vi ---&gt; k
vik ---&gt; e
ike ---&gt; s
kes ---&gt; h
esh ---&gt; .
... ---&gt; s
..s ---&gt; h
.sh ---&gt; i
shi ---&gt; v
hiv ---&gt; n
ivn ---&gt; a
vna ---&gt; t
nat ---&gt; h
ath ---&gt; .
... ---&gt; k
..k ---&gt; i
.ki ---&gt; r
kir ---&gt; s
irs ---&gt; h
rsh ---&gt; a
sha ---&gt; n
han ---&gt; .
... ---&gt; k
..k ---&gt; h
.kh ---&gt; a
kha ---&gt; i
hai ---&gt; r
air ---&gt; u
iru ---&gt; .
... ---&gt; k
..k ---&gt; h
.kh ---&gt; u
khu ---&gt; s
hus ---&gt; h
ush ---&gt; a
sha ---&gt; b
hab ---&gt; u
abu ---&gt; .
... ---&gt; a
..a ---&gt; j
.aj ---&gt; m
ajm ---&gt; a
jma ---&gt; l
mal ---&gt; .
... ---&gt; s
..s ---&gt; a
.sa ---&gt; r
sar ---&gt; j
arj ---&gt; a
rja ---&gt; h
jah ---&gt; a
aha ---&gt; .
... ---&gt; a
..a ---&gt; a
.aa ---&gt; n
aan ---&gt; s
ans ---&gt; i
nsi ---&gt; .
... ---&gt; m
..m ---&gt; o
.mo ---&gt; u
mou ---&gt; s
ous ---&gt; a
usa ---&gt; m
sam ---&gt; .
... ---&gt; d
..d ---&gt; h
.dh ---&gt; a
dha ---&gt; r
har ---&gt; m
arm ---&gt; p
rmp ---&gt; a
mpa ---&gt; l
pal ---&gt; .
... ---&gt; r
..r ---&gt; a
.ra ---&gt; h
rah ---&gt; i
ahi ---&gt; l
hil ---&gt; .
... ---&gt; b
..b ---&gt; a
.ba ---&gt; s
bas ---&gt; h
ash ---&gt; u
shu ---&gt; d
hud ---&gt; e
ude ---&gt; v
dev ---&gt; .
... ---&gt; n
..n ---&gt; j
.nj ---&gt; a
nja ---&gt; r
jar ---&gt; e
are ---&gt; .
... ---&gt; r
..r ---&gt; a
.ra ---&gt; k
rak ---&gt; s
aks ---&gt; h
ksh ---&gt; a
sha ---&gt; .
... ---&gt; a
..a ---&gt; d
.ad ---&gt; a
ada ---&gt; r
dar ---&gt; s
ars ---&gt; h
rsh ---&gt; .
... ---&gt; v
..v ---&gt; i
.vi ---&gt; s
vis ---&gt; h
ish ---&gt; n
shn ---&gt; u
hnu ---&gt; .
... ---&gt; l
..l ---&gt; a
.la ---&gt; l
lal ---&gt; u
alu ---&gt; .
... ---&gt; e
..e ---&gt; l
.el ---&gt; d
eld ---&gt; r
ldr ---&gt; o
dro ---&gt; .
... ---&gt; g
..g ---&gt; a
.ga ---&gt; n
gan ---&gt; e
ane ---&gt; s
nes ---&gt; h
esh ---&gt; .
... ---&gt; a
..a ---&gt; r
.ar ---&gt; u
aru ---&gt; n
run ---&gt; k
unk ---&gt; u
nku ---&gt; m
kum ---&gt; a
uma ---&gt; r
mar ---&gt; .
... ---&gt; b
..b ---&gt; a
.ba ---&gt; r
bar ---&gt; h
arh ---&gt; a
rha ---&gt; m
ham ---&gt; .
... ---&gt; s
..s ---&gt; a
.sa ---&gt; m
sam ---&gt; a
ama ---&gt; d
mad ---&gt; h
adh ---&gt; a
dha ---&gt; n
han ---&gt; .
... ---&gt; r
..r ---&gt; a
.ra ---&gt; t
rat ---&gt; n
atn ---&gt; a
tna ---&gt; .
... ---&gt; m
..m ---&gt; u
.mu ---&gt; k
muk ---&gt; r
ukr ---&gt; a
kra ---&gt; m
ram ---&gt; .
... ---&gt; p
..p ---&gt; r
.pr ---&gt; a
pra ---&gt; b
rab ---&gt; h
abh ---&gt; u
bhu ---&gt; .
... ---&gt; j
..j ---&gt; a
.ja ---&gt; s
jas ---&gt; p
asp ---&gt; r
spr ---&gt; e
pre ---&gt; e
ree ---&gt; t
eet ---&gt; .
... ---&gt; m
..m ---&gt; u
.mu ---&gt; n
mun ---&gt; d
und ---&gt; e
nde ---&gt; r
der ---&gt; .
... ---&gt; d
..d ---&gt; e
.de ---&gt; v
dev ---&gt; a
eva ---&gt; s
vas ---&gt; h
ash ---&gt; i
shi ---&gt; s
his ---&gt; h
ish ---&gt; .
... ---&gt; p
..p ---&gt; a
.pa ---&gt; r
par ---&gt; a
ara ---&gt; t
rat ---&gt; h
ath ---&gt; v
thv ---&gt; i
hvi ---&gt; .
... ---&gt; a
..a ---&gt; a
.aa ---&gt; m
aam ---&gt; i
ami ---&gt; l
mil ---&gt; .
... ---&gt; t
..t ---&gt; a
.ta ---&gt; m
tam ---&gt; s
ams ---&gt; a
msa ---&gt; .
... ---&gt; a
..a ---&gt; s
.as ---&gt; h
ash ---&gt; r
shr ---&gt; a
hra ---&gt; f
raf ---&gt; .
... ---&gt; n
..n ---&gt; a
.na ---&gt; j
naj ---&gt; i
aji ---&gt; r
jir ---&gt; a
ira ---&gt; .
... ---&gt; d
..d ---&gt; a
.da ---&gt; m
dam ---&gt; a
ama ---&gt; n
man ---&gt; j
anj ---&gt; e
nje ---&gt; e
jee ---&gt; t
eet ---&gt; .
... ---&gt; d
..d ---&gt; e
.de ---&gt; v
dev ---&gt; a
eva ---&gt; s
vas ---&gt; i
asi ---&gt; s
sis ---&gt; h
ish ---&gt; .
... ---&gt; s
..s ---&gt; u
.su ---&gt; j
suj ---&gt; a
uja ---&gt; n
jan ---&gt; t
ant ---&gt; i
nti ---&gt; .
... ---&gt; s
..s ---&gt; a
.sa ---&gt; r
sar ---&gt; v
arv ---&gt; a
rva ---&gt; s
vas ---&gt; h
ash ---&gt; .
... ---&gt; j
..j ---&gt; a
.ja ---&gt; n
jan ---&gt; a
ana ---&gt; k
nak ---&gt; .
... ---&gt; g
..g ---&gt; u
.gu ---&gt; r
gur ---&gt; j
urj ---&gt; e
rje ---&gt; e
jee ---&gt; t
eet ---&gt; .
... ---&gt; m
..m ---&gt; o
.mo ---&gt; d
mod ---&gt; h
odh ---&gt; .
... ---&gt; d
..d ---&gt; e
.de ---&gt; v
dev ---&gt; i
evi ---&gt; d
vid ---&gt; e
ide ---&gt; e
dee ---&gt; n
een ---&gt; .
... ---&gt; s
..s ---&gt; h
.sh ---&gt; i
shi ---&gt; t
hit ---&gt; t
itt ---&gt; a
tta ---&gt; l
tal ---&gt; .
... ---&gt; l
..l ---&gt; a
.la ---&gt; k
lak ---&gt; s
aks ---&gt; h
ksh ---&gt; y
shy ---&gt; .
... ---&gt; a
..a ---&gt; s
.as ---&gt; h
ash ---&gt; a
sha ---&gt; n
han ---&gt; j
anj ---&gt; a
nja ---&gt; l
jal ---&gt; i
ali ---&gt; .
... ---&gt; h
..h ---&gt; a
.ha ---&gt; j
haj ---&gt; a
aja ---&gt; r
jar ---&gt; i
ari ---&gt; .
... ---&gt; s
..s ---&gt; a
.sa ---&gt; r
sar ---&gt; m
arm ---&gt; i
rmi ---&gt; l
mil ---&gt; a
ila ---&gt; .
... ---&gt; i
..i ---&gt; s
.is ---&gt; h
ish ---&gt; .
... ---&gt; s
..s ---&gt; h
.sh ---&gt; e
she ---&gt; i
hei ---&gt; k
eik ---&gt; h
ikh ---&gt; s
khs ---&gt; a
hsa ---&gt; i
sai ---&gt; .
... ---&gt; s
..s ---&gt; e
.se ---&gt; h
seh ---&gt; d
ehd ---&gt; e
hde ---&gt; v
dev ---&gt; .
... ---&gt; p
..p ---&gt; a
.pa ---&gt; r
par ---&gt; m
arm ---&gt; i
rmi ---&gt; l
mil ---&gt; a
ila ---&gt; .
... ---&gt; j
..j ---&gt; a
.ja ---&gt; g
jag ---&gt; v
agv ---&gt; i
gvi ---&gt; r
vir ---&gt; i
iri ---&gt; .
... ---&gt; b
..b ---&gt; a
.ba ---&gt; h
bah ---&gt; n
ahn ---&gt; u
hnu ---&gt; .
... ---&gt; n
..n ---&gt; a
.na ---&gt; r
nar ---&gt; g
arg ---&gt; i
rgi ---&gt; s
gis ---&gt; h
ish ---&gt; .
... ---&gt; j
..j ---&gt; a
.ja ---&gt; s
jas ---&gt; p
asp ---&gt; a
spa ---&gt; l
pal ---&gt; .
... ---&gt; h
..h ---&gt; a
.ha ---&gt; r
har ---&gt; d
ard ---&gt; e
rde ---&gt; v
dev ---&gt; .
... ---&gt; t
..t ---&gt; o
.to ---&gt; s
tos ---&gt; h
osh ---&gt; a
sha ---&gt; r
har ---&gt; .
... ---&gt; s
..s ---&gt; h
.sh ---&gt; a
sha ---&gt; r
har ---&gt; i
ari ---&gt; b
rib ---&gt; .
... ---&gt; y
..y ---&gt; a
.ya ---&gt; q
yaq ---&gt; u
aqu ---&gt; b
qub ---&gt; .
... ---&gt; d
..d ---&gt; e
.de ---&gt; v
dev ---&gt; k
evk ---&gt; a
vka ---&gt; l
kal ---&gt; i
ali ---&gt; .
... ---&gt; v
..v ---&gt; i
.vi ---&gt; p
vip ---&gt; u
ipu ---&gt; n
pun ---&gt; .
... ---&gt; r
..r ---&gt; i
.ri ---&gt; c
ric ---&gt; h
ich ---&gt; a
cha ---&gt; r
har ---&gt; a
ara ---&gt; j
raj ---&gt; .
... ---&gt; r
..r ---&gt; o
.ro ---&gt; o
roo ---&gt; p
oop ---&gt; a
opa ---&gt; m
pam ---&gt; .
... ---&gt; p
..p ---&gt; a
.pa ---&gt; r
par ---&gt; v
arv ---&gt; e
rve ---&gt; e
vee ---&gt; n
een ---&gt; .
... ---&gt; s
..s ---&gt; h
.sh ---&gt; a
sha ---&gt; j
haj ---&gt; i
aji ---&gt; y
jiy ---&gt; a
iya ---&gt; .
... ---&gt; s
..s ---&gt; u
.su ---&gt; b
sub ---&gt; h
ubh ---&gt; a
bha ---&gt; d
had ---&gt; r
adr ---&gt; a
dra ---&gt; .
... ---&gt; a
..a ---&gt; s
.as ---&gt; h
ash ---&gt; o
sho ---&gt; k
hok ---&gt; .
... ---&gt; k
..k ---&gt; a
.ka ---&gt; m
kam ---&gt; a
ama ---&gt; k
mak ---&gt; s
aks ---&gt; h
ksh ---&gt; y
shy ---&gt; a
hya ---&gt; .
... ---&gt; s
..s ---&gt; a
.sa ---&gt; b
sab ---&gt; a
aba ---&gt; n
ban ---&gt; a
ana ---&gt; .
... ---&gt; p
..p ---&gt; r
.pr ---&gt; i
pri ---&gt; t
rit ---&gt; h
ith ---&gt; v
thv ---&gt; i
hvi ---&gt; .
... ---&gt; s
..s ---&gt; u
.su ---&gt; r
sur ---&gt; j
urj ---&gt; i
rji ---&gt; t
jit ---&gt; .
... ---&gt; y
..y ---&gt; a
.ya ---&gt; s
yas ---&gt; h
ash ---&gt; o
sho ---&gt; d
hod ---&gt; h
odh ---&gt; a
dha ---&gt; .
... ---&gt; g
..g ---&gt; a
.ga ---&gt; l
gal ---&gt; i
ali ---&gt; .
... ---&gt; a
..a ---&gt; m
.am ---&gt; a
ama ---&gt; r
mar ---&gt; m
arm ---&gt; u
rmu ---&gt; l
mul ---&gt; a
ula ---&gt; .
... ---&gt; a
..a ---&gt; r
.ar ---&gt; m
arm ---&gt; a
rma ---&gt; a
maa ---&gt; n
aan ---&gt; .
... ---&gt; s
..s ---&gt; h
.sh ---&gt; k
shk ---&gt; u
hku ---&gt; n
kun ---&gt; t
unt ---&gt; a
nta ---&gt; l
tal ---&gt; a
ala ---&gt; .
... ---&gt; k
..k ---&gt; u
.ku ---&gt; s
kus ---&gt; u
usu ---&gt; m
sum ---&gt; a
uma ---&gt; .
... ---&gt; n
..n ---&gt; a
.na ---&gt; g
nag ---&gt; i
agi ---&gt; n
gin ---&gt; a
ina ---&gt; .
... ---&gt; s
..s ---&gt; o
.so ---&gt; h
soh ---&gt; a
oha ---&gt; n
han ---&gt; p
anp ---&gt; a
npa ---&gt; l
pal ---&gt; .
... ---&gt; r
..r ---&gt; u
.ru ---&gt; b
rub ---&gt; o
ubo ---&gt; .
... ---&gt; s
..s ---&gt; e
.se ---&gt; h
seh ---&gt; n
ehn ---&gt; a
hna ---&gt; a
naa ---&gt; z
aaz ---&gt; .
... ---&gt; a
..a ---&gt; m
.am ---&gt; r
amr ---&gt; a
mra ---&gt; t
rat ---&gt; .
... ---&gt; b
..b ---&gt; a
.ba ---&gt; l
bal ---&gt; j
alj ---&gt; e
lje ---&gt; e
jee ---&gt; t
eet ---&gt; .
... ---&gt; p
..p ---&gt; i
.pi ---&gt; t
pit ---&gt; i
iti ---&gt; k
tik ---&gt; a
ika ---&gt; .
... ---&gt; n
..n ---&gt; a
.na ---&gt; u
nau ---&gt; l
aul ---&gt; a
ula ---&gt; k
lak ---&gt; h
akh ---&gt; .
... ---&gt; f
..f ---&gt; i
.fi ---&gt; r
fir ---&gt; o
iro ---&gt; z
roz ---&gt; a
oza ---&gt; .
... ---&gt; r
..r ---&gt; i
.ri ---&gt; s
ris ---&gt; a
isa ---&gt; b
sab ---&gt; h
abh ---&gt; .
... ---&gt; a
..a ---&gt; t
.at ---&gt; u
atu ---&gt; l
tul ---&gt; .
... ---&gt; i
..i ---&gt; n
.in ---&gt; d
ind ---&gt; u
ndu ---&gt; .
... ---&gt; s
..s ---&gt; h
.sh ---&gt; r
shr ---&gt; e
hre ---&gt; e
ree ---&gt; m
eem ---&gt; a
ema ---&gt; t
mat ---&gt; i
ati ---&gt; .
... ---&gt; p
..p ---&gt; a
.pa ---&gt; l
pal ---&gt; v
alv ---&gt; i
lvi ---&gt; n
vin ---&gt; d
ind ---&gt; e
nde ---&gt; r
der ---&gt; .
... ---&gt; o
..o ---&gt; m
.om ---&gt; p
omp ---&gt; a
mpa ---&gt; l
pal ---&gt; .
... ---&gt; c
..c ---&gt; h
.ch ---&gt; a
cha ---&gt; n
han ---&gt; c
anc ---&gt; h
nch ---&gt; l
chl ---&gt; .
... ---&gt; j
..j ---&gt; a
.ja ---&gt; g
jag ---&gt; m
agm ---&gt; o
gmo ---&gt; h
moh ---&gt; a
oha ---&gt; n
han ---&gt; .
... ---&gt; r
..r ---&gt; u
.ru ---&gt; k
ruk ---&gt; m
ukm ---&gt; a
kma ---&gt; n
man ---&gt; i
ani ---&gt; .
... ---&gt; r
..r ---&gt; a
.ra ---&gt; i
rai ---&gt; .
... ---&gt; f
..f ---&gt; a
.fa ---&gt; r
far ---&gt; h
arh ---&gt; a
rha ---&gt; n
han ---&gt; a
ana ---&gt; a
naa ---&gt; z
aaz ---&gt; .
... ---&gt; g
..g ---&gt; a
.ga ---&gt; r
gar ---&gt; u
aru ---&gt; p
rup ---&gt; a
upa ---&gt; l
pal ---&gt; .
... ---&gt; j
..j ---&gt; a
.ja ---&gt; h
jah ---&gt; i
ahi ---&gt; r
hir ---&gt; u
iru ---&gt; l
rul ---&gt; .
... ---&gt; f
..f ---&gt; o
.fo ---&gt; o
foo ---&gt; l
ool ---&gt; .
... ---&gt; y
..y ---&gt; o
.yo ---&gt; g
yog ---&gt; i
ogi ---&gt; n
gin ---&gt; d
ind ---&gt; e
nde ---&gt; r
der ---&gt; .
... ---&gt; m
..m ---&gt; a
.ma ---&gt; n
man ---&gt; j
anj ---&gt; u
nju ---&gt; l
jul ---&gt; a
ula ---&gt; .
... ---&gt; a
..a ---&gt; n
.an ---&gt; a
ana ---&gt; y
nay ---&gt; a
aya ---&gt; t
yat ---&gt; h
ath ---&gt; a
tha ---&gt; .
... ---&gt; r
..r ---&gt; i
.ri ---&gt; n
rin ---&gt; k
ink ---&gt; i
nki ---&gt; .
... ---&gt; u
..u ---&gt; m
.um ---&gt; a
uma ---&gt; n
man ---&gt; g
ang ---&gt; .
... ---&gt; s
..s ---&gt; o
.so ---&gt; t
sot ---&gt; a
ota ---&gt; j
taj ---&gt; .
... ---&gt; d
..d ---&gt; i
.di ---&gt; s
dis ---&gt; i
isi ---&gt; .
... ---&gt; k
..k ---&gt; u
.ku ---&gt; m
kum ---&gt; a
uma ---&gt; r
mar ---&gt; e
are ---&gt; .
... ---&gt; r
..r ---&gt; o
.ro ---&gt; z
roz ---&gt; i
ozi ---&gt; n
zin ---&gt; a
ina ---&gt; .
... ---&gt; r
..r ---&gt; e
.re ---&gt; h
reh ---&gt; a
eha ---&gt; n
han ---&gt; .
... ---&gt; h
..h ---&gt; o
.ho ---&gt; r
hor ---&gt; a
ora ---&gt; m
ram ---&gt; .
... ---&gt; h
..h ---&gt; e
.he ---&gt; m
hem ---&gt; .
... ---&gt; k
..k ---&gt; i
.ki ---&gt; n
kin ---&gt; g
ing ---&gt; k
ngk ---&gt; a
gka ---&gt; r
kar ---&gt; .
... ---&gt; s
..s ---&gt; a
.sa ---&gt; r
sar ---&gt; u
aru ---&gt; .
... ---&gt; t
..t ---&gt; a
.ta ---&gt; r
tar ---&gt; n
arn ---&gt; u
rnu ---&gt; m
num ---&gt; .
... ---&gt; r
..r ---&gt; o
.ro ---&gt; o
roo ---&gt; p
oop ---&gt; s
ops ---&gt; i
psi ---&gt; n
sin ---&gt; g
ing ---&gt; h
ngh ---&gt; .
... ---&gt; m
..m ---&gt; a
.ma ---&gt; h
mah ---&gt; i
ahi ---&gt; .
... ---&gt; h
..h ---&gt; a
.ha ---&gt; r
har ---&gt; r
arr ---&gt; y
rry ---&gt; .
... ---&gt; m
..m ---&gt; o
.mo ---&gt; g
mog ---&gt; a
oga ---&gt; n
gan ---&gt; .
... ---&gt; b
..b ---&gt; a
.ba ---&gt; n
ban ---&gt; t
ant ---&gt; y
nty ---&gt; .
... ---&gt; r
..r ---&gt; a
.ra ---&gt; n
ran ---&gt; j
anj ---&gt; i
nji ---&gt; t
jit ---&gt; .
... ---&gt; b
..b ---&gt; a
.ba ---&gt; l
bal ---&gt; a
ala ---&gt; k
lak ---&gt; .
... ---&gt; a
..a ---&gt; m
.am ---&gt; r
amr ---&gt; a
mra ---&gt; t
rat ---&gt; a
ata ---&gt; l
tal ---&gt; a
ala ---&gt; l
lal ---&gt; .
... ---&gt; v
..v ---&gt; a
.va ---&gt; n
van ---&gt; s
ans ---&gt; h
nsh ---&gt; u
shu ---&gt; .
... ---&gt; m
..m ---&gt; u
.mu ---&gt; s
mus ---&gt; r
usr ---&gt; a
sra ---&gt; .
... ---&gt; k
..k ---&gt; u
.ku ---&gt; n
kun ---&gt; t
unt ---&gt; i
nti ---&gt; .
... ---&gt; k
..k ---&gt; i
.ki ---&gt; r
kir ---&gt; s
irs ---&gt; h
rsh ---&gt; n
shn ---&gt; a
hna ---&gt; .
... ---&gt; n
..n ---&gt; a
.na ---&gt; z
naz ---&gt; r
azr ---&gt; a
zra ---&gt; n
ran ---&gt; a
ana ---&gt; .
... ---&gt; m
..m ---&gt; e
.me ---&gt; h
meh ---&gt; n
ehn ---&gt; a
hna ---&gt; j
naj ---&gt; .
... ---&gt; h
..h ---&gt; a
.ha ---&gt; r
har ---&gt; b
arb ---&gt; h
rbh ---&gt; a
bha ---&gt; j
haj ---&gt; a
aja ---&gt; n
jan ---&gt; .
... ---&gt; n
..n ---&gt; a
.na ---&gt; m
nam ---&gt; e
ame ---&gt; n
men ---&gt; .
... ---&gt; k
..k ---&gt; a
.ka ---&gt; m
kam ---&gt; r
amr ---&gt; e
mre ---&gt; e
ree ---&gt; n
een ---&gt; .
... ---&gt; b
..b ---&gt; a
.ba ---&gt; d
bad ---&gt; r
adr ---&gt; u
dru ---&gt; .
... ---&gt; b
..b ---&gt; a
.ba ---&gt; b
bab ---&gt; a
aba ---&gt; n
ban ---&gt; .
... ---&gt; s
..s ---&gt; h
.sh ---&gt; a
sha ---&gt; h
hah ---&gt; r
ahr ---&gt; u
hru ---&gt; k
ruk ---&gt; h
ukh ---&gt; .
... ---&gt; j
..j ---&gt; a
.ja ---&gt; m
jam ---&gt; u
amu ---&gt; n
mun ---&gt; a
una ---&gt; .
... ---&gt; s
..s ---&gt; a
.sa ---&gt; r
sar ---&gt; s
ars ---&gt; h
rsh ---&gt; w
shw ---&gt; a
hwa ---&gt; t
wat ---&gt; i
ati ---&gt; .
... ---&gt; r
..r ---&gt; i
.ri ---&gt; n
rin ---&gt; u
inu ---&gt; k
nuk ---&gt; a
uka ---&gt; n
kan ---&gt; w
anw ---&gt; r
nwr ---&gt; .
... ---&gt; a
..a ---&gt; s
.as ---&gt; g
asg ---&gt; a
sga ---&gt; r
gar ---&gt; .
... ---&gt; k
..k ---&gt; o
.ko ---&gt; o
koo ---&gt; k
ook ---&gt; i
oki ---&gt; .
... ---&gt; s
..s ---&gt; a
.sa ---&gt; h
sah ---&gt; i
ahi ---&gt; r
hir ---&gt; a
ira ---&gt; .
... ---&gt; j
..j ---&gt; a
.ja ---&gt; i
jai ---&gt; w
aiw ---&gt; a
iwa ---&gt; n
wan ---&gt; t
ant ---&gt; i
nti ---&gt; .
... ---&gt; k
..k ---&gt; h
.kh ---&gt; u
khu ---&gt; s
hus ---&gt; h
ush ---&gt; b
shb ---&gt; u
hbu ---&gt; .
... ---&gt; r
..r ---&gt; a
.ra ---&gt; m
ram ---&gt; b
amb ---&gt; h
mbh ---&gt; u
bhu ---&gt; l
hul ---&gt; .
... ---&gt; k
..k ---&gt; u
.ku ---&gt; m
kum ---&gt; a
uma ---&gt; r
mar ---&gt; a
ara ---&gt; g
rag ---&gt; e
age ---&gt; .
... ---&gt; m
..m ---&gt; o
.mo ---&gt; h
moh ---&gt; a
oha ---&gt; b
hab ---&gt; b
abb ---&gt; a
bba ---&gt; t
bat ---&gt; .
... ---&gt; m
..m ---&gt; e
.me ---&gt; h
meh ---&gt; i
ehi ---&gt; b
hib ---&gt; .
... ---&gt; s
..s ---&gt; i
.si ---&gt; k
sik ---&gt; a
ika ---&gt; n
kan ---&gt; d
and ---&gt; e
nde ---&gt; r
der ---&gt; .
... ---&gt; k
..k ---&gt; u
.ku ---&gt; l
kul ---&gt; v
ulv ---&gt; i
lvi ---&gt; n
vin ---&gt; d
ind ---&gt; e
nde ---&gt; r
der ---&gt; .
... ---&gt; s
..s ---&gt; u
.su ---&gt; l
sul ---&gt; e
ule ---&gt; k
lek ---&gt; h
ekh ---&gt; a
kha ---&gt; .
... ---&gt; g
..g ---&gt; e
.ge ---&gt; e
gee ---&gt; r
eer ---&gt; n
ern ---&gt; i
rni ---&gt; s
nis ---&gt; h
ish ---&gt; .
... ---&gt; k
..k ---&gt; u
.ku ---&gt; m
kum ---&gt; o
umo ---&gt; d
mod ---&gt; .
... ---&gt; v
..v ---&gt; e
.ve ---&gt; r
ver ---&gt; s
ers ---&gt; a
rsa ---&gt; .
... ---&gt; h
..h ---&gt; a
.ha ---&gt; r
har ---&gt; d
ard ---&gt; e
rde ---&gt; e
dee ---&gt; p
eep ---&gt; .
... ---&gt; b
..b ---&gt; a
.ba ---&gt; d
bad ---&gt; a
ada ---&gt; m
dam ---&gt; i
ami ---&gt; .
... ---&gt; l
..l ---&gt; a
.la ---&gt; v
lav ---&gt; p
avp ---&gt; r
vpr ---&gt; e
pre ---&gt; e
ree ---&gt; t
eet ---&gt; .
... ---&gt; k
..k ---&gt; i
.ki ---&gt; n
kin ---&gt; y
iny ---&gt; a
nya ---&gt; .
... ---&gt; v
..v ---&gt; i
.vi ---&gt; k
vik ---&gt; a
ika ---&gt; s
kas ---&gt; h
ash ---&gt; .
... ---&gt; s
..s ---&gt; r
.sr ---&gt; i
sri ---&gt; m
rim ---&gt; a
ima ---&gt; t
mat ---&gt; i
ati ---&gt; .
... ---&gt; g
..g ---&gt; y
.gy ---&gt; a
gya ---&gt; n
yan ---&gt; d
and ---&gt; e
nde ---&gt; e
dee ---&gt; p
eep ---&gt; .
... ---&gt; p
..p ---&gt; a
.pa ---&gt; l
pal ---&gt; a
ala ---&gt; k
lak ---&gt; .
... ---&gt; a
..a ---&gt; r
.ar ---&gt; c
arc ---&gt; h
rch ---&gt; a
cha ---&gt; n
han ---&gt; a
ana ---&gt; .
... ---&gt; n
..n ---&gt; e
.ne ---&gt; e
nee ---&gt; t
eet ---&gt; i
eti ---&gt; .
... ---&gt; d
..d ---&gt; e
.de ---&gt; e
dee ---&gt; p
eep ---&gt; a
epa ---&gt; n
pan ---&gt; s
ans ---&gt; u
nsu ---&gt; .
... ---&gt; b
..b ---&gt; h
.bh ---&gt; a
bha ---&gt; n
han ---&gt; w
anw ---&gt; a
nwa ---&gt; r
war ---&gt; i
ari ---&gt; .
... ---&gt; m
..m ---&gt; e
.me ---&gt; m
mem ---&gt; a
ema ---&gt; .
... ---&gt; a
..a ---&gt; g
.ag ---&gt; y
agy ---&gt; a
gya ---&gt; p
yap ---&gt; a
apa ---&gt; d
pad ---&gt; .
... ---&gt; b
..b ---&gt; h
.bh ---&gt; a
bha ---&gt; g
hag ---&gt; .
... ---&gt; t
..t ---&gt; a
.ta ---&gt; v
tav ---&gt; r
avr ---&gt; a
vra ---&gt; j
raj ---&gt; .
... ---&gt; j
..j ---&gt; a
.ja ---&gt; w
jaw ---&gt; a
awa ---&gt; h
wah ---&gt; a
aha ---&gt; r
har ---&gt; .
... ---&gt; a
..a ---&gt; s
.as ---&gt; w
asw ---&gt; i
swi ---&gt; n
win ---&gt; .
... ---&gt; h
..h ---&gt; i
.hi ---&gt; s
his ---&gt; h
ish ---&gt; a
sha ---&gt; m
ham ---&gt; .
... ---&gt; s
..s ---&gt; a
.sa ---&gt; k
sak ---&gt; a
aka ---&gt; .
... ---&gt; c
..c ---&gt; h
.ch ---&gt; u
chu ---&gt; n
hun ---&gt; n
unn ---&gt; u
nnu ---&gt; .
... ---&gt; k
..k ---&gt; h
.kh ---&gt; a
kha ---&gt; j
haj ---&gt; a
aja ---&gt; n
jan ---&gt; .
... ---&gt; c
..c ---&gt; h
.ch ---&gt; n
chn ---&gt; d
hnd ---&gt; a
nda ---&gt; .
... ---&gt; s
..s ---&gt; a
.sa ---&gt; v
sav ---&gt; i
avi ---&gt; a
via ---&gt; .
... ---&gt; m
..m ---&gt; o
.mo ---&gt; h
moh ---&gt; n
ohn ---&gt; i
hni ---&gt; .
... ---&gt; n
..n ---&gt; a
.na ---&gt; z
naz ---&gt; m
azm ---&gt; a
zma ---&gt; .
... ---&gt; m
..m ---&gt; a
.ma ---&gt; n
man ---&gt; d
and ---&gt; i
ndi ---&gt; .
... ---&gt; r
..r ---&gt; a
.ra ---&gt; j
raj ---&gt; a
aja ---&gt; n
jan ---&gt; t
ant ---&gt; i
nti ---&gt; .
... ---&gt; g
..g ---&gt; a
.ga ---&gt; u
gau ---&gt; t
aut ---&gt; a
uta ---&gt; m
tam ---&gt; .
... ---&gt; h
..h ---&gt; a
.ha ---&gt; j
haj ---&gt; r
ajr ---&gt; a
jra ---&gt; t
rat ---&gt; i
ati ---&gt; .
... ---&gt; m
..m ---&gt; e
.me ---&gt; e
mee ---&gt; n
een ---&gt; a
ena ---&gt; t
nat ---&gt; .
... ---&gt; a
..a ---&gt; a
.aa ---&gt; m
aam ---&gt; i
ami ---&gt; n
min ---&gt; .
... ---&gt; p
..p ---&gt; a
.pa ---&gt; w
paw ---&gt; n
awn ---&gt; a
wna ---&gt; .
... ---&gt; b
..b ---&gt; a
.ba ---&gt; b
bab ---&gt; u
abu ---&gt; d
bud ---&gt; d
udd ---&gt; e
dde ---&gt; n
den ---&gt; .
... ---&gt; k
..k ---&gt; a
.ka ---&gt; r
kar ---&gt; i
ari ---&gt; m
rim ---&gt; a
ima ---&gt; .
... ---&gt; v
..v ---&gt; a
.va ---&gt; k
vak ---&gt; i
aki ---&gt; l
kil ---&gt; a
ila ---&gt; .
... ---&gt; s
..s ---&gt; a
.sa ---&gt; l
sal ---&gt; e
ale ---&gt; s
les ---&gt; h
esh ---&gt; .
... ---&gt; m
..m ---&gt; u
.mu ---&gt; k
muk ---&gt; h
ukh ---&gt; t
kht ---&gt; y
hty ---&gt; a
tya ---&gt; r
yar ---&gt; .
... ---&gt; s
..s ---&gt; h
.sh ---&gt; e
she ---&gt; l
hel ---&gt; e
ele ---&gt; s
les ---&gt; h
esh ---&gt; .
... ---&gt; p
..p ---&gt; r
.pr ---&gt; e
pre ---&gt; e
ree ---&gt; n
een ---&gt; a
ena ---&gt; .
... ---&gt; k
..k ---&gt; a
.ka ---&gt; s
kas ---&gt; i
asi ---&gt; s
sis ---&gt; h
ish ---&gt; .
... ---&gt; r
..r ---&gt; o
.ro ---&gt; j
roj ---&gt; m
ojm ---&gt; e
jme ---&gt; n
men ---&gt; .
... ---&gt; r
..r ---&gt; a
.ra ---&gt; m
ram ---&gt; v
amv ---&gt; a
mva ---&gt; t
vat ---&gt; i
ati ---&gt; .
... ---&gt; c
..c ---&gt; a
.ca ---&gt; p
cap ---&gt; t
apt ---&gt; a
pta ---&gt; i
tai ---&gt; n
ain ---&gt; .
... ---&gt; m
..m ---&gt; a
.ma ---&gt; n
man ---&gt; a
ana ---&gt; k
nak ---&gt; .
... ---&gt; s
..s ---&gt; a
.sa ---&gt; n
san ---&gt; a
ana ---&gt; n
nan ---&gt; d
and ---&gt; .
... ---&gt; h
..h ---&gt; a
.ha ---&gt; r
har ---&gt; b
arb ---&gt; i
rbi ---&gt; r
bir ---&gt; .
... ---&gt; n
..n ---&gt; e
.ne ---&gt; e
nee ---&gt; s
ees ---&gt; h
esh ---&gt; u
shu ---&gt; .
... ---&gt; s
..s ---&gt; h
.sh ---&gt; i
shi ---&gt; l
hil ---&gt; p
ilp ---&gt; a
lpa ---&gt; .
... ---&gt; p
..p ---&gt; o
.po ---&gt; o
poo ---&gt; j
ooj ---&gt; a
oja ---&gt; .
... ---&gt; d
..d ---&gt; u
.du ---&gt; r
dur ---&gt; g
urg ---&gt; a
rga ---&gt; s
gas ---&gt; h
ash ---&gt; .
... ---&gt; s
..s ---&gt; i
.si ---&gt; r
sir ---&gt; a
ira ---&gt; j
raj ---&gt; .
... ---&gt; r
..r ---&gt; e
.re ---&gt; k
rek ---&gt; h
ekh ---&gt; a
kha ---&gt; .
... ---&gt; a
..a ---&gt; s
.as ---&gt; m
asm ---&gt; a
sma ---&gt; t
mat ---&gt; .
... ---&gt; m
..m ---&gt; a
.ma ---&gt; y
may ---&gt; u
ayu ---&gt; r
yur ---&gt; .
... ---&gt; s
..s ---&gt; u
.su ---&gt; b
sub ---&gt; h
ubh ---&gt; o
bho ---&gt; d
hod ---&gt; .
... ---&gt; w
..w ---&gt; a
.wa ---&gt; z
waz ---&gt; i
azi ---&gt; r
zir ---&gt; .
... ---&gt; m
..m ---&gt; a
.ma ---&gt; n
man ---&gt; v
anv ---&gt; e
nve ---&gt; n
ven ---&gt; d
end ---&gt; r
ndr ---&gt; a
dra ---&gt; .
... ---&gt; d
..d ---&gt; h
.dh ---&gt; e
dhe ---&gt; e
hee ---&gt; r
eer ---&gt; a
era ---&gt; j
raj ---&gt; .
... ---&gt; r
..r ---&gt; a
.ra ---&gt; j
raj ---&gt; i
aji ---&gt; d
jid ---&gt; e
ide ---&gt; r
der ---&gt; .
... ---&gt; k
..k ---&gt; a
.ka ---&gt; l
kal ---&gt; a
ala ---&gt; p
lap ---&gt; .
... ---&gt; g
..g ---&gt; u
.gu ---&gt; r
gur ---&gt; u
uru ---&gt; p
rup ---&gt; r
upr ---&gt; e
pre ---&gt; e
ree ---&gt; t
eet ---&gt; .
... ---&gt; s
..s ---&gt; r
.sr ---&gt; i
sri ---&gt; s
ris ---&gt; h
ish ---&gt; t
sht ---&gt; y
hty ---&gt; .
... ---&gt; a
..a ---&gt; k
.ak ---&gt; s
aks ---&gt; h
ksh ---&gt; p
shp ---&gt; a
hpa ---&gt; a
paa ---&gt; t
aat ---&gt; .
... ---&gt; l
..l ---&gt; a
.la ---&gt; x
lax ---&gt; m
axm ---&gt; i
xmi ---&gt; .
... ---&gt; o
..o ---&gt; m
.om ---&gt; p
omp ---&gt; e
mpe ---&gt; r
per ---&gt; k
erk ---&gt; a
rka ---&gt; s
kas ---&gt; h
ash ---&gt; .
... ---&gt; m
..m ---&gt; a
.ma ---&gt; n
man ---&gt; p
anp ---&gt; h
nph ---&gt; o
pho ---&gt; o
hoo ---&gt; l
ool ---&gt; .
... ---&gt; s
..s ---&gt; h
.sh ---&gt; a
sha ---&gt; h
hah ---&gt; z
ahz ---&gt; a
hza ---&gt; d
zad ---&gt; .
... ---&gt; r
..r ---&gt; a
.ra ---&gt; m
ram ---&gt; l
aml ---&gt; i
mli ---&gt; .
... ---&gt; f
..f ---&gt; a
.fa ---&gt; r
far ---&gt; h
arh ---&gt; a
rha ---&gt; n
han ---&gt; .
... ---&gt; h
..h ---&gt; a
.ha ---&gt; g
hag ---&gt; a
aga ---&gt; m
gam ---&gt; i
ami ---&gt; .
... ---&gt; k
..k ---&gt; a
.ka ---&gt; l
kal ---&gt; p
alp ---&gt; a
lpa ---&gt; n
pan ---&gt; a
ana ---&gt; .
... ---&gt; p
..p ---&gt; u
.pu ---&gt; j
puj ---&gt; j
ujj ---&gt; a
jja ---&gt; .
... ---&gt; u
..u ---&gt; t
.ut ---&gt; k
utk ---&gt; a
tka ---&gt; r
kar ---&gt; s
ars ---&gt; h
rsh ---&gt; .
... ---&gt; c
..c ---&gt; h
.ch ---&gt; i
chi ---&gt; r
hir ---&gt; a
ira ---&gt; g
rag ---&gt; .
... ---&gt; k
..k ---&gt; u
.ku ---&gt; s
kus ---&gt; h
ush ---&gt; a
sha ---&gt; g
hag ---&gt; r
agr ---&gt; a
gra ---&gt; .
... ---&gt; d
..d ---&gt; a
.da ---&gt; y
day ---&gt; a
aya ---&gt; w
yaw ---&gt; a
awa ---&gt; t
wat ---&gt; i
ati ---&gt; .
... ---&gt; k
..k ---&gt; a
.ka ---&gt; y
kay ---&gt; u
ayu ---&gt; m
yum ---&gt; .
... ---&gt; s
..s ---&gt; h
.sh ---&gt; i
shi ---&gt; s
his ---&gt; u
isu ---&gt; p
sup ---&gt; a
upa ---&gt; l
pal ---&gt; .
... ---&gt; s
..s ---&gt; a
.sa ---&gt; h
sah ---&gt; w
ahw ---&gt; a
hwa ---&gt; j
waj ---&gt; .
... ---&gt; n
..n ---&gt; e
.ne ---&gt; e
nee ---&gt; s
ees ---&gt; h
esh ---&gt; a
sha ---&gt; .
... ---&gt; n
..n ---&gt; i
.ni ---&gt; r
nir ---&gt; a
ira ---&gt; n
ran ---&gt; j
anj ---&gt; a
nja ---&gt; n
jan ---&gt; .
... ---&gt; b
..b ---&gt; a
.ba ---&gt; c
bac ---&gt; h
ach ---&gt; h
chh ---&gt; u
hhu ---&gt; .
... ---&gt; f
..f ---&gt; a
.fa ---&gt; u
fau ---&gt; i
aui ---&gt; n
uin ---&gt; a
ina ---&gt; .
... ---&gt; k
..k ---&gt; a
.ka ---&gt; a
kaa ---&gt; m
aam ---&gt; i
ami ---&gt; n
min ---&gt; i
ini ---&gt; .
... ---&gt; v
..v ---&gt; a
.va ---&gt; s
vas ---&gt; a
asa ---&gt; .
... ---&gt; j
..j ---&gt; a
.ja ---&gt; m
jam ---&gt; e
ame ---&gt; e
mee ---&gt; l
eel ---&gt; a
ela ---&gt; .
... ---&gt; m
..m ---&gt; m
.mm ---&gt; t
mmt ---&gt; a
mta ---&gt; .
... ---&gt; d
..d ---&gt; e
.de ---&gt; e
dee ---&gt; p
eep ---&gt; a
epa ---&gt; n
pan ---&gt; s
ans ---&gt; h
nsh ---&gt; u
shu ---&gt; .
... ---&gt; d
..d ---&gt; i
.di ---&gt; p
dip ---&gt; t
ipt ---&gt; i
pti ---&gt; .
... ---&gt; s
..s ---&gt; u
.su ---&gt; k
suk ---&gt; u
uku ---&gt; l
kul ---&gt; .
... ---&gt; v
..v ---&gt; i
.vi ---&gt; p
vip ---&gt; e
ipe ---&gt; n
pen ---&gt; d
end ---&gt; r
ndr ---&gt; a
dra ---&gt; .
... ---&gt; m
..m ---&gt; a
.ma ---&gt; n
man ---&gt; j
anj ---&gt; i
nji ---&gt; t
jit ---&gt; .
... ---&gt; a
..a ---&gt; a
.aa ---&gt; s
aas ---&gt; h
ash ---&gt; i
shi ---&gt; .
... ---&gt; s
..s ---&gt; a
.sa ---&gt; v
sav ---&gt; e
ave ---&gt; t
vet ---&gt; a
eta ---&gt; .
... ---&gt; t
..t ---&gt; i
.ti ---&gt; t
tit ---&gt; u
itu ---&gt; .
... ---&gt; t
..t ---&gt; a
.ta ---&gt; s
tas ---&gt; n
asn ---&gt; i
sni ---&gt; m
nim ---&gt; .
... ---&gt; g
..g ---&gt; u
.gu ---&gt; l
gul ---&gt; s
uls ---&gt; h
lsh ---&gt; t
sht ---&gt; a
hta ---&gt; b
tab ---&gt; .
... ---&gt; a
..a ---&gt; a
.aa ---&gt; f
aaf ---&gt; t
aft ---&gt; a
fta ---&gt; a
taa ---&gt; b
aab ---&gt; .
... ---&gt; l
..l ---&gt; a
.la ---&gt; k
lak ---&gt; s
aks ---&gt; h
ksh ---&gt; y
shy ---&gt; a
hya ---&gt; .
... ---&gt; s
..s ---&gt; a
.sa ---&gt; d
sad ---&gt; r
adr ---&gt; e
dre ---&gt; .
... ---&gt; m
..m ---&gt; a
.ma ---&gt; h
mah ---&gt; l
ahl ---&gt; i
hli ---&gt; k
lik ---&gt; k
ikk ---&gt; a
kka ---&gt; .
... ---&gt; s
..s ---&gt; h
.sh ---&gt; a
sha ---&gt; h
hah ---&gt; n
ahn ---&gt; a
hna ---&gt; w
naw ---&gt; a
awa ---&gt; z
waz ---&gt; .
... ---&gt; a
..a ---&gt; n
.an ---&gt; c
anc ---&gt; h
nch ---&gt; a
cha ---&gt; l
hal ---&gt; .
... ---&gt; k
..k ---&gt; e
.ke ---&gt; s
kes ---&gt; h
esh ---&gt; a
sha ---&gt; n
han ---&gt; t
ant ---&gt; i
nti ---&gt; .
... ---&gt; a
..a ---&gt; m
.am ---&gt; e
ame ---&gt; n
men ---&gt; a
ena ---&gt; .
... ---&gt; b
..b ---&gt; i
.bi ---&gt; n
bin ---&gt; j
inj ---&gt; a
nja ---&gt; .
... ---&gt; g
..g ---&gt; u
.gu ---&gt; t
gut ---&gt; a
uta ---&gt; m
tam ---&gt; .
... ---&gt; a
..a ---&gt; r
.ar ---&gt; u
aru ---&gt; n
run ---&gt; i
uni ---&gt; .
... ---&gt; b
..b ---&gt; a
.ba ---&gt; c
bac ---&gt; c
acc ---&gt; h
cch ---&gt; e
che ---&gt; .
... ---&gt; s
..s ---&gt; i
.si ---&gt; t
sit ---&gt; h
ith ---&gt; a
tha ---&gt; l
hal ---&gt; .
... ---&gt; a
..a ---&gt; b
.ab ---&gt; i
abi ---&gt; d
bid ---&gt; .
... ---&gt; e
..e ---&gt; l
.el ---&gt; i
eli ---&gt; y
liy ---&gt; a
iya ---&gt; s
yas ---&gt; .
... ---&gt; s
..s ---&gt; h
.sh ---&gt; o
sho ---&gt; b
hob ---&gt; h
obh ---&gt; a
bha ---&gt; .
... ---&gt; s
..s ---&gt; u
.su ---&gt; m
sum ---&gt; i
umi ---&gt; t
mit ---&gt; r
itr ---&gt; a
tra ---&gt; .
... ---&gt; d
..d ---&gt; u
.du ---&gt; r
dur ---&gt; g
urg ---&gt; p
rgp ---&gt; a
gpa ---&gt; l
pal ---&gt; .
... ---&gt; m
..m ---&gt; u
.mu ---&gt; n
mun ---&gt; n
unn ---&gt; a
nna ---&gt; w
naw ---&gt; a
awa ---&gt; r
war ---&gt; .
... ---&gt; c
..c ---&gt; h
.ch ---&gt; e
che ---&gt; t
het ---&gt; a
eta ---&gt; n
tan ---&gt; .
... ---&gt; j
..j ---&gt; a
.ja ---&gt; g
jag ---&gt; a
aga ---&gt; n
gan ---&gt; .
... ---&gt; m
..m ---&gt; i
.mi ---&gt; t
mit ---&gt; h
ith ---&gt; u
thu ---&gt; .
... ---&gt; b
..b ---&gt; u
.bu ---&gt; d
bud ---&gt; h
udh ---&gt; o
dho ---&gt; .
... ---&gt; a
..a ---&gt; s
.as ---&gt; h
ash ---&gt; r
shr ---&gt; a
hra ---&gt; b
rab ---&gt; i
abi ---&gt; .
... ---&gt; r
..r ---&gt; e
.re ---&gt; s
res ---&gt; m
esm ---&gt; i
smi ---&gt; .
... ---&gt; k
..k ---&gt; u
.ku ---&gt; p
kup ---&gt; a
upa ---&gt; r
par ---&gt; t
art ---&gt; h
rth ---&gt; .
... ---&gt; s
..s ---&gt; o
.so ---&gt; b
sob ---&gt; h
obh ---&gt; a
bha ---&gt; .
... ---&gt; p
..p ---&gt; a
.pa ---&gt; t
pat ---&gt; a
ata ---&gt; v
tav ---&gt; .
... ---&gt; s
..s ---&gt; a
.sa ---&gt; l
sal ---&gt; u
alu ---&gt; p
lup ---&gt; a
upa ---&gt; .
... ---&gt; n
..n ---&gt; e
.ne ---&gt; p
nep ---&gt; a
epa ---&gt; l
pal ---&gt; .
... ---&gt; p
..p ---&gt; r
.pr ---&gt; e
pre ---&gt; y
rey ---&gt; a
eya ---&gt; n
yan ---&gt; k
ank ---&gt; .
... ---&gt; a
..a ---&gt; n
.an ---&gt; z
anz ---&gt; u
nzu ---&gt; m
zum ---&gt; .
... ---&gt; r
..r ---&gt; a
.ra ---&gt; j
raj ---&gt; n
ajn ---&gt; e
jne ---&gt; e
nee ---&gt; s
ees ---&gt; h
esh ---&gt; .
... ---&gt; b
..b ---&gt; h
.bh ---&gt; i
bhi ---&gt; m
him ---&gt; s
ims ---&gt; e
mse ---&gt; n
sen ---&gt; .
... ---&gt; b
..b ---&gt; h
.bh ---&gt; a
bha ---&gt; g
hag ---&gt; w
agw ---&gt; a
gwa ---&gt; n
wan ---&gt; a
ana ---&gt; .
... ---&gt; p
..p ---&gt; a
.pa ---&gt; m
pam ---&gt; m
amm ---&gt; i
mmi ---&gt; .
... ---&gt; d
..d ---&gt; h
.dh ---&gt; a
dha ---&gt; r
har ---&gt; m
arm ---&gt; r
rmr ---&gt; a
mra ---&gt; j
raj ---&gt; .
... ---&gt; m
..m ---&gt; a
.ma ---&gt; n
man ---&gt; u
anu ---&gt; .
... ---&gt; j
..j ---&gt; a
.ja ---&gt; s
jas ---&gt; k
ask ---&gt; a
ska ---&gt; r
kar ---&gt; a
ara ---&gt; n
ran ---&gt; .
... ---&gt; f
..f ---&gt; r
.fr ---&gt; r
frr ---&gt; a
rra ---&gt; .
... ---&gt; p
..p ---&gt; i
.pi ---&gt; n
pin ---&gt; k
ink ---&gt; i
nki ---&gt; .
... ---&gt; g
..g ---&gt; i
.gi ---&gt; r
gir ---&gt; i
iri ---&gt; s
ris ---&gt; h
ish ---&gt; i
shi ---&gt; .
... ---&gt; s
..s ---&gt; h
.sh ---&gt; a
sha ---&gt; i
hai ---&gt; l
ail ---&gt; a
ila ---&gt; s
las ---&gt; h
ash ---&gt; .
... ---&gt; a
..a ---&gt; b
.ab ---&gt; d
abd ---&gt; u
bdu ---&gt; l
dul ---&gt; .
... ---&gt; n
..n ---&gt; i
.ni ---&gt; y
niy ---&gt; a
iya ---&gt; a
yaa ---&gt; z
aaz ---&gt; .
... ---&gt; s
..s ---&gt; h
.sh ---&gt; a
sha ---&gt; l
hal ---&gt; e
ale ---&gt; s
les ---&gt; h
esh ---&gt; .
... ---&gt; s
..s ---&gt; o
.so ---&gt; o
soo ---&gt; r
oor ---&gt; a
ora ---&gt; j
raj ---&gt; .
... ---&gt; s
..s ---&gt; h
.sh ---&gt; o
sho ---&gt; h
hoh ---&gt; a
oha ---&gt; n
han ---&gt; .
... ---&gt; a
..a ---&gt; r
.ar ---&gt; v
arv ---&gt; i
rvi ---&gt; n
vin ---&gt; d
ind ---&gt; .
... ---&gt; m
..m ---&gt; i
.mi ---&gt; t
mit ---&gt; t
itt ---&gt; h
tth ---&gt; u
thu ---&gt; .
... ---&gt; k
..k ---&gt; a
.ka ---&gt; w
kaw ---&gt; a
awa ---&gt; l
wal ---&gt; j
alj ---&gt; e
lje ---&gt; e
jee ---&gt; t
eet ---&gt; .
... ---&gt; s
..s ---&gt; a
.sa ---&gt; i
sai ---&gt; z
aiz ---&gt; a
iza ---&gt; d
zad ---&gt; .
... ---&gt; s
..s ---&gt; i
.si ---&gt; d
sid ---&gt; h
idh ---&gt; r
dhr ---&gt; a
hra ---&gt; t
rat ---&gt; h
ath ---&gt; .
... ---&gt; c
..c ---&gt; h
.ch ---&gt; a
cha ---&gt; n
han ---&gt; p
anp ---&gt; a
npa ---&gt; .
... ---&gt; g
..g ---&gt; a
.ga ---&gt; j
gaj ---&gt; l
ajl ---&gt; a
jla ---&gt; .
... ---&gt; n
..n ---&gt; o
.no ---&gt; o
noo ---&gt; r
oor ---&gt; a
ora ---&gt; l
ral ---&gt; h
alh ---&gt; a
lha ---&gt; .
... ---&gt; r
..r ---&gt; a
.ra ---&gt; m
ram ---&gt; n
amn ---&gt; i
mni ---&gt; w
niw ---&gt; a
iwa ---&gt; s
was ---&gt; j
asj ---&gt; .
... ---&gt; v
..v ---&gt; a
.va ---&gt; i
vai ---&gt; b
aib ---&gt; a
iba ---&gt; h
bah ---&gt; v
ahv ---&gt; .
... ---&gt; s
..s ---&gt; u
.su ---&gt; f
suf ---&gt; i
ufi ---&gt; y
fiy ---&gt; a
iya ---&gt; .
... ---&gt; k
..k ---&gt; l
.kl ---&gt; u
klu ---&gt; .
... ---&gt; m
..m ---&gt; a
.ma ---&gt; i
mai ---&gt; r
air ---&gt; i
iri ---&gt; .
... ---&gt; t
..t ---&gt; u
.tu ---&gt; b
tub ---&gt; a
uba ---&gt; .
... ---&gt; s
..s ---&gt; a
.sa ---&gt; n
san ---&gt; j
anj ---&gt; i
nji ---&gt; v
jiv ---&gt; .
... ---&gt; z
..z ---&gt; a
.za ---&gt; m
zam ---&gt; e
ame ---&gt; e
mee ---&gt; r
eer ---&gt; .
... ---&gt; v
..v ---&gt; i
.vi ---&gt; c
vic ---&gt; k
ick ---&gt; e
cke ---&gt; y
key ---&gt; .
... ---&gt; m
..m ---&gt; a
.ma ---&gt; m
mam ---&gt; i
ami ---&gt; t
mit ---&gt; a
ita ---&gt; .
... ---&gt; b
..b ---&gt; o
.bo ---&gt; h
boh ---&gt; a
oha ---&gt; t
hat ---&gt; i
ati ---&gt; .
... ---&gt; s
..s ---&gt; h
.sh ---&gt; i
shi ---&gt; v
hiv ---&gt; .
... ---&gt; s
..s ---&gt; u
.su ---&gt; s
sus ---&gt; m
usm ---&gt; a
sma ---&gt; t
mat ---&gt; a
ata ---&gt; .
... ---&gt; l
..l ---&gt; a
.la ---&gt; x
lax ---&gt; a
axa ---&gt; m
xam ---&gt; i
ami ---&gt; .
... ---&gt; o
..o ---&gt; m
.om ---&gt; p
omp ---&gt; r
mpr ---&gt; k
prk ---&gt; e
rke ---&gt; s
kes ---&gt; h
esh ---&gt; .
... ---&gt; k
..k ---&gt; r
.kr ---&gt; i
kri ---&gt; t
rit ---&gt; i
iti ---&gt; .
... ---&gt; l
..l ---&gt; a
.la ---&gt; s
las ---&gt; k
ask ---&gt; s
sks ---&gt; h
ksh ---&gt; i
shi ---&gt; t
hit ---&gt; a
ita ---&gt; .
... ---&gt; d
..d ---&gt; h
.dh ---&gt; a
dha ---&gt; m
ham ---&gt; e
ame ---&gt; n
men ---&gt; d
end ---&gt; e
nde ---&gt; r
der ---&gt; .
... ---&gt; j
..j ---&gt; a
.ja ---&gt; r
jar ---&gt; i
ari ---&gt; n
rin ---&gt; a
ina ---&gt; .
... ---&gt; s
..s ---&gt; e
.se ---&gt; e
see ---&gt; v
eev ---&gt; a
eva ---&gt; .
... ---&gt; t
..t ---&gt; u
.tu ---&gt; l
tul ---&gt; s
uls ---&gt; h
lsh ---&gt; a
sha ---&gt; .
... ---&gt; m
..m ---&gt; a
.ma ---&gt; h
mah ---&gt; i
ahi ---&gt; m
him ---&gt; a
ima ---&gt; .
... ---&gt; m
..m ---&gt; o
.mo ---&gt; h
moh ---&gt; i
ohi ---&gt; n
hin ---&gt; i
ini ---&gt; .
... ---&gt; p
..p ---&gt; a
.pa ---&gt; l
pal ---&gt; l
all ---&gt; a
lla ---&gt; w
law ---&gt; i
awi ---&gt; .
... ---&gt; s
..s ---&gt; a
.sa ---&gt; k
sak ---&gt; i
aki ---&gt; b
kib ---&gt; .
... ---&gt; s
..s ---&gt; o
.so ---&gt; b
sob ---&gt; a
oba ---&gt; .
... ---&gt; j
..j ---&gt; e
.je ---&gt; b
jeb ---&gt; i
ebi ---&gt; .
... ---&gt; d
..d ---&gt; e
.de ---&gt; n
den ---&gt; e
ene ---&gt; s
nes ---&gt; h
esh ---&gt; .
... ---&gt; s
..s ---&gt; a
.sa ---&gt; n
san ---&gt; i
ani ---&gt; t
nit ---&gt; a
ita ---&gt; .
... ---&gt; m
..m ---&gt; a
.ma ---&gt; n
man ---&gt; w
anw ---&gt; i
nwi ---&gt; .
... ---&gt; i
..i ---&gt; s
.is ---&gt; t
ist ---&gt; k
stk ---&gt; h
tkh ---&gt; a
kha ---&gt; r
har ---&gt; .
... ---&gt; r
..r ---&gt; i
.ri ---&gt; n
rin ---&gt; k
ink ---&gt; a
nka ---&gt; .
... ---&gt; p
..p ---&gt; r
.pr ---&gt; a
pra ---&gt; b
rab ---&gt; h
abh ---&gt; i
bhi ---&gt; l
hil ---&gt; a
ila ---&gt; .
... ---&gt; s
..s ---&gt; h
.sh ---&gt; i
shi ---&gt; e
hie ---&gt; n
ien ---&gt; a
ena ---&gt; .
... ---&gt; b
..b ---&gt; a
.ba ---&gt; j
baj ---&gt; r
ajr ---&gt; a
jra ---&gt; n
ran ---&gt; g
ang ---&gt; i
ngi ---&gt; .
... ---&gt; a
..a ---&gt; l
.al ---&gt; e
ale ---&gt; m
lem ---&gt; a
ema ---&gt; .
... ---&gt; g
..g ---&gt; a
.ga ---&gt; n
gan ---&gt; e
ane ---&gt; s
nes ---&gt; h
esh ---&gt; i
shi ---&gt; .
... ---&gt; g
..g ---&gt; a
.ga ---&gt; j
gaj ---&gt; e
aje ---&gt; n
jen ---&gt; d
end ---&gt; e
nde ---&gt; r
der ---&gt; .
... ---&gt; r
..r ---&gt; a
.ra ---&gt; j
raj ---&gt; e
aje ---&gt; n
jen ---&gt; d
end ---&gt; e
nde ---&gt; r
der ---&gt; .
... ---&gt; z
..z ---&gt; a
.za ---&gt; n
zan ---&gt; m
anm ---&gt; i
nmi ---&gt; .
... ---&gt; b
..b ---&gt; h
.bh ---&gt; u
bhu ---&gt; d
hud ---&gt; h
udh ---&gt; i
dhi ---&gt; .
... ---&gt; m
..m ---&gt; e
.me ---&gt; g
meg ---&gt; h
egh ---&gt; a
gha ---&gt; n
han ---&gt; a
ana ---&gt; t
nat ---&gt; h
ath ---&gt; .
... ---&gt; b
..b ---&gt; i
.bi ---&gt; m
bim ---&gt; l
iml ---&gt; e
mle ---&gt; s
les ---&gt; h
esh ---&gt; .
... ---&gt; r
..r ---&gt; o
.ro ---&gt; s
ros ---&gt; i
osi ---&gt; n
sin ---&gt; a
ina ---&gt; .
... ---&gt; s
..s ---&gt; a
.sa ---&gt; w
saw ---&gt; a
awa ---&gt; n
wan ---&gt; a
ana ---&gt; .
... ---&gt; r
..r ---&gt; a
.ra ---&gt; m
ram ---&gt; j
amj ---&gt; a
mja ---&gt; n
jan ---&gt; a
ana ---&gt; m
nam ---&gt; .
... ---&gt; s
..s ---&gt; u
.su ---&gt; r
sur ---&gt; a
ura ---&gt; j
raj ---&gt; a
aja ---&gt; .
... ---&gt; f
..f ---&gt; u
.fu ---&gt; r
fur ---&gt; k
urk ---&gt; a
rka ---&gt; n
kan ---&gt; .
... ---&gt; h
..h ---&gt; a
.ha ---&gt; n
han ---&gt; u
anu ---&gt; m
num ---&gt; a
uma ---&gt; n
man ---&gt; .
... ---&gt; r
..r ---&gt; u
.ru ---&gt; p
rup ---&gt; e
upe ---&gt; n
pen ---&gt; d
end ---&gt; r
ndr ---&gt; a
dra ---&gt; .
... ---&gt; i
..i ---&gt; s
.is ---&gt; m
ism ---&gt; a
sma ---&gt; l
mal ---&gt; i
ali ---&gt; y
liy ---&gt; e
iye ---&gt; .
... ---&gt; r
..r ---&gt; i
.ri ---&gt; c
ric ---&gt; h
ich ---&gt; a
cha ---&gt; .
... ---&gt; a
..a ---&gt; r
.ar ---&gt; i
ari ---&gt; f
rif ---&gt; .
... ---&gt; a
..a ---&gt; k
.ak ---&gt; k
akk ---&gt; a
kka ---&gt; s
kas ---&gt; h
ash ---&gt; .
... ---&gt; c
..c ---&gt; h
.ch ---&gt; a
cha ---&gt; n
han ---&gt; c
anc ---&gt; h
nch ---&gt; a
cha ---&gt; l
hal ---&gt; .
... ---&gt; m
..m ---&gt; u
.mu ---&gt; n
mun ---&gt; n
unn ---&gt; a
nna ---&gt; .
... ---&gt; a
..a ---&gt; m
.am ---&gt; r
amr ---&gt; i
mri ---&gt; t
rit ---&gt; .
... ---&gt; r
..r ---&gt; a
.ra ---&gt; m
ram ---&gt; s
ams ---&gt; u
msu ---&gt; r
sur ---&gt; a
ura ---&gt; t
rat ---&gt; .
... ---&gt; j
..j ---&gt; a
.ja ---&gt; m
jam ---&gt; a
ama ---&gt; d
mad ---&gt; .
... ---&gt; m
..m ---&gt; a
.ma ---&gt; n
man ---&gt; e
ane ---&gt; s
nes ---&gt; h
esh ---&gt; .
... ---&gt; a
..a ---&gt; n
.an ---&gt; k
ank ---&gt; i
nki ---&gt; t
kit ---&gt; a
ita ---&gt; .
... ---&gt; d
..d ---&gt; h
.dh ---&gt; a
dha ---&gt; r
har ---&gt; a
ara ---&gt; m
ram ---&gt; .
... ---&gt; u
..u ---&gt; p
.up ---&gt; a
upa ---&gt; s
pas ---&gt; a
asa ---&gt; n
san ---&gt; a
ana ---&gt; .
... ---&gt; p
..p ---&gt; a
.pa ---&gt; n
pan ---&gt; n
ann ---&gt; u
nnu ---&gt; .
... ---&gt; a
..a ---&gt; k
.ak ---&gt; h
akh ---&gt; i
khi ---&gt; l
hil ---&gt; .
... ---&gt; s
..s ---&gt; h
.sh ---&gt; u
shu ---&gt; s
hus ---&gt; h
ush ---&gt; i
shi ---&gt; l
hil ---&gt; .
... ---&gt; s
..s ---&gt; a
.sa ---&gt; k
sak ---&gt; i
aki ---&gt; r
kir ---&gt; a
ira ---&gt; n
ran ---&gt; .
... ---&gt; t
..t ---&gt; r
.tr ---&gt; i
tri ---&gt; p
rip ---&gt; u
ipu ---&gt; r
pur ---&gt; a
ura ---&gt; r
rar ---&gt; i
ari ---&gt; .
... ---&gt; j
..j ---&gt; e
.je ---&gt; e
jee ---&gt; v
eev ---&gt; a
eva ---&gt; n
van ---&gt; .
... ---&gt; r
..r ---&gt; o
.ro ---&gt; s
ros ---&gt; h
osh ---&gt; a
sha ---&gt; n
han ---&gt; a
ana ---&gt; r
nar ---&gt; a
ara ---&gt; .
... ---&gt; a
..a ---&gt; r
.ar ---&gt; s
ars ---&gt; h
rsh ---&gt; .
... ---&gt; b
..b ---&gt; h
.bh ---&gt; u
bhu ---&gt; r
hur ---&gt; e
ure ---&gt; .
... ---&gt; d
..d ---&gt; e
.de ---&gt; e
dee ---&gt; p
eep ---&gt; e
epe ---&gt; n
pen ---&gt; d
end ---&gt; e
nde ---&gt; r
der ---&gt; .
... ---&gt; s
..s ---&gt; o
.so ---&gt; h
soh ---&gt; i
ohi ---&gt; l
hil ---&gt; .
... ---&gt; d
..d ---&gt; a
.da ---&gt; v
dav ---&gt; i
avi ---&gt; n
vin ---&gt; d
ind ---&gt; e
nde ---&gt; r
der ---&gt; .
... ---&gt; j
..j ---&gt; a
.ja ---&gt; s
jas ---&gt; o
aso ---&gt; d
sod ---&gt; a
oda ---&gt; .
... ---&gt; h
..h ---&gt; a
.ha ---&gt; m
ham ---&gt; i
ami ---&gt; d
mid ---&gt; a
ida ---&gt; .
... ---&gt; s
..s ---&gt; o
.so ---&gt; n
son ---&gt; y
ony ---&gt; i
nyi ---&gt; .
... ---&gt; d
..d ---&gt; y
.dy ---&gt; a
dya ---&gt; .
... ---&gt; s
..s ---&gt; u
.su ---&gt; n
sun ---&gt; a
una ---&gt; r
nar ---&gt; k
ark ---&gt; a
rka ---&gt; l
kal ---&gt; i
ali ---&gt; .
... ---&gt; s
..s ---&gt; h
.sh ---&gt; a
sha ---&gt; i
hai ---&gt; l
ail ---&gt; j
ilj ---&gt; a
lja ---&gt; .
... ---&gt; a
..a ---&gt; s
.as ---&gt; h
ash ---&gt; a
sha ---&gt; r
har ---&gt; a
ara ---&gt; n
ran ---&gt; i
ani ---&gt; .
... ---&gt; r
..r ---&gt; a
.ra ---&gt; n
ran ---&gt; n
ann ---&gt; i
nni ---&gt; .
... ---&gt; h
..h ---&gt; u
.hu ---&gt; s
hus ---&gt; n
usn ---&gt; o
sno ---&gt; .
... ---&gt; r
..r ---&gt; i
.ri ---&gt; y
riy ---&gt; a
iya ---&gt; j
yaj ---&gt; u
aju ---&gt; l
jul ---&gt; .
... ---&gt; k
..k ---&gt; a
.ka ---&gt; n
kan ---&gt; h
anh ---&gt; a
nha ---&gt; i
hai ---&gt; y
aiy ---&gt; a
iya ---&gt; .
... ---&gt; n
..n ---&gt; a
.na ---&gt; v
nav ---&gt; i
avi ---&gt; n
vin ---&gt; .
... ---&gt; s
..s ---&gt; o
.so ---&gt; n
son ---&gt; a
ona ---&gt; m
nam ---&gt; .
... ---&gt; r
..r ---&gt; a
.ra ---&gt; m
ram ---&gt; a
ama ---&gt; v
mav ---&gt; t
avt ---&gt; a
vta ---&gt; r
tar ---&gt; .
... ---&gt; m
..m ---&gt; i
.mi ---&gt; r
mir ---&gt; a
ira ---&gt; .
... ---&gt; m
..m ---&gt; a
.ma ---&gt; d
mad ---&gt; h
adh ---&gt; o
dho ---&gt; .
... ---&gt; j
..j ---&gt; a
.ja ---&gt; g
jag ---&gt; n
agn ---&gt; a
gna ---&gt; t
nat ---&gt; h
ath ---&gt; .
... ---&gt; v
..v ---&gt; i
.vi ---&gt; s
vis ---&gt; h
ish ---&gt; v
shv ---&gt; a
hva ---&gt; s
vas ---&gt; h
ash ---&gt; .
... ---&gt; c
..c ---&gt; h
.ch ---&gt; h
chh ---&gt; a
hha ---&gt; n
han ---&gt; o
ano ---&gt; .
... ---&gt; t
..t ---&gt; a
.ta ---&gt; j
taj ---&gt; r
ajr ---&gt; a
jra ---&gt; n
ran ---&gt; i
ani ---&gt; .
... ---&gt; s
..s ---&gt; h
.sh ---&gt; a
sha ---&gt; s
has ---&gt; h
ash ---&gt; w
shw ---&gt; a
hwa ---&gt; t
wat ---&gt; .
... ---&gt; a
..a ---&gt; a
.aa ---&gt; m
aam ---&gt; o
amo ---&gt; s
mos ---&gt; h
osh ---&gt; .
... ---&gt; m
..m ---&gt; o
.mo ---&gt; r
mor ---&gt; k
ork ---&gt; i
rki ---&gt; .
... ---&gt; a
..a ---&gt; n
.an ---&gt; s
ans ---&gt; u
nsu ---&gt; l
sul ---&gt; .
... ---&gt; i
..i ---&gt; j
.ij ---&gt; h
ijh ---&gt; a
jha ---&gt; r
har ---&gt; .
... ---&gt; s
..s ---&gt; t
.st ---&gt; e
ste ---&gt; p
tep ---&gt; h
eph ---&gt; e
phe ---&gt; n
hen ---&gt; .
... ---&gt; k
..k ---&gt; a
.ka ---&gt; j
kaj ---&gt; o
ajo ---&gt; l
jol ---&gt; .
... ---&gt; a
..a ---&gt; k
.ak ---&gt; s
aks ---&gt; h
ksh ---&gt; a
sha ---&gt; t
hat ---&gt; .
... ---&gt; r
..r ---&gt; a
.ra ---&gt; v
rav ---&gt; i
avi ---&gt; n
vin ---&gt; d
ind ---&gt; a
nda ---&gt; r
dar ---&gt; .
... ---&gt; s
..s ---&gt; h
.sh ---&gt; a
sha ---&gt; k
hak ---&gt; u
aku ---&gt; n
kun ---&gt; .
... ---&gt; m
..m ---&gt; a
.ma ---&gt; k
mak ---&gt; b
akb ---&gt; u
kbu ---&gt; l
bul ---&gt; .
... ---&gt; d
..d ---&gt; e
.de ---&gt; v
dev ---&gt; a
eva ---&gt; n
van ---&gt; a
ana ---&gt; n
nan ---&gt; d
and ---&gt; .
... ---&gt; n
..n ---&gt; a
.na ---&gt; d
nad ---&gt; e
ade ---&gt; m
dem ---&gt; .
... ---&gt; b
..b ---&gt; u
.bu ---&gt; n
bun ---&gt; d
und ---&gt; h
ndh ---&gt; u
dhu ---&gt; .
... ---&gt; i
..i ---&gt; n
.in ---&gt; k
ink ---&gt; o
nko ---&gt; o
koo ---&gt; .
... ---&gt; g
..g ---&gt; e
.ge ---&gt; n
gen ---&gt; s
ens ---&gt; i
nsi ---&gt; n
sin ---&gt; g
ing ---&gt; h
ngh ---&gt; .
... ---&gt; r
..r ---&gt; a
.ra ---&gt; h
rah ---&gt; i
ahi ---&gt; m
him ---&gt; u
imu ---&gt; n
mun ---&gt; .
... ---&gt; g
..g ---&gt; a
.ga ---&gt; g
gag ---&gt; a
aga ---&gt; n
gan ---&gt; .
... ---&gt; b
..b ---&gt; a
.ba ---&gt; l
bal ---&gt; r
alr ---&gt; a
lra ---&gt; m
ram ---&gt; .
... ---&gt; k
..k ---&gt; h
.kh ---&gt; a
kha ---&gt; d
had ---&gt; a
ada ---&gt; k
dak ---&gt; .
... ---&gt; m
..m ---&gt; a
.ma ---&gt; n
man ---&gt; b
anb ---&gt; h
nbh ---&gt; a
bha ---&gt; r
har ---&gt; .
... ---&gt; r
..r ---&gt; a
.ra ---&gt; m
ram ---&gt; b
amb ---&gt; i
mbi ---&gt; r
bir ---&gt; .
... ---&gt; n
..n ---&gt; a
.na ---&gt; h
nah ---&gt; i
ahi ---&gt; d
hid ---&gt; .
... ---&gt; i
..i ---&gt; q
.iq ---&gt; b
iqb ---&gt; a
qba ---&gt; l
bal ---&gt; .
... ---&gt; k
..k ---&gt; a
.ka ---&gt; l
kal ---&gt; u
alu ---&gt; s
lus ---&gt; i
usi ---&gt; n
sin ---&gt; g
ing ---&gt; h
ngh ---&gt; .
... ---&gt; j
..j ---&gt; a
.ja ---&gt; l
jal ---&gt; s
als ---&gt; i
lsi ---&gt; n
sin ---&gt; g
ing ---&gt; h
ngh ---&gt; .
... ---&gt; s
..s ---&gt; a
.sa ---&gt; b
sab ---&gt; e
abe ---&gt; n
ben ---&gt; o
eno ---&gt; o
noo ---&gt; r
oor ---&gt; .
... ---&gt; s
..s ---&gt; w
.sw ---&gt; a
swa ---&gt; t
wat ---&gt; r
atr ---&gt; i
tri ---&gt; .
... ---&gt; m
..m ---&gt; i
.mi ---&gt; t
mit ---&gt; n
itn ---&gt; u
tnu ---&gt; .
... ---&gt; s
..s ---&gt; a
.sa ---&gt; n
san ---&gt; j
anj ---&gt; o
njo ---&gt; g
jog ---&gt; t
ogt ---&gt; a
gta ---&gt; .
... ---&gt; j
..j ---&gt; i
.ji ---&gt; s
jis ---&gt; m
ism ---&gt; .
... ---&gt; a
..a ---&gt; s
.as ---&gt; a
asa ---&gt; n
san ---&gt; a
ana ---&gt; .
... ---&gt; f
..f ---&gt; a
.fa ---&gt; t
fat ---&gt; m
atm ---&gt; a
tma ---&gt; .
... ---&gt; f
..f ---&gt; i
.fi ---&gt; r
fir ---&gt; t
irt ---&gt; u
rtu ---&gt; .
... ---&gt; n
..n ---&gt; a
.na ---&gt; j
naj ---&gt; a
aja ---&gt; r
jar ---&gt; a
ara ---&gt; .
... ---&gt; a
..a ---&gt; m
.am ---&gt; i
ami ---&gt; r
mir ---&gt; a
ira ---&gt; k
rak ---&gt; a
aka ---&gt; .
... ---&gt; t
..t ---&gt; a
.ta ---&gt; n
tan ---&gt; i
ani ---&gt; s
nis ---&gt; h
ish ---&gt; a
sha ---&gt; .
... ---&gt; n
..n ---&gt; a
.na ---&gt; v
nav ---&gt; d
avd ---&gt; e
vde ---&gt; e
dee ---&gt; p
eep ---&gt; .
... ---&gt; n
..n ---&gt; a
.na ---&gt; r
nar ---&gt; a
ara ---&gt; n
ran ---&gt; d
and ---&gt; e
nde ---&gt; r
der ---&gt; .
... ---&gt; v
..v ---&gt; e
.ve ---&gt; e
vee ---&gt; n
een ---&gt; i
eni ---&gt; t
nit ---&gt; a
ita ---&gt; .
... ---&gt; n
..n ---&gt; a
.na ---&gt; j
naj ---&gt; n
ajn ---&gt; i
jni ---&gt; .
... ---&gt; i
..i ---&gt; b
.ib ---&gt; r
ibr ---&gt; a
bra ---&gt; h
rah ---&gt; i
ahi ---&gt; m
him ---&gt; .
... ---&gt; s
..s ---&gt; h
.sh ---&gt; e
she ---&gt; n
hen ---&gt; a
ena ---&gt; z
naz ---&gt; .
... ---&gt; r
..r ---&gt; a
.ra ---&gt; j
raj ---&gt; k
ajk ---&gt; u
jku ---&gt; m
kum ---&gt; a
uma ---&gt; r
mar ---&gt; .
... ---&gt; s
..s ---&gt; u
.su ---&gt; k
suk ---&gt; h
ukh ---&gt; .
... ---&gt; s
..s ---&gt; u
.su ---&gt; n
sun ---&gt; d
und ---&gt; e
nde ---&gt; r
der ---&gt; .
... ---&gt; a
..a ---&gt; a
.aa ---&gt; l
aal ---&gt; i
ali ---&gt; n
lin ---&gt; a
ina ---&gt; .
... ---&gt; m
..m ---&gt; u
.mu ---&gt; n
mun ---&gt; t
unt ---&gt; a
nta ---&gt; j
taj ---&gt; a
aja ---&gt; r
jar ---&gt; .
... ---&gt; a
..a ---&gt; s
.as ---&gt; u
asu ---&gt; t
sut ---&gt; o
uto ---&gt; s
tos ---&gt; h
osh ---&gt; .
... ---&gt; a
..a ---&gt; n
.an ---&gt; g
ang ---&gt; r
ngr ---&gt; e
gre ---&gt; g
reg ---&gt; .
... ---&gt; n
..n ---&gt; a
.na ---&gt; t
nat ---&gt; t
att ---&gt; h
tth ---&gt; u
thu ---&gt; .
... ---&gt; r
..r ---&gt; a
.ra ---&gt; g
rag ---&gt; h
agh ---&gt; u
ghu ---&gt; .
... ---&gt; m
..m ---&gt; a
.ma ---&gt; i
mai ---&gt; s
ais ---&gt; a
isa ---&gt; n
san ---&gt; .
... ---&gt; p
..p ---&gt; r
.pr ---&gt; i
pri ---&gt; n
rin ---&gt; k
ink ---&gt; a
nka ---&gt; y
kay ---&gt; a
aya ---&gt; .
... ---&gt; a
..a ---&gt; n
.an ---&gt; j
anj ---&gt; a
nja ---&gt; n
jan ---&gt; i
ani ---&gt; .
... ---&gt; p
..p ---&gt; r
.pr ---&gt; a
pra ---&gt; k
rak ---&gt; a
aka ---&gt; s
kas ---&gt; h
ash ---&gt; .
... ---&gt; u
..u ---&gt; m
.um ---&gt; e
ume ---&gt; d
med ---&gt; i
edi ---&gt; .
... ---&gt; d
..d ---&gt; i
.di ---&gt; l
dil ---&gt; s
ils ---&gt; a
lsa ---&gt; d
sad ---&gt; .
... ---&gt; r
..r ---&gt; a
.ra ---&gt; j
raj ---&gt; k
ajk ---&gt; u
jku ---&gt; m
kum ---&gt; a
uma ---&gt; r
mar ---&gt; m
arm ---&gt; .
... ---&gt; s
..s ---&gt; a
.sa ---&gt; r
sar ---&gt; f
arf ---&gt; a
rfa ---&gt; r
far ---&gt; a
ara ---&gt; j
raj ---&gt; .
... ---&gt; s
..s ---&gt; a
.sa ---&gt; p
sap ---&gt; i
api ---&gt; t
pit ---&gt; a
ita ---&gt; .
... ---&gt; p
..p ---&gt; a
.pa ---&gt; p
pap ---&gt; p
app ---&gt; u
ppu ---&gt; .
... ---&gt; s
..s ---&gt; a
.sa ---&gt; k
sak ---&gt; i
aki ---&gt; n
kin ---&gt; a
ina ---&gt; .
... ---&gt; s
..s ---&gt; a
.sa ---&gt; i
sai ---&gt; d
aid ---&gt; u
idu ---&gt; l
dul ---&gt; .
... ---&gt; s
..s ---&gt; u
.su ---&gt; b
sub ---&gt; h
ubh ---&gt; i
bhi ---&gt; y
hiy ---&gt; a
iya ---&gt; .
... ---&gt; y
..y ---&gt; a
.ya ---&gt; s
yas ---&gt; h
ash ---&gt; w
shw ---&gt; a
hwa ---&gt; n
wan ---&gt; t
ant ---&gt; .
... ---&gt; n
..n ---&gt; i
.ni ---&gt; r
nir ---&gt; b
irb ---&gt; h
rbh ---&gt; a
bha ---&gt; y
hay ---&gt; .
... ---&gt; r
..r ---&gt; u
.ru ---&gt; p
rup ---&gt; l
upl ---&gt; a
pla ---&gt; l
lal ---&gt; .
... ---&gt; k
..k ---&gt; h
.kh ---&gt; u
khu ---&gt; s
hus ---&gt; h
ush ---&gt; b
shb ---&gt; a
hba ---&gt; r
bar ---&gt; i
ari ---&gt; .
... ---&gt; j
..j ---&gt; i
.ji ---&gt; m
jim ---&gt; m
imm ---&gt; i
mmi ---&gt; .
... ---&gt; m
..m ---&gt; a
.ma ---&gt; m
mam ---&gt; a
ama ---&gt; t
mat ---&gt; a
ata ---&gt; .
... ---&gt; a
..a ---&gt; a
.aa ---&gt; s
aas ---&gt; h
ash ---&gt; i
shi ---&gt; y
hiy ---&gt; a
iya ---&gt; .
... ---&gt; i
..i ---&gt; s
.is ---&gt; h
ish ---&gt; a
sha ---&gt; r
har ---&gt; a
ara ---&gt; r
rar ---&gt; .
... ---&gt; k
..k ---&gt; e
.ke ---&gt; s
kes ---&gt; h
esh ---&gt; a
sha ---&gt; v
hav ---&gt; .
... ---&gt; p
..p ---&gt; a
.pa ---&gt; r
par ---&gt; i
ari ---&gt; .
... ---&gt; a
..a ---&gt; r
.ar ---&gt; j
arj ---&gt; u
rju ---&gt; n
jun ---&gt; .
... ---&gt; n
..n ---&gt; a
.na ---&gt; m
nam ---&gt; a
ama ---&gt; n
man ---&gt; .
... ---&gt; j
..j ---&gt; a
.ja ---&gt; p
jap ---&gt; n
apn ---&gt; e
pne ---&gt; e
nee ---&gt; t
eet ---&gt; .
... ---&gt; n
..n ---&gt; r
.nr ---&gt; e
nre ---&gt; n
ren ---&gt; d
end ---&gt; r
ndr ---&gt; .
... ---&gt; r
..r ---&gt; a
.ra ---&gt; j
raj ---&gt; w
ajw ---&gt; a
jwa ---&gt; n
wan ---&gt; t
ant ---&gt; i
nti ---&gt; .
... ---&gt; m
..m ---&gt; a
.ma ---&gt; n
man ---&gt; f
anf ---&gt; u
nfu ---&gt; l
ful ---&gt; .
... ---&gt; b
..b ---&gt; a
.ba ---&gt; s
bas ---&gt; a
asa ---&gt; n
san ---&gt; t
ant ---&gt; .
... ---&gt; u
..u ---&gt; m
.um ---&gt; a
uma ---&gt; n
man ---&gt; a
ana ---&gt; t
nat ---&gt; h
ath ---&gt; .
... ---&gt; j
..j ---&gt; h
.jh ---&gt; u
jhu ---&gt; h
huh ---&gt; i
uhi ---&gt; .
... ---&gt; m
..m ---&gt; i
.mi ---&gt; t
mit ---&gt; h
ith ---&gt; a
tha ---&gt; l
hal ---&gt; e
ale ---&gt; s
les ---&gt; h
esh ---&gt; .</code></pre>
</div>
</div>
<div class="cell" data-execution_count="188">
<div class="sourceCode cell-code" id="cb15" style="background: #f1f3f5;"><pre class="sourceCode python code-with-copy"><code class="sourceCode python"><span id="cb15-1">X.shape, X.dtype, Y.shape, Y.dtype</span></code></pre></div>
<div class="cell-output cell-output-display" data-execution_count="188">
<pre><code>(torch.Size([7229, 3]), torch.int64, torch.Size([7229]), torch.int64)</code></pre>
</div>
</div>
<div class="cell" data-execution_count="189">
<div class="sourceCode cell-code" id="cb17" style="background: #f1f3f5;"><pre class="sourceCode python code-with-copy"><code class="sourceCode python"><span id="cb17-1"><span class="co" style="color: #5E5E5E;"># Embedding layer for the context</span></span>
<span id="cb17-2"></span>
<span id="cb17-3">emb_dim <span class="op" style="color: #5E5E5E;">=</span> <span class="dv" style="color: #AD0000;">2</span></span>
<span id="cb17-4">emb <span class="op" style="color: #5E5E5E;">=</span> torch.nn.Embedding(<span class="bu" style="color: null;">len</span>(stoi), emb_dim)</span></code></pre></div>
</div>
<div class="cell" data-execution_count="190">
<div class="sourceCode cell-code" id="cb18" style="background: #f1f3f5;"><pre class="sourceCode python code-with-copy"><code class="sourceCode python"><span id="cb18-1">emb.weight.shape</span></code></pre></div>
<div class="cell-output cell-output-display" data-execution_count="190">
<pre><code>torch.Size([27, 2])</code></pre>
</div>
</div>
<div class="cell" data-execution_count="191">
<div class="sourceCode cell-code" id="cb20" style="background: #f1f3f5;"><pre class="sourceCode python code-with-copy"><code class="sourceCode python"><span id="cb20-1"><span class="co" style="color: #5E5E5E;"># Function to visualize the embedding in 2d space</span></span>
<span id="cb20-2"></span>
<span id="cb20-3"><span class="kw" style="color: #003B4F;">def</span> plot_emb(emb, itos, ax<span class="op" style="color: #5E5E5E;">=</span><span class="va" style="color: #111111;">None</span>):</span>
<span id="cb20-4">    <span class="cf" style="color: #003B4F;">if</span> ax <span class="kw" style="color: #003B4F;">is</span> <span class="va" style="color: #111111;">None</span>:</span>
<span id="cb20-5">        fig, ax <span class="op" style="color: #5E5E5E;">=</span> plt.subplots()</span>
<span id="cb20-6">    <span class="cf" style="color: #003B4F;">for</span> i <span class="kw" style="color: #003B4F;">in</span> <span class="bu" style="color: null;">range</span>(<span class="bu" style="color: null;">len</span>(itos)):</span>
<span id="cb20-7">        x, y <span class="op" style="color: #5E5E5E;">=</span> emb.weight[i].detach().numpy()</span>
<span id="cb20-8">        ax.scatter(x, y, color<span class="op" style="color: #5E5E5E;">=</span><span class="st" style="color: #20794D;">'k'</span>)</span>
<span id="cb20-9">        ax.text(x, y, itos[i])</span>
<span id="cb20-10">    <span class="cf" style="color: #003B4F;">return</span> ax</span>
<span id="cb20-11"></span>
<span id="cb20-12">plot_emb(emb, itos)</span></code></pre></div>
<div class="cell-output cell-output-display" data-execution_count="191">
<pre><code>&lt;AxesSubplot: &gt;</code></pre>
</div>
<div class="cell-output cell-output-display">
<p><img src="https://github.com/nipunbatra/ml2023/notebooks/posts/names_files/figure-html/cell-13-output-2.png" class="img-fluid"></p>
</div>
</div>
<div class="cell" data-execution_count="192">
<div class="sourceCode cell-code" id="cb22" style="background: #f1f3f5;"><pre class="sourceCode python code-with-copy"><code class="sourceCode python"><span id="cb22-1"><span class="kw" style="color: #003B4F;">class</span> NextChar(nn.Module):</span>
<span id="cb22-2">  <span class="kw" style="color: #003B4F;">def</span> <span class="fu" style="color: #4758AB;">__init__</span>(<span class="va" style="color: #111111;">self</span>, block_size, vocab_size, emb_dim, hidden_size):</span>
<span id="cb22-3">    <span class="bu" style="color: null;">super</span>().<span class="fu" style="color: #4758AB;">__init__</span>()</span>
<span id="cb22-4">    <span class="va" style="color: #111111;">self</span>.emb <span class="op" style="color: #5E5E5E;">=</span> nn.Embedding(vocab_size, emb_dim)</span>
<span id="cb22-5">    <span class="va" style="color: #111111;">self</span>.lin1 <span class="op" style="color: #5E5E5E;">=</span> nn.Linear(block_size <span class="op" style="color: #5E5E5E;">*</span> emb_dim, hidden_size)</span>
<span id="cb22-6">    <span class="va" style="color: #111111;">self</span>.lin2 <span class="op" style="color: #5E5E5E;">=</span> nn.Linear(hidden_size, vocab_size)</span>
<span id="cb22-7"></span>
<span id="cb22-8">  <span class="kw" style="color: #003B4F;">def</span> forward(<span class="va" style="color: #111111;">self</span>, x):</span>
<span id="cb22-9">    x <span class="op" style="color: #5E5E5E;">=</span> <span class="va" style="color: #111111;">self</span>.emb(x)</span>
<span id="cb22-10">    x <span class="op" style="color: #5E5E5E;">=</span> x.view(x.shape[<span class="dv" style="color: #AD0000;">0</span>], <span class="op" style="color: #5E5E5E;">-</span><span class="dv" style="color: #AD0000;">1</span>)</span>
<span id="cb22-11">    x <span class="op" style="color: #5E5E5E;">=</span> F.relu(<span class="va" style="color: #111111;">self</span>.lin1(x))</span>
<span id="cb22-12">    x <span class="op" style="color: #5E5E5E;">=</span> <span class="va" style="color: #111111;">self</span>.lin2(x)</span>
<span id="cb22-13">    <span class="cf" style="color: #003B4F;">return</span> x</span>
<span id="cb22-14">    </span></code></pre></div>
</div>
<div class="cell" data-execution_count="201">
<div class="sourceCode cell-code" id="cb23" style="background: #f1f3f5;"><pre class="sourceCode python code-with-copy"><code class="sourceCode python"><span id="cb23-1"><span class="co" style="color: #5E5E5E;"># Generate names from untrained model</span></span>
<span id="cb23-2"></span>
<span id="cb23-3"></span>
<span id="cb23-4">model <span class="op" style="color: #5E5E5E;">=</span> NextChar(block_size, <span class="bu" style="color: null;">len</span>(stoi), emb_dim, <span class="dv" style="color: #AD0000;">50</span>)</span>
<span id="cb23-5"></span>
<span id="cb23-6">g <span class="op" style="color: #5E5E5E;">=</span> torch.Generator()</span>
<span id="cb23-7">g.manual_seed(<span class="dv" style="color: #AD0000;">4000002</span>)</span>
<span id="cb23-8"><span class="kw" style="color: #003B4F;">def</span> generate_name(model, itos, stoi, block_size, max_len<span class="op" style="color: #5E5E5E;">=</span><span class="dv" style="color: #AD0000;">10</span>):</span>
<span id="cb23-9">    context <span class="op" style="color: #5E5E5E;">=</span> [<span class="dv" style="color: #AD0000;">0</span>] <span class="op" style="color: #5E5E5E;">*</span> block_size</span>
<span id="cb23-10">    name <span class="op" style="color: #5E5E5E;">=</span> <span class="st" style="color: #20794D;">''</span></span>
<span id="cb23-11">    <span class="cf" style="color: #003B4F;">for</span> i <span class="kw" style="color: #003B4F;">in</span> <span class="bu" style="color: null;">range</span>(max_len):</span>
<span id="cb23-12">        x <span class="op" style="color: #5E5E5E;">=</span> torch.tensor(context).view(<span class="dv" style="color: #AD0000;">1</span>, <span class="op" style="color: #5E5E5E;">-</span><span class="dv" style="color: #AD0000;">1</span>)</span>
<span id="cb23-13">        y_pred <span class="op" style="color: #5E5E5E;">=</span> model(x)</span>
<span id="cb23-14">        ix <span class="op" style="color: #5E5E5E;">=</span> torch.distributions.categorical.Categorical(logits<span class="op" style="color: #5E5E5E;">=</span>y_pred).sample().item()</span>
<span id="cb23-15">        ch <span class="op" style="color: #5E5E5E;">=</span> itos[ix]</span>
<span id="cb23-16">        <span class="cf" style="color: #003B4F;">if</span> ch <span class="op" style="color: #5E5E5E;">==</span> <span class="st" style="color: #20794D;">'.'</span>:</span>
<span id="cb23-17">            <span class="cf" style="color: #003B4F;">break</span></span>
<span id="cb23-18">        name <span class="op" style="color: #5E5E5E;">+=</span> ch</span>
<span id="cb23-19">        context <span class="op" style="color: #5E5E5E;">=</span> context[<span class="dv" style="color: #AD0000;">1</span>:] <span class="op" style="color: #5E5E5E;">+</span> [ix]</span>
<span id="cb23-20">    <span class="cf" style="color: #003B4F;">return</span> name</span>
<span id="cb23-21"></span>
<span id="cb23-22"><span class="cf" style="color: #003B4F;">for</span> i <span class="kw" style="color: #003B4F;">in</span> <span class="bu" style="color: null;">range</span>(<span class="dv" style="color: #AD0000;">10</span>):</span>
<span id="cb23-23">    <span class="bu" style="color: null;">print</span>(generate_name(model, itos, stoi, block_size))</span></code></pre></div>
<div class="cell-output cell-output-stdout">
<pre><code>qyev

veevcykfro
uewexcgdha
xbvu
xibigzhkng
flltdnioqe

avntdnaxun
ylpvygvzqf</code></pre>
</div>
</div>
<div class="cell" data-execution_count="202">
<div class="sourceCode cell-code" id="cb25" style="background: #f1f3f5;"><pre class="sourceCode python code-with-copy"><code class="sourceCode python"><span id="cb25-1"><span class="co" style="color: #5E5E5E;"># Train the model</span></span>
<span id="cb25-2"></span>
<span id="cb25-3">loss_fn <span class="op" style="color: #5E5E5E;">=</span> nn.CrossEntropyLoss()</span>
<span id="cb25-4">opt <span class="op" style="color: #5E5E5E;">=</span> torch.optim.AdamW(model.parameters(), lr<span class="op" style="color: #5E5E5E;">=</span><span class="fl" style="color: #AD0000;">0.001</span>)</span>
<span id="cb25-5"></span>
<span id="cb25-6"><span class="co" style="color: #5E5E5E;"># Mini-batch training</span></span>
<span id="cb25-7">batch_size <span class="op" style="color: #5E5E5E;">=</span> <span class="dv" style="color: #AD0000;">4</span></span>
<span id="cb25-8"><span class="cf" style="color: #003B4F;">for</span> epoch <span class="kw" style="color: #003B4F;">in</span> <span class="bu" style="color: null;">range</span>(<span class="dv" style="color: #AD0000;">2000</span>):</span>
<span id="cb25-9">    <span class="cf" style="color: #003B4F;">for</span> i <span class="kw" style="color: #003B4F;">in</span> <span class="bu" style="color: null;">range</span>(<span class="dv" style="color: #AD0000;">0</span>, X.shape[<span class="dv" style="color: #AD0000;">0</span>], batch_size):</span>
<span id="cb25-10">        x <span class="op" style="color: #5E5E5E;">=</span> X[i:i<span class="op" style="color: #5E5E5E;">+</span>batch_size]</span>
<span id="cb25-11">        y <span class="op" style="color: #5E5E5E;">=</span> Y[i:i<span class="op" style="color: #5E5E5E;">+</span>batch_size]</span>
<span id="cb25-12">        y_pred <span class="op" style="color: #5E5E5E;">=</span> model(x)</span>
<span id="cb25-13">        loss <span class="op" style="color: #5E5E5E;">=</span> loss_fn(y_pred, y)</span>
<span id="cb25-14">        loss.backward()</span>
<span id="cb25-15">        opt.step()</span>
<span id="cb25-16">        opt.zero_grad()</span>
<span id="cb25-17">    <span class="cf" style="color: #003B4F;">if</span> epoch <span class="op" style="color: #5E5E5E;">%</span> <span class="dv" style="color: #AD0000;">100</span> <span class="op" style="color: #5E5E5E;">==</span> <span class="dv" style="color: #AD0000;">0</span>:</span>
<span id="cb25-18">        <span class="bu" style="color: null;">print</span>(epoch, loss.item())</span>
<span id="cb25-19"></span></code></pre></div>
<div class="cell-output cell-output-stdout">
<pre><code>0 1.1258258819580078
100 0.5126990079879761
200 0.5593062043190002</code></pre>
</div>
<div class="cell-output cell-output-error">
<pre><code>KeyboardInterrupt: </code></pre>
</div>
</div>
<div class="cell" data-execution_count="203">
<div class="sourceCode cell-code" id="cb28" style="background: #f1f3f5;"><pre class="sourceCode python code-with-copy"><code class="sourceCode python"><span id="cb28-1"><span class="co" style="color: #5E5E5E;"># Visualize the embedding</span></span>
<span id="cb28-2"></span>
<span id="cb28-3">plot_emb(model.emb, itos)</span></code></pre></div>
<div class="cell-output cell-output-display" data-execution_count="203">
<pre><code>&lt;AxesSubplot: &gt;</code></pre>
</div>
<div class="cell-output cell-output-display">
<p><img src="https://github.com/nipunbatra/ml2023/notebooks/posts/names_files/figure-html/cell-17-output-2.png" class="img-fluid"></p>
</div>
</div>
<div class="cell" data-execution_count="204">
<div class="sourceCode cell-code" id="cb30" style="background: #f1f3f5;"><pre class="sourceCode python code-with-copy"><code class="sourceCode python"><span id="cb30-1"><span class="co" style="color: #5E5E5E;"># Generate names from trained model</span></span>
<span id="cb30-2"></span>
<span id="cb30-3"><span class="cf" style="color: #003B4F;">for</span> i <span class="kw" style="color: #003B4F;">in</span> <span class="bu" style="color: null;">range</span>(<span class="dv" style="color: #AD0000;">10</span>):</span>
<span id="cb30-4">    <span class="bu" style="color: null;">print</span>(generate_name(model, itos, stoi, block_size))</span></code></pre></div>
<div class="cell-output cell-output-stdout">
<pre><code>dev
sili
sujino
abim
ubultatin
nashtaj
naula
duna
kav
shtyi</code></pre>
</div>
</div>



 ]]></description>
  <guid>https://github.com/nipunbatra/ml2023/notebooks/posts/names.html</guid>
  <pubDate>Tue, 31 Jan 2023 00:00:00 GMT</pubDate>
</item>
<item>
  <title>Maths and JAX</title>
  <dc:creator>Nipun Batra</dc:creator>
  <link>https://github.com/nipunbatra/ml2023/notebooks/posts/maths-jax.html</link>
  <description><![CDATA[ 



<div class="cell" data-execution_count="1">
<div class="sourceCode cell-code" id="cb1" style="background: #f1f3f5;"><pre class="sourceCode python code-with-copy"><code class="sourceCode python"><span id="cb1-1"><span class="im" style="color: #00769E;">import</span> pandas <span class="im" style="color: #00769E;">as</span> pd</span>
<span id="cb1-2"><span class="im" style="color: #00769E;">import</span> numpy <span class="im" style="color: #00769E;">as</span> np</span>
<span id="cb1-3"><span class="im" style="color: #00769E;">import</span> jax.numpy <span class="im" style="color: #00769E;">as</span> jnp</span>
<span id="cb1-4"><span class="im" style="color: #00769E;">import</span> jax</span></code></pre></div>
</div>
<div class="cell" data-execution_count="2">
<div class="sourceCode cell-code" id="cb2" style="background: #f1f3f5;"><pre class="sourceCode python code-with-copy"><code class="sourceCode python"><span id="cb2-1"><span class="kw" style="color: #003B4F;">def</span> func(x, y, z):</span>
<span id="cb2-2">    <span class="cf" style="color: #003B4F;">return</span> x<span class="op" style="color: #5E5E5E;">**</span><span class="dv" style="color: #AD0000;">2</span> <span class="op" style="color: #5E5E5E;">+</span> jnp.sin(y) <span class="op" style="color: #5E5E5E;">+</span> z</span></code></pre></div>
</div>
<div class="cell" data-execution_count="3">
<div class="sourceCode cell-code" id="cb3" style="background: #f1f3f5;"><pre class="sourceCode python code-with-copy"><code class="sourceCode python"><span id="cb3-1">func(<span class="dv" style="color: #AD0000;">1</span>, <span class="dv" style="color: #AD0000;">2</span>, <span class="dv" style="color: #AD0000;">3</span>)</span></code></pre></div>
<div class="cell-output cell-output-display" data-execution_count="3">
<pre><code>DeviceArray(4.9092975, dtype=float32, weak_type=True)</code></pre>
</div>
</div>
<div class="cell" data-execution_count="4">
<div class="sourceCode cell-code" id="cb5" style="background: #f1f3f5;"><pre class="sourceCode python code-with-copy"><code class="sourceCode python"><span id="cb5-1"><span class="im" style="color: #00769E;">from</span> sympy <span class="im" style="color: #00769E;">import</span> <span class="op" style="color: #5E5E5E;">*</span></span>
<span id="cb5-2">init_printing()</span>
<span id="cb5-3"></span>
<span id="cb5-4">x, y, z <span class="op" style="color: #5E5E5E;">=</span> symbols(<span class="st" style="color: #20794D;">'x y z'</span>)</span>
<span id="cb5-5">f <span class="op" style="color: #5E5E5E;">=</span> x<span class="op" style="color: #5E5E5E;">**</span><span class="dv" style="color: #AD0000;">2</span> <span class="op" style="color: #5E5E5E;">+</span> sin(y) <span class="op" style="color: #5E5E5E;">+</span> z</span>
<span id="cb5-6">f</span></code></pre></div>
<div class="cell-output cell-output-display" data-execution_count="4">
<p><img src="https://latex.codecogs.com/png.latex?%5Cdisplaystyle%20x%5E%7B2%7D%20+%20z%20+%20%5Csin%7B%5Cleft(y%20%5Cright)%7D"></p>
</div>
</div>
<div class="cell" data-execution_count="20">
<div class="sourceCode cell-code" id="cb6" style="background: #f1f3f5;"><pre class="sourceCode python code-with-copy"><code class="sourceCode python"><span id="cb6-1">diff(f, x)</span></code></pre></div>
<div class="cell-output cell-output-display" data-execution_count="20">
<p><img src="https://latex.codecogs.com/png.latex?%5Cdisplaystyle%202%20x"></p>
</div>
</div>
<div class="cell" data-execution_count="11">
<div class="sourceCode cell-code" id="cb7" style="background: #f1f3f5;"><pre class="sourceCode python code-with-copy"><code class="sourceCode python"><span id="cb7-1"><span class="co" style="color: #5E5E5E;"># Find the derivative of f with respect to x, y, and z using sympy</span></span>
<span id="cb7-2">del_x, del_y, del_z <span class="op" style="color: #5E5E5E;">=</span> diff(f, x), diff(f, y), diff(f, z)</span>
<span id="cb7-3">del_x, del_y, del_z</span></code></pre></div>
<div class="cell-output cell-output-display" data-execution_count="11">
<p><img src="https://latex.codecogs.com/png.latex?%5Cdisplaystyle%20%5Cleft(%202%20x,%20%5C%20%20%5Ccos%7B%5Cleft(y%20%5Cright)%7D,%20%5C%20%201%5Cright)"></p>
</div>
</div>
<div class="cell" data-execution_count="21">
<div class="sourceCode cell-code" id="cb8" style="background: #f1f3f5;"><pre class="sourceCode python code-with-copy"><code class="sourceCode python"><span id="cb8-1">grad_f <span class="op" style="color: #5E5E5E;">=</span> lambdify((x, y, z), [del_x, del_y, del_z])</span>
<span id="cb8-2">grad_f(<span class="dv" style="color: #AD0000;">1</span>, <span class="dv" style="color: #AD0000;">2</span>, <span class="dv" style="color: #AD0000;">3</span>)</span></code></pre></div>
<div class="cell-output cell-output-display" data-execution_count="21">
<p><img src="https://latex.codecogs.com/png.latex?%5Cdisplaystyle%20%5Cleft%5B%202,%20%5C%20%20-0.416146836547142,%20%5C%20%201%5Cright%5D"></p>
</div>
</div>
<div class="cell" data-execution_count="29">
<div class="sourceCode cell-code" id="cb9" style="background: #f1f3f5;"><pre class="sourceCode python code-with-copy"><code class="sourceCode python"><span id="cb9-1">grad_f_jax <span class="op" style="color: #5E5E5E;">=</span> jax.grad(func, argnums<span class="op" style="color: #5E5E5E;">=</span>(<span class="dv" style="color: #AD0000;">0</span>, <span class="dv" style="color: #AD0000;">1</span>, <span class="dv" style="color: #AD0000;">2</span>))</span>
<span id="cb9-2">grad_f_jax(<span class="fl" style="color: #AD0000;">1.</span>, <span class="fl" style="color: #AD0000;">2.</span>, <span class="fl" style="color: #AD0000;">3.</span>)</span></code></pre></div>
<div class="cell-output cell-output-display" data-execution_count="29">
<pre><code>(DeviceArray(2., dtype=float32, weak_type=True),
 DeviceArray(-0.41614684, dtype=float32, weak_type=True),
 DeviceArray(1., dtype=float32, weak_type=True))</code></pre>
</div>
</div>
<div class="cell" data-execution_count="92">
<div class="sourceCode cell-code" id="cb11" style="background: #f1f3f5;"><pre class="sourceCode python code-with-copy"><code class="sourceCode python"><span id="cb11-1">n <span class="op" style="color: #5E5E5E;">=</span> <span class="dv" style="color: #AD0000;">20</span></span>
<span id="cb11-2">A <span class="op" style="color: #5E5E5E;">=</span> jax.random.normal(shape<span class="op" style="color: #5E5E5E;">=</span>(<span class="dv" style="color: #AD0000;">1</span>, n), key<span class="op" style="color: #5E5E5E;">=</span>jax.random.PRNGKey(<span class="dv" style="color: #AD0000;">0</span>), dtype<span class="op" style="color: #5E5E5E;">=</span>jnp.float32)</span>
<span id="cb11-3">theta <span class="op" style="color: #5E5E5E;">=</span> jax.random.normal(shape<span class="op" style="color: #5E5E5E;">=</span>(n, <span class="dv" style="color: #AD0000;">1</span>), key<span class="op" style="color: #5E5E5E;">=</span>jax.random.PRNGKey(<span class="dv" style="color: #AD0000;">0</span>), dtype<span class="op" style="color: #5E5E5E;">=</span>jnp.float32)</span>
<span id="cb11-4">b <span class="op" style="color: #5E5E5E;">=</span> A <span class="op" style="color: #5E5E5E;">@</span> theta </span>
<span id="cb11-5"></span>
<span id="cb11-6">b</span></code></pre></div>
<div class="cell-output cell-output-display" data-execution_count="92">
<pre><code>DeviceArray([[28.684494]], dtype=float32)</code></pre>
</div>
</div>
<div class="cell" data-execution_count="93">
<div class="sourceCode cell-code" id="cb13" style="background: #f1f3f5;"><pre class="sourceCode python code-with-copy"><code class="sourceCode python"><span id="cb13-1">b.flatten(), b.item()</span></code></pre></div>
<div class="cell-output cell-output-display" data-execution_count="93">
<pre><code>(DeviceArray([28.684494], dtype=float32), 28.684494018554688)</code></pre>
</div>
</div>
<div class="cell" data-execution_count="94">
<div class="sourceCode cell-code" id="cb15" style="background: #f1f3f5;"><pre class="sourceCode python code-with-copy"><code class="sourceCode python"><span id="cb15-1"><span class="kw" style="color: #003B4F;">def</span> a_theta(A, theta):</span>
<span id="cb15-2">    <span class="cf" style="color: #003B4F;">return</span> A <span class="op" style="color: #5E5E5E;">@</span> theta</span></code></pre></div>
</div>
<div class="cell" data-execution_count="95">
<div class="sourceCode cell-code" id="cb16" style="background: #f1f3f5;"><pre class="sourceCode python code-with-copy"><code class="sourceCode python"><span id="cb16-1">a_theta(A, theta)</span></code></pre></div>
<div class="cell-output cell-output-display" data-execution_count="95">
<pre><code>DeviceArray([[28.684494]], dtype=float32)</code></pre>
</div>
</div>
<div class="cell" data-execution_count="96">
<div class="sourceCode cell-code" id="cb18" style="background: #f1f3f5;"><pre class="sourceCode python code-with-copy"><code class="sourceCode python"><span id="cb18-1">grad_a_theta <span class="op" style="color: #5E5E5E;">=</span> jax.grad(a_theta, argnums<span class="op" style="color: #5E5E5E;">=</span><span class="dv" style="color: #AD0000;">1</span>)</span></code></pre></div>
</div>
<div class="cell" data-execution_count="101">
<div class="sourceCode cell-code" id="cb19" style="background: #f1f3f5;"><pre class="sourceCode python code-with-copy"><code class="sourceCode python"><span id="cb19-1">jax.jacobian(a_theta, argnums<span class="op" style="color: #5E5E5E;">=</span><span class="dv" style="color: #AD0000;">1</span>)(A, theta)[<span class="dv" style="color: #AD0000;">0</span>, <span class="dv" style="color: #AD0000;">0</span>, :].shape</span></code></pre></div>
<div class="cell-output cell-output-display" data-execution_count="101">
<p><img src="https://latex.codecogs.com/png.latex?%5Cdisplaystyle%20%5Cleft(%2020,%20%5C%20%201%5Cright)"></p>
</div>
</div>
<div class="cell" data-execution_count="102">
<div class="sourceCode cell-code" id="cb20" style="background: #f1f3f5;"><pre class="sourceCode python code-with-copy"><code class="sourceCode python"><span id="cb20-1">A.shape</span></code></pre></div>
<div class="cell-output cell-output-display" data-execution_count="102">
<p><img src="https://latex.codecogs.com/png.latex?%5Cdisplaystyle%20%5Cleft(%201,%20%5C%20%2020%5Cright)"></p>
</div>
</div>
<div class="cell" data-execution_count="112">
<div class="sourceCode cell-code" id="cb21" style="background: #f1f3f5;"><pre class="sourceCode python code-with-copy"><code class="sourceCode python"><span id="cb21-1"><span class="co" style="color: #5E5E5E;"># Sympy version</span></span></code></pre></div>
</div>
<div class="cell" data-execution_count="109">
<div class="sourceCode cell-code" id="cb22" style="background: #f1f3f5;"><pre class="sourceCode python code-with-copy"><code class="sourceCode python"><span id="cb22-1">A <span class="op" style="color: #5E5E5E;">=</span> MatrixSymbol(<span class="st" style="color: #20794D;">'A'</span>, <span class="dv" style="color: #AD0000;">1</span>, n)</span>
<span id="cb22-2">theta <span class="op" style="color: #5E5E5E;">=</span> MatrixSymbol(<span class="st" style="color: #20794D;">'theta'</span>, n, <span class="dv" style="color: #AD0000;">1</span>)</span>
<span id="cb22-3">A, theta</span></code></pre></div>
<div class="cell-output cell-output-display" data-execution_count="109">
<p><img src="https://latex.codecogs.com/png.latex?%5Cdisplaystyle%20%5Cleft(%20A,%20%5C%20%20%5Ctheta%5Cright)"></p>
</div>
</div>
<div class="cell" data-execution_count="111">
<div class="sourceCode cell-code" id="cb23" style="background: #f1f3f5;"><pre class="sourceCode python code-with-copy"><code class="sourceCode python"><span id="cb23-1">diff(A<span class="op" style="color: #5E5E5E;">*</span>theta, theta)</span></code></pre></div>
<div class="cell-output cell-output-display" data-execution_count="111">
<p><img src="https://latex.codecogs.com/png.latex?%5Cdisplaystyle%20A%5E%7BT%7D"></p>
</div>
</div>



 ]]></description>
  <guid>https://github.com/nipunbatra/ml2023/notebooks/posts/maths-jax.html</guid>
  <pubDate>Tue, 31 Jan 2023 00:00:00 GMT</pubDate>
</item>
<item>
  <title>Dataset splitting for machine learning</title>
  <dc:creator>Nipun Batra</dc:creator>
  <link>https://github.com/nipunbatra/ml2023/notebooks/posts/split.html</link>
  <description><![CDATA[ 



<div class="cell" data-execution_count="1">
<div class="sourceCode cell-code" id="cb1" style="background: #f1f3f5;"><pre class="sourceCode python code-with-copy"><code class="sourceCode python"><span id="cb1-1"><span class="im" style="color: #00769E;">import</span> numpy <span class="im" style="color: #00769E;">as</span> np</span>
<span id="cb1-2"><span class="im" style="color: #00769E;">import</span> matplotlib.pyplot <span class="im" style="color: #00769E;">as</span> plt</span>
<span id="cb1-3"><span class="im" style="color: #00769E;">import</span> pandas <span class="im" style="color: #00769E;">as</span> pd</span>
<span id="cb1-4"></span>
<span id="cb1-5"><span class="op" style="color: #5E5E5E;">%</span>matplotlib inline</span>
<span id="cb1-6"><span class="op" style="color: #5E5E5E;">%</span>config InlineBackend.figure_format<span class="op" style="color: #5E5E5E;">=</span><span class="st" style="color: #20794D;">'retina'</span></span></code></pre></div>
</div>
<div class="cell" data-execution_count="4">
<div class="sourceCode cell-code" id="cb2" style="background: #f1f3f5;"><pre class="sourceCode python code-with-copy"><code class="sourceCode python"><span id="cb2-1"><span class="co" style="color: #5E5E5E;"># Create a dataset with 3 features and 1000 samples for a classification problem</span></span>
<span id="cb2-2"></span>
<span id="cb2-3">df <span class="op" style="color: #5E5E5E;">=</span> pd.DataFrame(np.random.randn(<span class="dv" style="color: #AD0000;">1000</span>, <span class="dv" style="color: #AD0000;">3</span>), columns<span class="op" style="color: #5E5E5E;">=</span>[<span class="st" style="color: #20794D;">'A'</span>, <span class="st" style="color: #20794D;">'B'</span>, <span class="st" style="color: #20794D;">'C'</span>])</span>
<span id="cb2-4">df[<span class="st" style="color: #20794D;">'D'</span>] <span class="op" style="color: #5E5E5E;">=</span> np.random.randint(<span class="dv" style="color: #AD0000;">0</span>, <span class="dv" style="color: #AD0000;">2</span>, <span class="dv" style="color: #AD0000;">1000</span>)</span>
<span id="cb2-5"></span>
<span id="cb2-6">df</span></code></pre></div>
<div class="cell-output cell-output-display" data-execution_count="4">

<div>

<table class="dataframe table table-sm table-striped">
  <thead>
    <tr>
      <th></th>
      <th>A</th>
      <th>B</th>
      <th>C</th>
      <th>D</th>
    </tr>
  </thead>
  <tbody>
    <tr>
      <th>0</th>
      <td>0.112981</td>
      <td>-0.033889</td>
      <td>0.348708</td>
      <td>1</td>
    </tr>
    <tr>
      <th>1</th>
      <td>1.821601</td>
      <td>1.267423</td>
      <td>0.274915</td>
      <td>1</td>
    </tr>
    <tr>
      <th>2</th>
      <td>0.148040</td>
      <td>-1.412712</td>
      <td>-0.271345</td>
      <td>1</td>
    </tr>
    <tr>
      <th>3</th>
      <td>0.004766</td>
      <td>-1.209944</td>
      <td>0.122512</td>
      <td>1</td>
    </tr>
    <tr>
      <th>4</th>
      <td>0.854442</td>
      <td>-0.559497</td>
      <td>-0.605376</td>
      <td>1</td>
    </tr>
    <tr>
      <th>...</th>
      <td>...</td>
      <td>...</td>
      <td>...</td>
      <td>...</td>
    </tr>
    <tr>
      <th>995</th>
      <td>0.161444</td>
      <td>-0.969567</td>
      <td>-2.079664</td>
      <td>0</td>
    </tr>
    <tr>
      <th>996</th>
      <td>1.615938</td>
      <td>0.219218</td>
      <td>-0.322223</td>
      <td>0</td>
    </tr>
    <tr>
      <th>997</th>
      <td>0.501970</td>
      <td>-0.874313</td>
      <td>1.571102</td>
      <td>1</td>
    </tr>
    <tr>
      <th>998</th>
      <td>0.386063</td>
      <td>-1.481215</td>
      <td>-1.974313</td>
      <td>1</td>
    </tr>
    <tr>
      <th>999</th>
      <td>0.468528</td>
      <td>1.060850</td>
      <td>0.612252</td>
      <td>1</td>
    </tr>
  </tbody>
</table>
<p>1000 rows × 4 columns</p>
</div>
</div>
</div>
<div class="cell" data-execution_count="5">
<div class="sourceCode cell-code" id="cb3" style="background: #f1f3f5;"><pre class="sourceCode python code-with-copy"><code class="sourceCode python"><span id="cb3-1">X, y <span class="op" style="color: #5E5E5E;">=</span> df[[<span class="st" style="color: #20794D;">'A'</span>, <span class="st" style="color: #20794D;">'B'</span>, <span class="st" style="color: #20794D;">'C'</span>]], df[<span class="st" style="color: #20794D;">'D'</span>]</span></code></pre></div>
</div>
<div class="cell" data-execution_count="6">
<div class="sourceCode cell-code" id="cb4" style="background: #f1f3f5;"><pre class="sourceCode python code-with-copy"><code class="sourceCode python"><span id="cb4-1">train_X, test_X <span class="op" style="color: #5E5E5E;">=</span> X[:<span class="dv" style="color: #AD0000;">800</span>], X[<span class="dv" style="color: #AD0000;">800</span>:]</span>
<span id="cb4-2">train_y, test_y <span class="op" style="color: #5E5E5E;">=</span> y[:<span class="dv" style="color: #AD0000;">800</span>], y[<span class="dv" style="color: #AD0000;">800</span>:]</span></code></pre></div>
</div>
<div class="cell" data-execution_count="12">
<div class="sourceCode cell-code" id="cb5" style="background: #f1f3f5;"><pre class="sourceCode python code-with-copy"><code class="sourceCode python"><span id="cb5-1"><span class="im" style="color: #00769E;">from</span> sklearn.tree <span class="im" style="color: #00769E;">import</span> DecisionTreeClassifier</span></code></pre></div>
</div>
<div class="cell" data-execution_count="15">
<div class="sourceCode cell-code" id="cb6" style="background: #f1f3f5;"><pre class="sourceCode python code-with-copy"><code class="sourceCode python"><span id="cb6-1">dt <span class="op" style="color: #5E5E5E;">=</span> DecisionTreeClassifier(max_depth<span class="op" style="color: #5E5E5E;">=</span><span class="dv" style="color: #AD0000;">2</span>)</span>
<span id="cb6-2">dt.fit(train_X, train_y)</span></code></pre></div>
<div class="cell-output cell-output-display" data-execution_count="15">
<style>#sk-container-id-2 {color: black;background-color: white;}#sk-container-id-2 pre{padding: 0;}#sk-container-id-2 div.sk-toggleable {background-color: white;}#sk-container-id-2 label.sk-toggleable__label {cursor: pointer;display: block;width: 100%;margin-bottom: 0;padding: 0.3em;box-sizing: border-box;text-align: center;}#sk-container-id-2 label.sk-toggleable__label-arrow:before {content: "▸";float: left;margin-right: 0.25em;color: #696969;}#sk-container-id-2 label.sk-toggleable__label-arrow:hover:before {color: black;}#sk-container-id-2 div.sk-estimator:hover label.sk-toggleable__label-arrow:before {color: black;}#sk-container-id-2 div.sk-toggleable__content {max-height: 0;max-width: 0;overflow: hidden;text-align: left;background-color: #f0f8ff;}#sk-container-id-2 div.sk-toggleable__content pre {margin: 0.2em;color: black;border-radius: 0.25em;background-color: #f0f8ff;}#sk-container-id-2 input.sk-toggleable__control:checked~div.sk-toggleable__content {max-height: 200px;max-width: 100%;overflow: auto;}#sk-container-id-2 input.sk-toggleable__control:checked~label.sk-toggleable__label-arrow:before {content: "▾";}#sk-container-id-2 div.sk-estimator input.sk-toggleable__control:checked~label.sk-toggleable__label {background-color: #d4ebff;}#sk-container-id-2 div.sk-label input.sk-toggleable__control:checked~label.sk-toggleable__label {background-color: #d4ebff;}#sk-container-id-2 input.sk-hidden--visually {border: 0;clip: rect(1px 1px 1px 1px);clip: rect(1px, 1px, 1px, 1px);height: 1px;margin: -1px;overflow: hidden;padding: 0;position: absolute;width: 1px;}#sk-container-id-2 div.sk-estimator {font-family: monospace;background-color: #f0f8ff;border: 1px dotted black;border-radius: 0.25em;box-sizing: border-box;margin-bottom: 0.5em;}#sk-container-id-2 div.sk-estimator:hover {background-color: #d4ebff;}#sk-container-id-2 div.sk-parallel-item::after {content: "";width: 100%;border-bottom: 1px solid gray;flex-grow: 1;}#sk-container-id-2 div.sk-label:hover label.sk-toggleable__label {background-color: #d4ebff;}#sk-container-id-2 div.sk-serial::before {content: "";position: absolute;border-left: 1px solid gray;box-sizing: border-box;top: 0;bottom: 0;left: 50%;z-index: 0;}#sk-container-id-2 div.sk-serial {display: flex;flex-direction: column;align-items: center;background-color: white;padding-right: 0.2em;padding-left: 0.2em;position: relative;}#sk-container-id-2 div.sk-item {position: relative;z-index: 1;}#sk-container-id-2 div.sk-parallel {display: flex;align-items: stretch;justify-content: center;background-color: white;position: relative;}#sk-container-id-2 div.sk-item::before, #sk-container-id-2 div.sk-parallel-item::before {content: "";position: absolute;border-left: 1px solid gray;box-sizing: border-box;top: 0;bottom: 0;left: 50%;z-index: -1;}#sk-container-id-2 div.sk-parallel-item {display: flex;flex-direction: column;z-index: 1;position: relative;background-color: white;}#sk-container-id-2 div.sk-parallel-item:first-child::after {align-self: flex-end;width: 50%;}#sk-container-id-2 div.sk-parallel-item:last-child::after {align-self: flex-start;width: 50%;}#sk-container-id-2 div.sk-parallel-item:only-child::after {width: 0;}#sk-container-id-2 div.sk-dashed-wrapped {border: 1px dashed gray;margin: 0 0.4em 0.5em 0.4em;box-sizing: border-box;padding-bottom: 0.4em;background-color: white;}#sk-container-id-2 div.sk-label label {font-family: monospace;font-weight: bold;display: inline-block;line-height: 1.2em;}#sk-container-id-2 div.sk-label-container {text-align: center;}#sk-container-id-2 div.sk-container {/* jupyter's `normalize.less` sets `[hidden] { display: none; }` but bootstrap.min.css set `[hidden] { display: none !important; }` so we also need the `!important` here to be able to override the default hidden behavior on the sphinx rendered scikit-learn.org. See: https://github.com/scikit-learn/scikit-learn/issues/21755 */display: inline-block !important;position: relative;}#sk-container-id-2 div.sk-text-repr-fallback {display: none;}</style><div id="sk-container-id-2" class="sk-top-container"><div class="sk-text-repr-fallback"><pre>DecisionTreeClassifier(max_depth=2)</pre><b>In a Jupyter environment, please rerun this cell to show the HTML representation or trust the notebook. <br>On GitHub, the HTML representation is unable to render, please try loading this page with nbviewer.org.</b></div><div class="sk-container" hidden=""><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="sk-estimator-id-2" type="checkbox" checked=""><label for="sk-estimator-id-2" class="sk-toggleable__label sk-toggleable__label-arrow">DecisionTreeClassifier</label><div class="sk-toggleable__content"><pre>DecisionTreeClassifier(max_depth=2)</pre></div></div></div></div></div>
</div>
</div>
<div class="cell" data-execution_count="16">
<div class="sourceCode cell-code" id="cb7" style="background: #f1f3f5;"><pre class="sourceCode python code-with-copy"><code class="sourceCode python"><span id="cb7-1"><span class="im" style="color: #00769E;">from</span> sklearn <span class="im" style="color: #00769E;">import</span> tree</span>
<span id="cb7-2">tree.plot_tree(dt)</span></code></pre></div>
<div class="cell-output cell-output-display" data-execution_count="16">
<pre><code>[Text(0.5, 0.8333333333333334, 'X[0] &lt;= -0.17\ngini = 0.5\nsamples = 800\nvalue = [400, 400]'),
 Text(0.25, 0.5, 'X[0] &lt;= -0.307\ngini = 0.495\nsamples = 348\nvalue = [157, 191]'),
 Text(0.125, 0.16666666666666666, 'gini = 0.499\nsamples = 316\nvalue = [153, 163]'),
 Text(0.375, 0.16666666666666666, 'gini = 0.219\nsamples = 32\nvalue = [4, 28]'),
 Text(0.75, 0.5, 'X[2] &lt;= 1.656\ngini = 0.497\nsamples = 452\nvalue = [243, 209]'),
 Text(0.625, 0.16666666666666666, 'gini = 0.495\nsamples = 434\nvalue = [239, 195]'),
 Text(0.875, 0.16666666666666666, 'gini = 0.346\nsamples = 18\nvalue = [4, 14]')]</code></pre>
</div>
<div class="cell-output cell-output-display">
<p><img src="https://github.com/nipunbatra/ml2023/notebooks/posts/split_files/figure-html/cell-8-output-2.png" class="img-fluid"></p>
</div>
</div>
<div class="cell" data-execution_count="20">
<div class="sourceCode cell-code" id="cb9" style="background: #f1f3f5;"><pre class="sourceCode python code-with-copy"><code class="sourceCode python"><span id="cb9-1">y_hat <span class="op" style="color: #5E5E5E;">=</span> dt.predict(test_X)</span>
<span id="cb9-2">pd.DataFrame({<span class="st" style="color: #20794D;">"y_true"</span>: test_y, <span class="st" style="color: #20794D;">"y_hat"</span>: y_hat})</span></code></pre></div>
<div class="cell-output cell-output-display" data-execution_count="20">

<div>

<table class="dataframe table table-sm table-striped">
  <thead>
    <tr>
      <th></th>
      <th>y_true</th>
      <th>y_hat</th>
    </tr>
  </thead>
  <tbody>
    <tr>
      <th>800</th>
      <td>0</td>
      <td>1</td>
    </tr>
    <tr>
      <th>801</th>
      <td>0</td>
      <td>0</td>
    </tr>
    <tr>
      <th>802</th>
      <td>1</td>
      <td>1</td>
    </tr>
    <tr>
      <th>803</th>
      <td>1</td>
      <td>1</td>
    </tr>
    <tr>
      <th>804</th>
      <td>0</td>
      <td>1</td>
    </tr>
    <tr>
      <th>...</th>
      <td>...</td>
      <td>...</td>
    </tr>
    <tr>
      <th>995</th>
      <td>0</td>
      <td>1</td>
    </tr>
    <tr>
      <th>996</th>
      <td>0</td>
      <td>0</td>
    </tr>
    <tr>
      <th>997</th>
      <td>1</td>
      <td>0</td>
    </tr>
    <tr>
      <th>998</th>
      <td>1</td>
      <td>1</td>
    </tr>
    <tr>
      <th>999</th>
      <td>1</td>
      <td>1</td>
    </tr>
  </tbody>
</table>
<p>200 rows × 2 columns</p>
</div>
</div>
</div>
<div class="cell" data-execution_count="17">
<div class="sourceCode cell-code" id="cb10" style="background: #f1f3f5;"><pre class="sourceCode python code-with-copy"><code class="sourceCode python"><span id="cb10-1"><span class="im" style="color: #00769E;">from</span> sklearn.tree <span class="im" style="color: #00769E;">import</span> DecisionTreeClassifier</span>
<span id="cb10-2"></span>
<span id="cb10-3">train_scores <span class="op" style="color: #5E5E5E;">=</span> {}</span>
<span id="cb10-4">test_scores <span class="op" style="color: #5E5E5E;">=</span> {}</span>
<span id="cb10-5"></span>
<span id="cb10-6"><span class="cf" style="color: #003B4F;">for</span> i <span class="kw" style="color: #003B4F;">in</span> <span class="bu" style="color: null;">range</span>(<span class="dv" style="color: #AD0000;">1</span>, <span class="dv" style="color: #AD0000;">20</span>):</span>
<span id="cb10-7">    dt <span class="op" style="color: #5E5E5E;">=</span> DecisionTreeClassifier(max_depth<span class="op" style="color: #5E5E5E;">=</span>i)</span>
<span id="cb10-8">    dt.fit(train_X, train_y)</span>
<span id="cb10-9">    train_scores[i] <span class="op" style="color: #5E5E5E;">=</span> dt.score(train_X, train_y)</span>
<span id="cb10-10">    </span>
<span id="cb10-11">    test_scores[i] <span class="op" style="color: #5E5E5E;">=</span> dt.score(test_X, test_y)</span></code></pre></div>
</div>
<div class="cell" data-execution_count="18">
<div class="sourceCode cell-code" id="cb11" style="background: #f1f3f5;"><pre class="sourceCode python code-with-copy"><code class="sourceCode python"><span id="cb11-1">scores_df <span class="op" style="color: #5E5E5E;">=</span> pd.DataFrame({<span class="st" style="color: #20794D;">'train'</span>: train_scores, <span class="st" style="color: #20794D;">'test'</span>: test_scores})</span>
<span id="cb11-2">scores_df.plot()</span></code></pre></div>
<div class="cell-output cell-output-display" data-execution_count="18">
<pre><code>&lt;AxesSubplot:&gt;</code></pre>
</div>
<div class="cell-output cell-output-display">
<p><img src="https://github.com/nipunbatra/ml2023/notebooks/posts/split_files/figure-html/cell-11-output-2.png" class="img-fluid"></p>
</div>
</div>



 ]]></description>
  <guid>https://github.com/nipunbatra/ml2023/notebooks/posts/split.html</guid>
  <pubDate>Tue, 17 Jan 2023 00:00:00 GMT</pubDate>
</item>
<item>
  <title>Grid Search</title>
  <dc:creator>Nipun Batra</dc:creator>
  <link>https://github.com/nipunbatra/ml2023/notebooks/posts/hyperparameter-1.html</link>
  <description><![CDATA[ 



<section id="hyperparameter-tuning" class="level4">
<h4 class="anchored" data-anchor-id="hyperparameter-tuning">Hyperparameter Tuning</h4>
<div class="cell" data-execution_count="1">
<div class="sourceCode cell-code" id="cb1" style="background: #f1f3f5;"><pre class="sourceCode python code-with-copy"><code class="sourceCode python"><span id="cb1-1"><span class="im" style="color: #00769E;">import</span> pandas <span class="im" style="color: #00769E;">as</span> pd</span>
<span id="cb1-2"><span class="im" style="color: #00769E;">import</span> numpy <span class="im" style="color: #00769E;">as</span> np</span>
<span id="cb1-3"><span class="im" style="color: #00769E;">from</span> sklearn.tree <span class="im" style="color: #00769E;">import</span> DecisionTreeClassifier</span></code></pre></div>
</div>
</section>
<section id="dataset-creation" class="level4">
<h4 class="anchored" data-anchor-id="dataset-creation">Dataset creation</h4>
<div class="cell" data-execution_count="2">
<div class="sourceCode cell-code" id="cb2" style="background: #f1f3f5;"><pre class="sourceCode python code-with-copy"><code class="sourceCode python"><span id="cb2-1"><span class="co" style="color: #5E5E5E;"># Create a DataFrame for classification containing four real features and one binary target</span></span>
<span id="cb2-2"></span>
<span id="cb2-3">df <span class="op" style="color: #5E5E5E;">=</span> pd.DataFrame({</span>
<span id="cb2-4">    <span class="st" style="color: #20794D;">'feature1'</span>: np.random.randint(<span class="dv" style="color: #AD0000;">0</span>, <span class="dv" style="color: #AD0000;">100</span>, <span class="dv" style="color: #AD0000;">100</span>),</span>
<span id="cb2-5">    <span class="st" style="color: #20794D;">'feature2'</span>: np.random.randint(<span class="dv" style="color: #AD0000;">0</span>, <span class="dv" style="color: #AD0000;">100</span>, <span class="dv" style="color: #AD0000;">100</span>),</span>
<span id="cb2-6">    <span class="st" style="color: #20794D;">'feature3'</span>: np.random.randint(<span class="dv" style="color: #AD0000;">0</span>, <span class="dv" style="color: #AD0000;">100</span>, <span class="dv" style="color: #AD0000;">100</span>),</span>
<span id="cb2-7">    <span class="st" style="color: #20794D;">'feature4'</span>: np.random.randint(<span class="dv" style="color: #AD0000;">0</span>, <span class="dv" style="color: #AD0000;">100</span>, <span class="dv" style="color: #AD0000;">100</span>),</span>
<span id="cb2-8">    <span class="st" style="color: #20794D;">'target'</span>: np.random.randint(<span class="dv" style="color: #AD0000;">0</span>, <span class="dv" style="color: #AD0000;">2</span>, <span class="dv" style="color: #AD0000;">100</span>)</span>
<span id="cb2-9">})</span></code></pre></div>
</div>
<div class="cell" data-execution_count="3">
<div class="sourceCode cell-code" id="cb3" style="background: #f1f3f5;"><pre class="sourceCode python code-with-copy"><code class="sourceCode python"><span id="cb3-1">df.head()</span></code></pre></div>
<div class="cell-output cell-output-display" data-execution_count="3">

<div>

<table class="dataframe table table-sm table-striped">
  <thead>
    <tr>
      <th></th>
      <th>feature1</th>
      <th>feature2</th>
      <th>feature3</th>
      <th>feature4</th>
      <th>target</th>
    </tr>
  </thead>
  <tbody>
    <tr>
      <th>0</th>
      <td>29</td>
      <td>14</td>
      <td>66</td>
      <td>83</td>
      <td>1</td>
    </tr>
    <tr>
      <th>1</th>
      <td>68</td>
      <td>70</td>
      <td>87</td>
      <td>72</td>
      <td>1</td>
    </tr>
    <tr>
      <th>2</th>
      <td>42</td>
      <td>5</td>
      <td>40</td>
      <td>67</td>
      <td>1</td>
    </tr>
    <tr>
      <th>3</th>
      <td>2</td>
      <td>54</td>
      <td>79</td>
      <td>0</td>
      <td>1</td>
    </tr>
    <tr>
      <th>4</th>
      <td>81</td>
      <td>36</td>
      <td>35</td>
      <td>75</td>
      <td>0</td>
    </tr>
  </tbody>
</table>
</div>
</div>
</div>
<div class="cell" data-execution_count="4">
<div class="sourceCode cell-code" id="cb4" style="background: #f1f3f5;"><pre class="sourceCode python code-with-copy"><code class="sourceCode python"><span id="cb4-1">train_df <span class="op" style="color: #5E5E5E;">=</span> df[:<span class="dv" style="color: #AD0000;">50</span>]</span>
<span id="cb4-2">validation_df <span class="op" style="color: #5E5E5E;">=</span> df[<span class="dv" style="color: #AD0000;">50</span>:<span class="dv" style="color: #AD0000;">80</span>]</span></code></pre></div>
</div>
<div class="cell" data-execution_count="5">
<div class="sourceCode cell-code" id="cb5" style="background: #f1f3f5;"><pre class="sourceCode python code-with-copy"><code class="sourceCode python"><span id="cb5-1">dt <span class="op" style="color: #5E5E5E;">=</span> DecisionTreeClassifier()</span>
<span id="cb5-2">dt.fit(train_df[[<span class="st" style="color: #20794D;">'feature1'</span>, <span class="st" style="color: #20794D;">'feature2'</span>, <span class="st" style="color: #20794D;">'feature3'</span>, <span class="st" style="color: #20794D;">'feature4'</span>]], train_df[<span class="st" style="color: #20794D;">'target'</span>])</span>
<span id="cb5-3">dt</span></code></pre></div>
<div class="cell-output cell-output-display" data-execution_count="5">
<style>#sk-container-id-1 {color: black;background-color: white;}#sk-container-id-1 pre{padding: 0;}#sk-container-id-1 div.sk-toggleable {background-color: white;}#sk-container-id-1 label.sk-toggleable__label {cursor: pointer;display: block;width: 100%;margin-bottom: 0;padding: 0.3em;box-sizing: border-box;text-align: center;}#sk-container-id-1 label.sk-toggleable__label-arrow:before {content: "▸";float: left;margin-right: 0.25em;color: #696969;}#sk-container-id-1 label.sk-toggleable__label-arrow:hover:before {color: black;}#sk-container-id-1 div.sk-estimator:hover label.sk-toggleable__label-arrow:before {color: black;}#sk-container-id-1 div.sk-toggleable__content {max-height: 0;max-width: 0;overflow: hidden;text-align: left;background-color: #f0f8ff;}#sk-container-id-1 div.sk-toggleable__content pre {margin: 0.2em;color: black;border-radius: 0.25em;background-color: #f0f8ff;}#sk-container-id-1 input.sk-toggleable__control:checked~div.sk-toggleable__content {max-height: 200px;max-width: 100%;overflow: auto;}#sk-container-id-1 input.sk-toggleable__control:checked~label.sk-toggleable__label-arrow:before {content: "▾";}#sk-container-id-1 div.sk-estimator input.sk-toggleable__control:checked~label.sk-toggleable__label {background-color: #d4ebff;}#sk-container-id-1 div.sk-label input.sk-toggleable__control:checked~label.sk-toggleable__label {background-color: #d4ebff;}#sk-container-id-1 input.sk-hidden--visually {border: 0;clip: rect(1px 1px 1px 1px);clip: rect(1px, 1px, 1px, 1px);height: 1px;margin: -1px;overflow: hidden;padding: 0;position: absolute;width: 1px;}#sk-container-id-1 div.sk-estimator {font-family: monospace;background-color: #f0f8ff;border: 1px dotted black;border-radius: 0.25em;box-sizing: border-box;margin-bottom: 0.5em;}#sk-container-id-1 div.sk-estimator:hover {background-color: #d4ebff;}#sk-container-id-1 div.sk-parallel-item::after {content: "";width: 100%;border-bottom: 1px solid gray;flex-grow: 1;}#sk-container-id-1 div.sk-label:hover label.sk-toggleable__label {background-color: #d4ebff;}#sk-container-id-1 div.sk-serial::before {content: "";position: absolute;border-left: 1px solid gray;box-sizing: border-box;top: 0;bottom: 0;left: 50%;z-index: 0;}#sk-container-id-1 div.sk-serial {display: flex;flex-direction: column;align-items: center;background-color: white;padding-right: 0.2em;padding-left: 0.2em;position: relative;}#sk-container-id-1 div.sk-item {position: relative;z-index: 1;}#sk-container-id-1 div.sk-parallel {display: flex;align-items: stretch;justify-content: center;background-color: white;position: relative;}#sk-container-id-1 div.sk-item::before, #sk-container-id-1 div.sk-parallel-item::before {content: "";position: absolute;border-left: 1px solid gray;box-sizing: border-box;top: 0;bottom: 0;left: 50%;z-index: -1;}#sk-container-id-1 div.sk-parallel-item {display: flex;flex-direction: column;z-index: 1;position: relative;background-color: white;}#sk-container-id-1 div.sk-parallel-item:first-child::after {align-self: flex-end;width: 50%;}#sk-container-id-1 div.sk-parallel-item:last-child::after {align-self: flex-start;width: 50%;}#sk-container-id-1 div.sk-parallel-item:only-child::after {width: 0;}#sk-container-id-1 div.sk-dashed-wrapped {border: 1px dashed gray;margin: 0 0.4em 0.5em 0.4em;box-sizing: border-box;padding-bottom: 0.4em;background-color: white;}#sk-container-id-1 div.sk-label label {font-family: monospace;font-weight: bold;display: inline-block;line-height: 1.2em;}#sk-container-id-1 div.sk-label-container {text-align: center;}#sk-container-id-1 div.sk-container {/* jupyter's `normalize.less` sets `[hidden] { display: none; }` but bootstrap.min.css set `[hidden] { display: none !important; }` so we also need the `!important` here to be able to override the default hidden behavior on the sphinx rendered scikit-learn.org. See: https://github.com/scikit-learn/scikit-learn/issues/21755 */display: inline-block !important;position: relative;}#sk-container-id-1 div.sk-text-repr-fallback {display: none;}</style><div id="sk-container-id-1" class="sk-top-container"><div class="sk-text-repr-fallback"><pre>DecisionTreeClassifier()</pre><b>In a Jupyter environment, please rerun this cell to show the HTML representation or trust the notebook. <br>On GitHub, the HTML representation is unable to render, please try loading this page with nbviewer.org.</b></div><div class="sk-container" hidden=""><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="sk-estimator-id-1" type="checkbox" checked=""><label for="sk-estimator-id-1" class="sk-toggleable__label sk-toggleable__label-arrow">DecisionTreeClassifier</label><div class="sk-toggleable__content"><pre>DecisionTreeClassifier()</pre></div></div></div></div></div>
</div>
</div>
<div class="cell" data-execution_count="6">
<div class="sourceCode cell-code" id="cb6" style="background: #f1f3f5;"><pre class="sourceCode python code-with-copy"><code class="sourceCode python"><span id="cb6-1">dt.score(validation_df[[<span class="st" style="color: #20794D;">'feature1'</span>, <span class="st" style="color: #20794D;">'feature2'</span>, <span class="st" style="color: #20794D;">'feature3'</span>, <span class="st" style="color: #20794D;">'feature4'</span>]], validation_df[<span class="st" style="color: #20794D;">'target'</span>])</span></code></pre></div>
<div class="cell-output cell-output-display" data-execution_count="6">
<pre><code>0.5333333333333333</code></pre>
</div>
</div>
<div class="cell" data-execution_count="7">
<div class="sourceCode cell-code" id="cb8" style="background: #f1f3f5;"><pre class="sourceCode python code-with-copy"><code class="sourceCode python"><span id="cb8-1">dt <span class="op" style="color: #5E5E5E;">=</span> DecisionTreeClassifier(criterion<span class="op" style="color: #5E5E5E;">=</span><span class="st" style="color: #20794D;">'entropy'</span>, max_depth<span class="op" style="color: #5E5E5E;">=</span><span class="dv" style="color: #AD0000;">2</span>)</span>
<span id="cb8-2">dt.fit(train_df[[<span class="st" style="color: #20794D;">'feature1'</span>, <span class="st" style="color: #20794D;">'feature2'</span>, <span class="st" style="color: #20794D;">'feature3'</span>, <span class="st" style="color: #20794D;">'feature4'</span>]], train_df[<span class="st" style="color: #20794D;">'target'</span>])</span>
<span id="cb8-3">dt.score(validation_df[[<span class="st" style="color: #20794D;">'feature1'</span>, <span class="st" style="color: #20794D;">'feature2'</span>, <span class="st" style="color: #20794D;">'feature3'</span>, <span class="st" style="color: #20794D;">'feature4'</span>]], validation_df[<span class="st" style="color: #20794D;">'target'</span>])</span></code></pre></div>
<div class="cell-output cell-output-display" data-execution_count="7">
<pre><code>0.5666666666666667</code></pre>
</div>
</div>
<div class="cell" data-execution_count="9">
<div class="sourceCode cell-code" id="cb10" style="background: #f1f3f5;"><pre class="sourceCode python code-with-copy"><code class="sourceCode python"><span id="cb10-1">hyperparams <span class="op" style="color: #5E5E5E;">=</span> {<span class="st" style="color: #20794D;">'criterion'</span>: [<span class="st" style="color: #20794D;">'gini'</span>, <span class="st" style="color: #20794D;">'entropy'</span>],</span>
<span id="cb10-2">               <span class="st" style="color: #20794D;">'max_depth'</span>: [<span class="dv" style="color: #AD0000;">2</span>, <span class="dv" style="color: #AD0000;">3</span>, <span class="dv" style="color: #AD0000;">4</span>, <span class="dv" style="color: #AD0000;">5</span>, <span class="dv" style="color: #AD0000;">6</span>, <span class="dv" style="color: #AD0000;">7</span>, <span class="dv" style="color: #AD0000;">8</span>, <span class="dv" style="color: #AD0000;">9</span>, <span class="dv" style="color: #AD0000;">10</span>],</span>
<span id="cb10-3">               <span class="st" style="color: #20794D;">'min_samples_split'</span>: [<span class="dv" style="color: #AD0000;">2</span>, <span class="dv" style="color: #AD0000;">3</span>, <span class="dv" style="color: #AD0000;">4</span>, <span class="dv" style="color: #AD0000;">5</span>, <span class="dv" style="color: #AD0000;">6</span>, <span class="dv" style="color: #AD0000;">7</span>, <span class="dv" style="color: #AD0000;">8</span>, <span class="dv" style="color: #AD0000;">9</span>, <span class="dv" style="color: #AD0000;">10</span>]}</span></code></pre></div>
</div>
<div class="cell" data-execution_count="10">
<div class="sourceCode cell-code" id="cb11" style="background: #f1f3f5;"><pre class="sourceCode python code-with-copy"><code class="sourceCode python"><span id="cb11-1">out <span class="op" style="color: #5E5E5E;">=</span> {}</span>
<span id="cb11-2"><span class="cf" style="color: #003B4F;">for</span> c <span class="kw" style="color: #003B4F;">in</span> hyperparams[<span class="st" style="color: #20794D;">'criterion'</span>]:</span>
<span id="cb11-3">    <span class="cf" style="color: #003B4F;">for</span> d <span class="kw" style="color: #003B4F;">in</span> hyperparams[<span class="st" style="color: #20794D;">'max_depth'</span>]:</span>
<span id="cb11-4">        <span class="cf" style="color: #003B4F;">for</span> s <span class="kw" style="color: #003B4F;">in</span> hyperparams[<span class="st" style="color: #20794D;">'min_samples_split'</span>]:</span>
<span id="cb11-5">            dt <span class="op" style="color: #5E5E5E;">=</span> DecisionTreeClassifier(criterion<span class="op" style="color: #5E5E5E;">=</span>c, max_depth<span class="op" style="color: #5E5E5E;">=</span>d, min_samples_split<span class="op" style="color: #5E5E5E;">=</span>s)</span>
<span id="cb11-6">            dt.fit(train_df[[<span class="st" style="color: #20794D;">'feature1'</span>, <span class="st" style="color: #20794D;">'feature2'</span>, <span class="st" style="color: #20794D;">'feature3'</span>, <span class="st" style="color: #20794D;">'feature4'</span>]], train_df[<span class="st" style="color: #20794D;">'target'</span>])</span>
<span id="cb11-7">            out[(c, d, s)] <span class="op" style="color: #5E5E5E;">=</span> dt.score(validation_df[[<span class="st" style="color: #20794D;">'feature1'</span>, <span class="st" style="color: #20794D;">'feature2'</span>, <span class="st" style="color: #20794D;">'feature3'</span>, <span class="st" style="color: #20794D;">'feature4'</span>]], validation_df[<span class="st" style="color: #20794D;">'target'</span>])</span></code></pre></div>
</div>
<div class="cell" data-execution_count="11">
<div class="sourceCode cell-code" id="cb12" style="background: #f1f3f5;"><pre class="sourceCode python code-with-copy"><code class="sourceCode python"><span id="cb12-1">hp_ser <span class="op" style="color: #5E5E5E;">=</span> pd.Series(out)</span>
<span id="cb12-2">hp_ser.sort_values(ascending<span class="op" style="color: #5E5E5E;">=</span><span class="va" style="color: #111111;">False</span>)</span></code></pre></div>
<div class="cell-output cell-output-display" data-execution_count="11">
<pre><code>entropy  10  10    0.766667
         7   7     0.766667
         9   8     0.766667
         8   10    0.766667
             9     0.766667
                     ...   
gini     10  5     0.500000
         8   3     0.500000
         7   4     0.500000
             3     0.500000
         5   2     0.500000
Length: 162, dtype: float64</code></pre>
</div>
</div>
<div class="cell" data-execution_count="12">
<div class="sourceCode cell-code" id="cb14" style="background: #f1f3f5;"><pre class="sourceCode python code-with-copy"><code class="sourceCode python"><span id="cb14-1">hp_ser.idxmax()</span></code></pre></div>
<div class="cell-output cell-output-display" data-execution_count="12">
<pre><code>('entropy', 4, 6)</code></pre>
</div>
</div>
<div class="cell" data-execution_count="13">
<div class="sourceCode cell-code" id="cb16" style="background: #f1f3f5;"><pre class="sourceCode python code-with-copy"><code class="sourceCode python"><span id="cb16-1">best_dt <span class="op" style="color: #5E5E5E;">=</span> DecisionTreeClassifier(criterion<span class="op" style="color: #5E5E5E;">=</span><span class="st" style="color: #20794D;">'entropy'</span>, max_depth<span class="op" style="color: #5E5E5E;">=</span><span class="dv" style="color: #AD0000;">4</span>, min_samples_split<span class="op" style="color: #5E5E5E;">=</span><span class="dv" style="color: #AD0000;">6</span>)</span></code></pre></div>
</div>
<div class="cell" data-execution_count="14">
<div class="sourceCode cell-code" id="cb17" style="background: #f1f3f5;"><pre class="sourceCode python code-with-copy"><code class="sourceCode python"><span id="cb17-1">best_dt.fit(df[:<span class="dv" style="color: #AD0000;">80</span>][[<span class="st" style="color: #20794D;">'feature1'</span>, <span class="st" style="color: #20794D;">'feature2'</span>, <span class="st" style="color: #20794D;">'feature3'</span>, <span class="st" style="color: #20794D;">'feature4'</span>]], df[:<span class="dv" style="color: #AD0000;">80</span>][<span class="st" style="color: #20794D;">'target'</span>])</span></code></pre></div>
<div class="cell-output cell-output-display" data-execution_count="14">
<style>#sk-container-id-2 {color: black;background-color: white;}#sk-container-id-2 pre{padding: 0;}#sk-container-id-2 div.sk-toggleable {background-color: white;}#sk-container-id-2 label.sk-toggleable__label {cursor: pointer;display: block;width: 100%;margin-bottom: 0;padding: 0.3em;box-sizing: border-box;text-align: center;}#sk-container-id-2 label.sk-toggleable__label-arrow:before {content: "▸";float: left;margin-right: 0.25em;color: #696969;}#sk-container-id-2 label.sk-toggleable__label-arrow:hover:before {color: black;}#sk-container-id-2 div.sk-estimator:hover label.sk-toggleable__label-arrow:before {color: black;}#sk-container-id-2 div.sk-toggleable__content {max-height: 0;max-width: 0;overflow: hidden;text-align: left;background-color: #f0f8ff;}#sk-container-id-2 div.sk-toggleable__content pre {margin: 0.2em;color: black;border-radius: 0.25em;background-color: #f0f8ff;}#sk-container-id-2 input.sk-toggleable__control:checked~div.sk-toggleable__content {max-height: 200px;max-width: 100%;overflow: auto;}#sk-container-id-2 input.sk-toggleable__control:checked~label.sk-toggleable__label-arrow:before {content: "▾";}#sk-container-id-2 div.sk-estimator input.sk-toggleable__control:checked~label.sk-toggleable__label {background-color: #d4ebff;}#sk-container-id-2 div.sk-label input.sk-toggleable__control:checked~label.sk-toggleable__label {background-color: #d4ebff;}#sk-container-id-2 input.sk-hidden--visually {border: 0;clip: rect(1px 1px 1px 1px);clip: rect(1px, 1px, 1px, 1px);height: 1px;margin: -1px;overflow: hidden;padding: 0;position: absolute;width: 1px;}#sk-container-id-2 div.sk-estimator {font-family: monospace;background-color: #f0f8ff;border: 1px dotted black;border-radius: 0.25em;box-sizing: border-box;margin-bottom: 0.5em;}#sk-container-id-2 div.sk-estimator:hover {background-color: #d4ebff;}#sk-container-id-2 div.sk-parallel-item::after {content: "";width: 100%;border-bottom: 1px solid gray;flex-grow: 1;}#sk-container-id-2 div.sk-label:hover label.sk-toggleable__label {background-color: #d4ebff;}#sk-container-id-2 div.sk-serial::before {content: "";position: absolute;border-left: 1px solid gray;box-sizing: border-box;top: 0;bottom: 0;left: 50%;z-index: 0;}#sk-container-id-2 div.sk-serial {display: flex;flex-direction: column;align-items: center;background-color: white;padding-right: 0.2em;padding-left: 0.2em;position: relative;}#sk-container-id-2 div.sk-item {position: relative;z-index: 1;}#sk-container-id-2 div.sk-parallel {display: flex;align-items: stretch;justify-content: center;background-color: white;position: relative;}#sk-container-id-2 div.sk-item::before, #sk-container-id-2 div.sk-parallel-item::before {content: "";position: absolute;border-left: 1px solid gray;box-sizing: border-box;top: 0;bottom: 0;left: 50%;z-index: -1;}#sk-container-id-2 div.sk-parallel-item {display: flex;flex-direction: column;z-index: 1;position: relative;background-color: white;}#sk-container-id-2 div.sk-parallel-item:first-child::after {align-self: flex-end;width: 50%;}#sk-container-id-2 div.sk-parallel-item:last-child::after {align-self: flex-start;width: 50%;}#sk-container-id-2 div.sk-parallel-item:only-child::after {width: 0;}#sk-container-id-2 div.sk-dashed-wrapped {border: 1px dashed gray;margin: 0 0.4em 0.5em 0.4em;box-sizing: border-box;padding-bottom: 0.4em;background-color: white;}#sk-container-id-2 div.sk-label label {font-family: monospace;font-weight: bold;display: inline-block;line-height: 1.2em;}#sk-container-id-2 div.sk-label-container {text-align: center;}#sk-container-id-2 div.sk-container {/* jupyter's `normalize.less` sets `[hidden] { display: none; }` but bootstrap.min.css set `[hidden] { display: none !important; }` so we also need the `!important` here to be able to override the default hidden behavior on the sphinx rendered scikit-learn.org. See: https://github.com/scikit-learn/scikit-learn/issues/21755 */display: inline-block !important;position: relative;}#sk-container-id-2 div.sk-text-repr-fallback {display: none;}</style><div id="sk-container-id-2" class="sk-top-container"><div class="sk-text-repr-fallback"><pre>DecisionTreeClassifier(criterion='entropy', max_depth=4, min_samples_split=6)</pre><b>In a Jupyter environment, please rerun this cell to show the HTML representation or trust the notebook. <br>On GitHub, the HTML representation is unable to render, please try loading this page with nbviewer.org.</b></div><div class="sk-container" hidden=""><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="sk-estimator-id-2" type="checkbox" checked=""><label for="sk-estimator-id-2" class="sk-toggleable__label sk-toggleable__label-arrow">DecisionTreeClassifier</label><div class="sk-toggleable__content"><pre>DecisionTreeClassifier(criterion='entropy', max_depth=4, min_samples_split=6)</pre></div></div></div></div></div>
</div>
</div>
<div class="cell" data-execution_count="16">
<div class="sourceCode cell-code" id="cb18" style="background: #f1f3f5;"><pre class="sourceCode python code-with-copy"><code class="sourceCode python"><span id="cb18-1">best_dt.score(df[<span class="dv" style="color: #AD0000;">80</span>:][[<span class="st" style="color: #20794D;">'feature1'</span>, <span class="st" style="color: #20794D;">'feature2'</span>, <span class="st" style="color: #20794D;">'feature3'</span>, <span class="st" style="color: #20794D;">'feature4'</span>]], df[<span class="dv" style="color: #AD0000;">80</span>:][<span class="st" style="color: #20794D;">'target'</span>])</span></code></pre></div>
<div class="cell-output cell-output-display" data-execution_count="16">
<pre><code>0.45</code></pre>
</div>
</div>
</section>
<section id="without-using-multiple-nested-loops" class="level4">
<h4 class="anchored" data-anchor-id="without-using-multiple-nested-loops">Without using multiple nested loops</h4>
<div class="cell" data-execution_count="20">
<div class="sourceCode cell-code" id="cb20" style="background: #f1f3f5;"><pre class="sourceCode python code-with-copy"><code class="sourceCode python"><span id="cb20-1"><span class="bu" style="color: null;">print</span>(hyperparams.items(), <span class="bu" style="color: null;">len</span>(hyperparams.items()))</span></code></pre></div>
<div class="cell-output cell-output-stdout">
<pre><code>dict_items([('criterion', ['gini', 'entropy']), ('max_depth', [2, 3, 4, 5, 6, 7, 8, 9, 10]), ('min_samples_split', [2, 3, 4, 5, 6, 7, 8, 9, 10])]) 3</code></pre>
</div>
</div>
<div class="cell" data-execution_count="17">
<div class="sourceCode cell-code" id="cb22" style="background: #f1f3f5;"><pre class="sourceCode python code-with-copy"><code class="sourceCode python"><span id="cb22-1"><span class="kw" style="color: #003B4F;">def</span> print_vec(x, y, z):</span>
<span id="cb22-2">    <span class="bu" style="color: null;">print</span>(<span class="ss" style="color: #20794D;">f"[</span><span class="sc" style="color: #5E5E5E;">{</span>x<span class="sc" style="color: #5E5E5E;">}</span><span class="ss" style="color: #20794D;"> </span><span class="ch" style="color: #20794D;">\n</span><span class="sc" style="color: #5E5E5E;">{</span>y<span class="sc" style="color: #5E5E5E;">}</span><span class="ss" style="color: #20794D;"> </span><span class="ch" style="color: #20794D;">\n</span><span class="sc" style="color: #5E5E5E;">{</span>z<span class="sc" style="color: #5E5E5E;">}</span><span class="ss" style="color: #20794D;">]"</span>)</span>
<span id="cb22-3">print_vec(<span class="op" style="color: #5E5E5E;">*</span>hyperparams.items())</span></code></pre></div>
<div class="cell-output cell-output-stdout">
<pre><code>[('criterion', ['gini', 'entropy']) 
('max_depth', [2, 3, 4, 5, 6, 7, 8, 9, 10]) 
('min_samples_split', [2, 3, 4, 5, 6, 7, 8, 9, 10])]</code></pre>
</div>
</div>
<div class="cell" data-execution_count="18">
<div class="sourceCode cell-code" id="cb24" style="background: #f1f3f5;"><pre class="sourceCode python code-with-copy"><code class="sourceCode python"><span id="cb24-1"><span class="bu" style="color: null;">list</span>(<span class="bu" style="color: null;">zip</span>(<span class="op" style="color: #5E5E5E;">*</span>hyperparams.items()))</span></code></pre></div>
<div class="cell-output cell-output-display" data-execution_count="18">
<pre><code>[('criterion', 'max_depth', 'min_samples_split'),
 (['gini', 'entropy'],
  [2, 3, 4, 5, 6, 7, 8, 9, 10],
  [2, 3, 4, 5, 6, 7, 8, 9, 10])]</code></pre>
</div>
</div>
<div class="cell" data-execution_count="19">
<div class="sourceCode cell-code" id="cb26" style="background: #f1f3f5;"><pre class="sourceCode python code-with-copy"><code class="sourceCode python"><span id="cb26-1">keys, values <span class="op" style="color: #5E5E5E;">=</span> <span class="bu" style="color: null;">zip</span>(<span class="op" style="color: #5E5E5E;">*</span>hyperparams.items())</span></code></pre></div>
</div>
<div class="cell" data-execution_count="20">
<div class="sourceCode cell-code" id="cb27" style="background: #f1f3f5;"><pre class="sourceCode python code-with-copy"><code class="sourceCode python"><span id="cb27-1">keys</span></code></pre></div>
<div class="cell-output cell-output-display" data-execution_count="20">
<pre><code>('criterion', 'max_depth', 'min_samples_split')</code></pre>
</div>
</div>
<div class="cell" data-execution_count="21">
<div class="sourceCode cell-code" id="cb29" style="background: #f1f3f5;"><pre class="sourceCode python code-with-copy"><code class="sourceCode python"><span id="cb29-1">values</span></code></pre></div>
<div class="cell-output cell-output-display" data-execution_count="21">
<pre><code>(['gini', 'entropy'],
 [2, 3, 4, 5, 6, 7, 8, 9, 10],
 [2, 3, 4, 5, 6, 7, 8, 9, 10])</code></pre>
</div>
</div>
<div class="cell" data-execution_count="22">
<div class="sourceCode cell-code" id="cb31" style="background: #f1f3f5;"><pre class="sourceCode python code-with-copy"><code class="sourceCode python"><span id="cb31-1"><span class="im" style="color: #00769E;">import</span> itertools</span>
<span id="cb31-2"><span class="bu" style="color: null;">list</span>(itertools.product(<span class="op" style="color: #5E5E5E;">*</span>values))[::<span class="dv" style="color: #AD0000;">10</span>]</span></code></pre></div>
<div class="cell-output cell-output-display" data-execution_count="22">
<pre><code>[('gini', 2, 2),
 ('gini', 3, 3),
 ('gini', 4, 4),
 ('gini', 5, 5),
 ('gini', 6, 6),
 ('gini', 7, 7),
 ('gini', 8, 8),
 ('gini', 9, 9),
 ('gini', 10, 10),
 ('entropy', 3, 2),
 ('entropy', 4, 3),
 ('entropy', 5, 4),
 ('entropy', 6, 5),
 ('entropy', 7, 6),
 ('entropy', 8, 7),
 ('entropy', 9, 8),
 ('entropy', 10, 9)]</code></pre>
</div>
</div>
<div class="cell" data-execution_count="23">
<div class="sourceCode cell-code" id="cb33" style="background: #f1f3f5;"><pre class="sourceCode python code-with-copy"><code class="sourceCode python"><span id="cb33-1">v <span class="op" style="color: #5E5E5E;">=</span> <span class="bu" style="color: null;">next</span>(itertools.product(<span class="op" style="color: #5E5E5E;">*</span>values))</span>
<span id="cb33-2"><span class="bu" style="color: null;">print</span>(v)</span></code></pre></div>
<div class="cell-output cell-output-stdout">
<pre><code>('gini', 2, 2)</code></pre>
</div>
</div>
<div class="cell" data-execution_count="24">
<div class="sourceCode cell-code" id="cb35" style="background: #f1f3f5;"><pre class="sourceCode python code-with-copy"><code class="sourceCode python"><span id="cb35-1">print_vec(<span class="op" style="color: #5E5E5E;">*</span><span class="bu" style="color: null;">zip</span>(keys, v))</span></code></pre></div>
<div class="cell-output cell-output-stdout">
<pre><code>[('criterion', 'gini') 
('max_depth', 2) 
('min_samples_split', 2)]</code></pre>
</div>
</div>
<div class="cell" data-execution_count="25">
<div class="sourceCode cell-code" id="cb37" style="background: #f1f3f5;"><pre class="sourceCode python code-with-copy"><code class="sourceCode python"><span id="cb37-1"><span class="kw" style="color: #003B4F;">def</span> print_dict(<span class="op" style="color: #5E5E5E;">**</span>kwargs):</span>
<span id="cb37-2">    <span class="bu" style="color: null;">print</span>(kwargs)</span>
<span id="cb37-3"></span>
<span id="cb37-4">print_dict(<span class="op" style="color: #5E5E5E;">**</span>(<span class="bu" style="color: null;">dict</span>(<span class="bu" style="color: null;">zip</span>(keys, v))))</span></code></pre></div>
<div class="cell-output cell-output-stdout">
<pre><code>{'criterion': 'gini', 'max_depth': 2, 'min_samples_split': 2}</code></pre>
</div>
</div>
<div class="cell" data-execution_count="26">
<div class="sourceCode cell-code" id="cb39" style="background: #f1f3f5;"><pre class="sourceCode python code-with-copy"><code class="sourceCode python"><span id="cb39-1">out <span class="op" style="color: #5E5E5E;">=</span> {}</span>
<span id="cb39-2"><span class="cf" style="color: #003B4F;">for</span> v <span class="kw" style="color: #003B4F;">in</span> itertools.product(<span class="op" style="color: #5E5E5E;">*</span>values):</span>
<span id="cb39-3">    params <span class="op" style="color: #5E5E5E;">=</span> <span class="bu" style="color: null;">dict</span>(<span class="bu" style="color: null;">zip</span>(keys, v))</span>
<span id="cb39-4">    dt<span class="op" style="color: #5E5E5E;">=</span> DecisionTreeClassifier(<span class="op" style="color: #5E5E5E;">**</span>params)</span>
<span id="cb39-5">    dt.fit(train_df[[<span class="st" style="color: #20794D;">'feature1'</span>, <span class="st" style="color: #20794D;">'feature2'</span>, <span class="st" style="color: #20794D;">'feature3'</span>, <span class="st" style="color: #20794D;">'feature4'</span>]], train_df[<span class="st" style="color: #20794D;">'target'</span>])</span>
<span id="cb39-6">    out[(params[<span class="st" style="color: #20794D;">'criterion'</span>], params[<span class="st" style="color: #20794D;">'max_depth'</span>], params[<span class="st" style="color: #20794D;">'min_samples_split'</span>])] <span class="op" style="color: #5E5E5E;">=</span> dt.score(validation_df[[<span class="st" style="color: #20794D;">'feature1'</span>, <span class="st" style="color: #20794D;">'feature2'</span>, <span class="st" style="color: #20794D;">'feature3'</span>, <span class="st" style="color: #20794D;">'feature4'</span>]], validation_df[<span class="st" style="color: #20794D;">'target'</span>])</span>
<span id="cb39-7">    </span></code></pre></div>
</div>
<div class="cell" data-execution_count="27">
<div class="sourceCode cell-code" id="cb40" style="background: #f1f3f5;"><pre class="sourceCode python code-with-copy"><code class="sourceCode python"><span id="cb40-1">pd.Series(out).sort_values(ascending<span class="op" style="color: #5E5E5E;">=</span><span class="va" style="color: #111111;">False</span>)</span></code></pre></div>
<div class="cell-output cell-output-display" data-execution_count="27">
<pre><code>entropy  10  10    0.766667
         7   7     0.766667
         9   8     0.766667
         8   10    0.766667
             9     0.766667
                     ...   
         3   3     0.500000
             4     0.500000
             5     0.500000
gini     10  5     0.500000
             3     0.500000
Length: 162, dtype: float64</code></pre>
</div>
</div>


</section>

 ]]></description>
  <guid>https://github.com/nipunbatra/ml2023/notebooks/posts/hyperparameter-1.html</guid>
  <pubDate>Tue, 17 Jan 2023 00:00:00 GMT</pubDate>
</item>
<item>
  <title>Some Python Utilities</title>
  <dc:creator>Nipun Batra</dc:creator>
  <link>https://github.com/nipunbatra/ml2023/notebooks/posts/python-utils.html</link>
  <description><![CDATA[ 



<section id="function-argument-unpacking" class="level4">
<h4 class="anchored" data-anchor-id="function-argument-unpacking">Function Argument Unpacking</h4>
<p>Reference: https://www.youtube.com/watch?v=YWY4BZi_o28</p>
<div class="cell" data-execution_count="1">
<div class="sourceCode cell-code" id="cb1" style="background: #f1f3f5;"><pre class="sourceCode python code-with-copy"><code class="sourceCode python"><span id="cb1-1"><span class="kw" style="color: #003B4F;">def</span> print_vec(x, y, z):</span>
<span id="cb1-2">    <span class="bu" style="color: null;">print</span>(<span class="ss" style="color: #20794D;">f"[</span><span class="sc" style="color: #5E5E5E;">{</span>x<span class="sc" style="color: #5E5E5E;">}</span><span class="ss" style="color: #20794D;"> </span><span class="ch" style="color: #20794D;">\n</span><span class="sc" style="color: #5E5E5E;">{</span>y<span class="sc" style="color: #5E5E5E;">}</span><span class="ss" style="color: #20794D;"> </span><span class="ch" style="color: #20794D;">\n</span><span class="sc" style="color: #5E5E5E;">{</span>z<span class="sc" style="color: #5E5E5E;">}</span><span class="ss" style="color: #20794D;">]"</span>)</span></code></pre></div>
</div>
<div class="cell" data-execution_count="2">
<div class="sourceCode cell-code" id="cb2" style="background: #f1f3f5;"><pre class="sourceCode python code-with-copy"><code class="sourceCode python"><span id="cb2-1">print_vec(<span class="dv" style="color: #AD0000;">1</span>, <span class="dv" style="color: #AD0000;">2</span>, <span class="dv" style="color: #AD0000;">3</span>)</span></code></pre></div>
<div class="cell-output cell-output-stdout">
<pre><code>[1 
2 
3]</code></pre>
</div>
</div>
<div class="cell" data-execution_count="5">
<div class="sourceCode cell-code" id="cb4" style="background: #f1f3f5;"><pre class="sourceCode python code-with-copy"><code class="sourceCode python"><span id="cb4-1">tuple_vec <span class="op" style="color: #5E5E5E;">=</span> (<span class="dv" style="color: #AD0000;">1</span>, <span class="dv" style="color: #AD0000;">0</span>, <span class="dv" style="color: #AD0000;">1</span>)</span>
<span id="cb4-2"><span class="co" style="color: #5E5E5E;">#print_vec(tuple_vec)</span></span>
<span id="cb4-3">print_vec(tuple_vec[<span class="dv" style="color: #AD0000;">0</span>], tuple_vec[<span class="dv" style="color: #AD0000;">1</span>], tuple_vec[<span class="dv" style="color: #AD0000;">2</span>])</span></code></pre></div>
<div class="cell-output cell-output-stdout">
<pre><code>[1 
0 
1]</code></pre>
</div>
</div>
<div class="cell" data-execution_count="6">
<div class="sourceCode cell-code" id="cb6" style="background: #f1f3f5;"><pre class="sourceCode python code-with-copy"><code class="sourceCode python"><span id="cb6-1">list_vec <span class="op" style="color: #5E5E5E;">=</span> [<span class="dv" style="color: #AD0000;">1</span>, <span class="dv" style="color: #AD0000;">0</span>, <span class="dv" style="color: #AD0000;">1</span>]</span>
<span id="cb6-2"></span>
<span id="cb6-3">print_vec(tuple_vec[<span class="dv" style="color: #AD0000;">0</span>], tuple_vec[<span class="dv" style="color: #AD0000;">1</span>], tuple_vec[<span class="dv" style="color: #AD0000;">2</span>])</span>
<span id="cb6-4"><span class="bu" style="color: null;">print</span>(<span class="st" style="color: #20794D;">"*"</span><span class="op" style="color: #5E5E5E;">*</span><span class="dv" style="color: #AD0000;">20</span>)</span>
<span id="cb6-5">print_vec(<span class="op" style="color: #5E5E5E;">*</span>tuple_vec)</span>
<span id="cb6-6"><span class="bu" style="color: null;">print</span>(<span class="st" style="color: #20794D;">"*"</span><span class="op" style="color: #5E5E5E;">*</span><span class="dv" style="color: #AD0000;">20</span>)</span>
<span id="cb6-7"></span>
<span id="cb6-8">print_vec(<span class="op" style="color: #5E5E5E;">*</span>list_vec)</span></code></pre></div>
<div class="cell-output cell-output-stdout">
<pre><code>[1 
0 
1]
********************
[1 
0 
1]
********************
[1 
0 
1]</code></pre>
</div>
</div>
<div class="cell" data-execution_count="7">
<div class="sourceCode cell-code" id="cb8" style="background: #f1f3f5;"><pre class="sourceCode python code-with-copy"><code class="sourceCode python"><span id="cb8-1">dictionary_vec <span class="op" style="color: #5E5E5E;">=</span> {<span class="st" style="color: #20794D;">"x"</span>: <span class="dv" style="color: #AD0000;">1</span>, <span class="st" style="color: #20794D;">"y"</span>: <span class="dv" style="color: #AD0000;">0</span>, <span class="st" style="color: #20794D;">"z"</span>: <span class="dv" style="color: #AD0000;">1</span>}</span>
<span id="cb8-2">print_vec(<span class="op" style="color: #5E5E5E;">**</span>dictionary_vec)</span></code></pre></div>
<div class="cell-output cell-output-stdout">
<pre><code>[1 
0 
1]</code></pre>
</div>
</div>
<div class="cell" data-execution_count="8">
<div class="sourceCode cell-code" id="cb10" style="background: #f1f3f5;"><pre class="sourceCode python code-with-copy"><code class="sourceCode python"><span id="cb10-1">dictionary_vec <span class="op" style="color: #5E5E5E;">=</span> {<span class="st" style="color: #20794D;">"a"</span>: <span class="dv" style="color: #AD0000;">1</span>, <span class="st" style="color: #20794D;">"b"</span>: <span class="dv" style="color: #AD0000;">0</span>, <span class="st" style="color: #20794D;">"c"</span>:<span class="dv" style="color: #AD0000;">1</span>}</span>
<span id="cb10-2">print_vec(<span class="op" style="color: #5E5E5E;">**</span>dictionary_vec)</span></code></pre></div>
<div class="cell-output cell-output-error">
<pre><code>TypeError: print_vec() got an unexpected keyword argument 'a'</code></pre>
</div>
</div>
<div class="cell" data-execution_count="6">
<div class="sourceCode cell-code" id="cb12" style="background: #f1f3f5;"><pre class="sourceCode python code-with-copy"><code class="sourceCode python"><span id="cb12-1"><span class="bu" style="color: null;">print</span>(<span class="op" style="color: #5E5E5E;">*</span>dictionary_vec)</span></code></pre></div>
<div class="cell-output cell-output-stdout">
<pre><code>a b c</code></pre>
</div>
</div>
</section>
<section id="zip" class="level4">
<h4 class="anchored" data-anchor-id="zip">Zip</h4>
<div class="cell" data-execution_count="9">
<div class="sourceCode cell-code" id="cb14" style="background: #f1f3f5;"><pre class="sourceCode python code-with-copy"><code class="sourceCode python"><span id="cb14-1"><span class="bu" style="color: null;">list</span>(<span class="bu" style="color: null;">zip</span>([<span class="dv" style="color: #AD0000;">1</span>, <span class="dv" style="color: #AD0000;">2</span>, <span class="dv" style="color: #AD0000;">3</span>], [<span class="st" style="color: #20794D;">'a'</span>, <span class="st" style="color: #20794D;">'b'</span>, <span class="st" style="color: #20794D;">'c'</span>], [<span class="dv" style="color: #AD0000;">7</span>, <span class="dv" style="color: #AD0000;">8</span>, <span class="dv" style="color: #AD0000;">9</span>]))</span></code></pre></div>
<div class="cell-output cell-output-display" data-execution_count="9">
<pre><code>[(1, 'a', 7), (2, 'b', 8), (3, 'c', 9)]</code></pre>
</div>
</div>
</section>
<section id="itertools-product" class="level4">
<h4 class="anchored" data-anchor-id="itertools-product">Itertools Product</h4>
<div class="cell" data-execution_count="10">
<div class="sourceCode cell-code" id="cb16" style="background: #f1f3f5;"><pre class="sourceCode python code-with-copy"><code class="sourceCode python"><span id="cb16-1"><span class="im" style="color: #00769E;">import</span> itertools</span>
<span id="cb16-2"><span class="bu" style="color: null;">list</span>(itertools.product([<span class="dv" style="color: #AD0000;">1</span>, <span class="dv" style="color: #AD0000;">2</span>], [<span class="st" style="color: #20794D;">'a'</span>, <span class="st" style="color: #20794D;">'b'</span>, <span class="st" style="color: #20794D;">'c'</span>], [<span class="dv" style="color: #AD0000;">7</span>, <span class="dv" style="color: #AD0000;">8</span>, <span class="dv" style="color: #AD0000;">9</span>]))</span></code></pre></div>
<div class="cell-output cell-output-display" data-execution_count="10">
<pre><code>[(1, 'a', 7),
 (1, 'a', 8),
 (1, 'a', 9),
 (1, 'b', 7),
 (1, 'b', 8),
 (1, 'b', 9),
 (1, 'c', 7),
 (1, 'c', 8),
 (1, 'c', 9),
 (2, 'a', 7),
 (2, 'a', 8),
 (2, 'a', 9),
 (2, 'b', 7),
 (2, 'b', 8),
 (2, 'b', 9),
 (2, 'c', 7),
 (2, 'c', 8),
 (2, 'c', 9)]</code></pre>
</div>
</div>


</section>

 ]]></description>
  <guid>https://github.com/nipunbatra/ml2023/notebooks/posts/python-utils.html</guid>
  <pubDate>Tue, 17 Jan 2023 00:00:00 GMT</pubDate>
</item>
<item>
  <title>DT Regression</title>
  <dc:creator>Nipun Batra</dc:creator>
  <link>https://github.com/nipunbatra/ml2023/notebooks/posts/dt-reg.html</link>
  <description><![CDATA[ 



<div class="cell" data-execution_count="19">
<div class="sourceCode cell-code" id="cb1" style="background: #f1f3f5;"><pre class="sourceCode python code-with-copy"><code class="sourceCode python"><span id="cb1-1"><span class="im" style="color: #00769E;">import</span> pandas <span class="im" style="color: #00769E;">as</span> pd</span></code></pre></div>
</div>
<div class="cell" data-execution_count="20">
<div class="sourceCode cell-code" id="cb2" style="background: #f1f3f5;"><pre class="sourceCode python code-with-copy"><code class="sourceCode python"><span id="cb2-1">df <span class="op" style="color: #5E5E5E;">=</span> pd.read_csv(<span class="st" style="color: #20794D;">"mins-played.csv"</span>)</span></code></pre></div>
</div>
<div class="cell" data-execution_count="21">
<div class="sourceCode cell-code" id="cb3" style="background: #f1f3f5;"><pre class="sourceCode python code-with-copy"><code class="sourceCode python"><span id="cb3-1">df</span></code></pre></div>
<div class="cell-output cell-output-display" data-execution_count="21">

<div>

<table class="dataframe table table-sm table-striped">
  <thead>
    <tr>
      <th></th>
      <th>Day</th>
      <th>Outlook</th>
      <th>Temp</th>
      <th>Humidity</th>
      <th>Wind</th>
      <th>Minutes Played</th>
    </tr>
  </thead>
  <tbody>
    <tr>
      <th>0</th>
      <td>D1</td>
      <td>Sunny</td>
      <td>Hot</td>
      <td>High</td>
      <td>Weak</td>
      <td>20</td>
    </tr>
    <tr>
      <th>1</th>
      <td>D2</td>
      <td>Sunny</td>
      <td>Hot</td>
      <td>High</td>
      <td>Strong</td>
      <td>24</td>
    </tr>
    <tr>
      <th>2</th>
      <td>D3</td>
      <td>Overcast</td>
      <td>Hot</td>
      <td>High</td>
      <td>Weak</td>
      <td>40</td>
    </tr>
    <tr>
      <th>3</th>
      <td>D4</td>
      <td>Rain</td>
      <td>Mild</td>
      <td>High</td>
      <td>Weak</td>
      <td>50</td>
    </tr>
    <tr>
      <th>4</th>
      <td>D5</td>
      <td>Rain</td>
      <td>Cool</td>
      <td>Normal</td>
      <td>Weak</td>
      <td>60</td>
    </tr>
    <tr>
      <th>5</th>
      <td>D6</td>
      <td>Rain</td>
      <td>Cool</td>
      <td>Normal</td>
      <td>Strong</td>
      <td>10</td>
    </tr>
    <tr>
      <th>6</th>
      <td>D7</td>
      <td>Overcast</td>
      <td>Cool</td>
      <td>Normal</td>
      <td>Strong</td>
      <td>4</td>
    </tr>
    <tr>
      <th>7</th>
      <td>D8</td>
      <td>Sunny</td>
      <td>Mild</td>
      <td>High</td>
      <td>Weak</td>
      <td>10</td>
    </tr>
    <tr>
      <th>8</th>
      <td>D9</td>
      <td>Sunny</td>
      <td>Cool</td>
      <td>Normal</td>
      <td>Weak</td>
      <td>60</td>
    </tr>
    <tr>
      <th>9</th>
      <td>D10</td>
      <td>Rain</td>
      <td>Mild</td>
      <td>Normal</td>
      <td>Weak</td>
      <td>40</td>
    </tr>
    <tr>
      <th>10</th>
      <td>D11</td>
      <td>Sunny</td>
      <td>Mild</td>
      <td>High</td>
      <td>Strong</td>
      <td>45</td>
    </tr>
    <tr>
      <th>11</th>
      <td>D12</td>
      <td>Overcast</td>
      <td>Mild</td>
      <td>High</td>
      <td>Strong</td>
      <td>40</td>
    </tr>
    <tr>
      <th>12</th>
      <td>D13</td>
      <td>Overcast</td>
      <td>Hot</td>
      <td>Normal</td>
      <td>Weak</td>
      <td>35</td>
    </tr>
    <tr>
      <th>13</th>
      <td>D14</td>
      <td>Rain</td>
      <td>Mild</td>
      <td>High</td>
      <td>Strong</td>
      <td>20</td>
    </tr>
  </tbody>
</table>
</div>
</div>
</div>
<div class="cell" data-execution_count="22">
<div class="sourceCode cell-code" id="cb4" style="background: #f1f3f5;"><pre class="sourceCode python code-with-copy"><code class="sourceCode python"><span id="cb4-1">df[<span class="st" style="color: #20794D;">"Minutes Played"</span>].std()</span></code></pre></div>
<div class="cell-output cell-output-display" data-execution_count="22">
<pre><code>18.3111087402348</code></pre>
</div>
</div>
<div class="cell" data-execution_count="25">
<div class="sourceCode cell-code" id="cb6" style="background: #f1f3f5;"><pre class="sourceCode python code-with-copy"><code class="sourceCode python"><span id="cb6-1"><span class="im" style="color: #00769E;">import</span> numpy <span class="im" style="color: #00769E;">as</span> np</span>
<span id="cb6-2"><span class="co" style="color: #5E5E5E;"># np.std(df["Minutes Played"].values)</span></span></code></pre></div>
</div>
<div class="cell" data-execution_count="26">
<div class="sourceCode cell-code" id="cb7" style="background: #f1f3f5;"><pre class="sourceCode python code-with-copy"><code class="sourceCode python"><span id="cb7-1">df.query(<span class="st" style="color: #20794D;">"Wind=='Weak'"</span>)[<span class="st" style="color: #20794D;">"Minutes Played"</span>].std()<span class="op" style="color: #5E5E5E;">*</span><span class="bu" style="color: null;">len</span>(df.query(<span class="st" style="color: #20794D;">"Wind=='Weak'"</span>))<span class="op" style="color: #5E5E5E;">/</span><span class="bu" style="color: null;">len</span>(df)</span></code></pre></div>
<div class="cell-output cell-output-display" data-execution_count="26">
<pre><code>10.180585192846463</code></pre>
</div>
</div>
<div class="cell" data-execution_count="27">
<div class="sourceCode cell-code" id="cb9" style="background: #f1f3f5;"><pre class="sourceCode python code-with-copy"><code class="sourceCode python"><span id="cb9-1">df.query(<span class="st" style="color: #20794D;">"Wind=='Strong'"</span>)[<span class="st" style="color: #20794D;">"Minutes Played"</span>].std()<span class="op" style="color: #5E5E5E;">*</span><span class="bu" style="color: null;">len</span>(df.query(<span class="st" style="color: #20794D;">"Wind=='Strong'"</span>))<span class="op" style="color: #5E5E5E;">/</span><span class="bu" style="color: null;">len</span>(df)</span></code></pre></div>
<div class="cell-output cell-output-display" data-execution_count="27">
<pre><code>6.933944897151599</code></pre>
</div>
</div>
<div class="cell" data-execution_count="29">
<div class="sourceCode cell-code" id="cb11" style="background: #f1f3f5;"><pre class="sourceCode python code-with-copy"><code class="sourceCode python"><span id="cb11-1">out <span class="op" style="color: #5E5E5E;">=</span> {}</span>
<span id="cb11-2"><span class="cf" style="color: #003B4F;">for</span> temp <span class="kw" style="color: #003B4F;">in</span> df[<span class="st" style="color: #20794D;">"Temp"</span>].unique():</span>
<span id="cb11-3">    <span class="bu" style="color: null;">print</span>(temp)</span>
<span id="cb11-4">    out[temp] <span class="op" style="color: #5E5E5E;">=</span> df.query(<span class="st" style="color: #20794D;">"Temp==@temp"</span>)[<span class="st" style="color: #20794D;">"Minutes Played"</span>].std()<span class="op" style="color: #5E5E5E;">*</span><span class="bu" style="color: null;">len</span>(df.query(<span class="st" style="color: #20794D;">"Temp==@temp"</span>))<span class="op" style="color: #5E5E5E;">/</span><span class="bu" style="color: null;">len</span>(df)</span>
<span id="cb11-5">    <span class="bu" style="color: null;">print</span>(out[temp])</span>
<span id="cb11-6">    <span class="bu" style="color: null;">print</span>()</span></code></pre></div>
<div class="cell-output cell-output-stdout">
<pre><code>Hot
2.6636888135137133

Mild
6.696785704762413

Cool
8.770699519880226
</code></pre>
</div>
</div>
<div class="cell" data-execution_count="18">
<div class="sourceCode cell-code" id="cb13" style="background: #f1f3f5;"><pre class="sourceCode python code-with-copy"><code class="sourceCode python"><span id="cb13-1">df[<span class="st" style="color: #20794D;">"Minutes Played"</span>].std() <span class="op" style="color: #5E5E5E;">-</span> pd.Series(out).<span class="bu" style="color: null;">sum</span>()</span></code></pre></div>
<div class="cell-output cell-output-display" data-execution_count="18">
<pre><code>0.17993470207844808</code></pre>
</div>
</div>



 ]]></description>
  <guid>https://github.com/nipunbatra/ml2023/notebooks/posts/dt-reg.html</guid>
  <pubDate>Thu, 12 Jan 2023 00:00:00 GMT</pubDate>
</item>
<item>
  <title>Pandas tips</title>
  <dc:creator>Nipun Batra</dc:creator>
  <link>https://github.com/nipunbatra/ml2023/notebooks/posts/pivot-cross.html</link>
  <description><![CDATA[ 



<div class="cell" data-execution_count="2">
<div class="sourceCode cell-code" id="cb1" style="background: #f1f3f5;"><pre class="sourceCode python code-with-copy"><code class="sourceCode python"><span id="cb1-1"><span class="im" style="color: #00769E;">import</span> pandas <span class="im" style="color: #00769E;">as</span> pd</span>
<span id="cb1-2"><span class="im" style="color: #00769E;">import</span> numpy <span class="im" style="color: #00769E;">as</span> np</span></code></pre></div>
</div>
<section id="dataset-creation" class="level3">
<h3 class="anchored" data-anchor-id="dataset-creation">Dataset creation</h3>
<div class="cell" data-execution_count="3">
<div class="sourceCode cell-code" id="cb2" style="background: #f1f3f5;"><pre class="sourceCode python code-with-copy"><code class="sourceCode python"><span id="cb2-1"><span class="co" style="color: #5E5E5E;"># Create a DataFrame for whether or not a person plays tennis. </span></span>
<span id="cb2-2"><span class="co" style="color: #5E5E5E;"># It has discrete features and 14 rows.</span></span>
<span id="cb2-3"></span>
<span id="cb2-4">df <span class="op" style="color: #5E5E5E;">=</span> pd.DataFrame({</span>
<span id="cb2-5">    <span class="st" style="color: #20794D;">'Outlook'</span>: [<span class="st" style="color: #20794D;">'Sunny'</span>, <span class="st" style="color: #20794D;">'Sunny'</span>, <span class="st" style="color: #20794D;">'Overcast'</span>, <span class="st" style="color: #20794D;">'Rain'</span>, <span class="st" style="color: #20794D;">'Rain'</span>, <span class="st" style="color: #20794D;">'Rain'</span>, <span class="st" style="color: #20794D;">'Overcast'</span>, <span class="st" style="color: #20794D;">'Sunny'</span>, <span class="st" style="color: #20794D;">'Sunny'</span>, <span class="st" style="color: #20794D;">'Rain'</span>, <span class="st" style="color: #20794D;">'Sunny'</span>, <span class="st" style="color: #20794D;">'Overcast'</span>, <span class="st" style="color: #20794D;">'Overcast'</span>, <span class="st" style="color: #20794D;">'Rain'</span>],</span>
<span id="cb2-6">    <span class="st" style="color: #20794D;">'Temperature'</span>: [<span class="st" style="color: #20794D;">'Hot'</span>, <span class="st" style="color: #20794D;">'Hot'</span>, <span class="st" style="color: #20794D;">'Hot'</span>, <span class="st" style="color: #20794D;">'Mild'</span>, <span class="st" style="color: #20794D;">'Cool'</span>, <span class="st" style="color: #20794D;">'Cool'</span>, <span class="st" style="color: #20794D;">'Cool'</span>, <span class="st" style="color: #20794D;">'Mild'</span>, <span class="st" style="color: #20794D;">'Cool'</span>, <span class="st" style="color: #20794D;">'Mild'</span>, <span class="st" style="color: #20794D;">'Mild'</span>, <span class="st" style="color: #20794D;">'Mild'</span>, <span class="st" style="color: #20794D;">'Hot'</span>, <span class="st" style="color: #20794D;">'Mild'</span>],</span>
<span id="cb2-7">    <span class="st" style="color: #20794D;">'Humidity'</span>: [<span class="st" style="color: #20794D;">'High'</span>, <span class="st" style="color: #20794D;">'High'</span>, <span class="st" style="color: #20794D;">'High'</span>, <span class="st" style="color: #20794D;">'High'</span>, <span class="st" style="color: #20794D;">'Normal'</span>, <span class="st" style="color: #20794D;">'Normal'</span>, <span class="st" style="color: #20794D;">'Normal'</span>, <span class="st" style="color: #20794D;">'High'</span>, <span class="st" style="color: #20794D;">'Normal'</span>, <span class="st" style="color: #20794D;">'Normal'</span>, <span class="st" style="color: #20794D;">'Normal'</span>, <span class="st" style="color: #20794D;">'High'</span>, <span class="st" style="color: #20794D;">'Normal'</span>, <span class="st" style="color: #20794D;">'High'</span>],</span>
<span id="cb2-8">    <span class="st" style="color: #20794D;">'Wind'</span>: [<span class="st" style="color: #20794D;">'Weak'</span>, <span class="st" style="color: #20794D;">'Strong'</span>, <span class="st" style="color: #20794D;">'Weak'</span>, <span class="st" style="color: #20794D;">'Weak'</span>, <span class="st" style="color: #20794D;">'Weak'</span>, <span class="st" style="color: #20794D;">'Strong'</span>, <span class="st" style="color: #20794D;">'Strong'</span>, <span class="st" style="color: #20794D;">'Weak'</span>, <span class="st" style="color: #20794D;">'Weak'</span>, <span class="st" style="color: #20794D;">'Weak'</span>, <span class="st" style="color: #20794D;">'Strong'</span>, <span class="st" style="color: #20794D;">'Strong'</span>, <span class="st" style="color: #20794D;">'Weak'</span>, <span class="st" style="color: #20794D;">'Strong'</span>],</span>
<span id="cb2-9">    <span class="st" style="color: #20794D;">'PlayTennis'</span>: [<span class="st" style="color: #20794D;">'No'</span>, <span class="st" style="color: #20794D;">'No'</span>, <span class="st" style="color: #20794D;">'Yes'</span>, <span class="st" style="color: #20794D;">'Yes'</span>, <span class="st" style="color: #20794D;">'Yes'</span>, <span class="st" style="color: #20794D;">'No'</span>, <span class="st" style="color: #20794D;">'Yes'</span>, <span class="st" style="color: #20794D;">'No'</span>, <span class="st" style="color: #20794D;">'Yes'</span>, <span class="st" style="color: #20794D;">'Yes'</span>, <span class="st" style="color: #20794D;">'Yes'</span>, <span class="st" style="color: #20794D;">'Yes'</span>, <span class="st" style="color: #20794D;">'Yes'</span>, <span class="st" style="color: #20794D;">'No'</span>]</span>
<span id="cb2-10">})</span></code></pre></div>
</div>
</section>
<section id="counting-values-of-outcome-variable-useful-for-calculating-entropy" class="level3">
<h3 class="anchored" data-anchor-id="counting-values-of-outcome-variable-useful-for-calculating-entropy">Counting values of outcome variable (useful for calculating entropy)</h3>
<div class="cell" data-execution_count="5">
<div class="sourceCode cell-code" id="cb3" style="background: #f1f3f5;"><pre class="sourceCode python code-with-copy"><code class="sourceCode python"><span id="cb3-1">ser <span class="op" style="color: #5E5E5E;">=</span> df[<span class="st" style="color: #20794D;">'PlayTennis'</span>].value_counts()</span>
<span id="cb3-2">ser</span></code></pre></div>
<div class="cell-output cell-output-display" data-execution_count="5">
<pre><code>Yes    9
No     5
Name: PlayTennis, dtype: int64</code></pre>
</div>
</div>
</section>
<section id="using-cross-tab-to-quickly-capture-the-relationship-between-two-variables" class="level3">
<h3 class="anchored" data-anchor-id="using-cross-tab-to-quickly-capture-the-relationship-between-two-variables">Using cross tab to quickly capture the relationship between two variables</h3>
<div class="cell" data-execution_count="9">
<div class="sourceCode cell-code" id="cb5" style="background: #f1f3f5;"><pre class="sourceCode python code-with-copy"><code class="sourceCode python"><span id="cb5-1">df_out <span class="op" style="color: #5E5E5E;">=</span> pd.crosstab(df[<span class="st" style="color: #20794D;">'Outlook'</span>], df[<span class="st" style="color: #20794D;">'PlayTennis'</span>])</span>
<span id="cb5-2">df_out</span></code></pre></div>
<div class="cell-output cell-output-display" data-execution_count="9">

<div>

<table class="dataframe table table-sm table-striped">
  <thead>
    <tr>
      <th>PlayTennis</th>
      <th>No</th>
      <th>Yes</th>
    </tr>
    <tr>
      <th>Outlook</th>
      <th></th>
      <th></th>
    </tr>
  </thead>
  <tbody>
    <tr>
      <th>Overcast</th>
      <td>0</td>
      <td>4</td>
    </tr>
    <tr>
      <th>Rain</th>
      <td>2</td>
      <td>3</td>
    </tr>
    <tr>
      <th>Sunny</th>
      <td>3</td>
      <td>2</td>
    </tr>
  </tbody>
</table>
</div>
</div>
</div>
<div class="cell" data-execution_count="7">
<div class="sourceCode cell-code" id="cb6" style="background: #f1f3f5;"><pre class="sourceCode python code-with-copy"><code class="sourceCode python"><span id="cb6-1">df_out.index, df_out.columns</span></code></pre></div>
<div class="cell-output cell-output-display" data-execution_count="7">
<pre><code>(Index(['Overcast', 'Rain', 'Sunny'], dtype='object', name='Outlook'),
 Index(['No', 'Yes'], dtype='object', name='PlayTennis'))</code></pre>
</div>
</div>
<div class="cell" data-execution_count="10">
<div class="sourceCode cell-code" id="cb8" style="background: #f1f3f5;"><pre class="sourceCode python code-with-copy"><code class="sourceCode python"><span id="cb8-1">e <span class="op" style="color: #5E5E5E;">=</span> df_out.<span class="bu" style="color: null;">sum</span>(axis<span class="op" style="color: #5E5E5E;">=</span><span class="dv" style="color: #AD0000;">1</span>)</span>
<span id="cb8-2">e</span></code></pre></div>
<div class="cell-output cell-output-display" data-execution_count="10">
<pre><code>Outlook
Overcast    4
Rain        5
Sunny       5
dtype: int64</code></pre>
</div>
</div>
<div class="cell" data-execution_count="11">
<div class="sourceCode cell-code" id="cb10" style="background: #f1f3f5;"><pre class="sourceCode python code-with-copy"><code class="sourceCode python"><span id="cb10-1"><span class="co" style="color: #5E5E5E;"># Find the fraction of each row that is a 'Yes' and 'No' for PlayTennis</span></span>
<span id="cb10-2">df_out[<span class="st" style="color: #20794D;">'Yes'</span>] <span class="op" style="color: #5E5E5E;">=</span> df_out[<span class="st" style="color: #20794D;">'Yes'</span>] <span class="op" style="color: #5E5E5E;">/</span> e</span>
<span id="cb10-3">df_out[<span class="st" style="color: #20794D;">'No'</span>] <span class="op" style="color: #5E5E5E;">=</span> df_out[<span class="st" style="color: #20794D;">'No'</span>] <span class="op" style="color: #5E5E5E;">/</span> e</span>
<span id="cb10-4">df_out</span></code></pre></div>
<div class="cell-output cell-output-display" data-execution_count="11">

<div>

<table class="dataframe table table-sm table-striped">
  <thead>
    <tr>
      <th>PlayTennis</th>
      <th>No</th>
      <th>Yes</th>
    </tr>
    <tr>
      <th>Outlook</th>
      <th></th>
      <th></th>
    </tr>
  </thead>
  <tbody>
    <tr>
      <th>Overcast</th>
      <td>0.0</td>
      <td>1.0</td>
    </tr>
    <tr>
      <th>Rain</th>
      <td>0.4</td>
      <td>0.6</td>
    </tr>
    <tr>
      <th>Sunny</th>
      <td>0.6</td>
      <td>0.4</td>
    </tr>
  </tbody>
</table>
</div>
</div>
</div>
</section>
<section id="more-efficient-cross-tabulation-using-normalize" class="level3">
<h3 class="anchored" data-anchor-id="more-efficient-cross-tabulation-using-normalize">More efficient cross tabulation (using normalize)</h3>
<div class="cell" data-execution_count="8">
<div class="sourceCode cell-code" id="cb11" style="background: #f1f3f5;"><pre class="sourceCode python code-with-copy"><code class="sourceCode python"><span id="cb11-1">pd.crosstab(df[<span class="st" style="color: #20794D;">'Outlook'</span>], df[<span class="st" style="color: #20794D;">'PlayTennis'</span>], normalize<span class="op" style="color: #5E5E5E;">=</span><span class="st" style="color: #20794D;">'index'</span>)</span></code></pre></div>
<div class="cell-output cell-output-display" data-execution_count="8">

<div>

<table class="dataframe table table-sm table-striped">
  <thead>
    <tr>
      <th>PlayTennis</th>
      <th>No</th>
      <th>Yes</th>
    </tr>
    <tr>
      <th>Outlook</th>
      <th></th>
      <th></th>
    </tr>
  </thead>
  <tbody>
    <tr>
      <th>Overcast</th>
      <td>0.0</td>
      <td>1.0</td>
    </tr>
    <tr>
      <th>Rain</th>
      <td>0.4</td>
      <td>0.6</td>
    </tr>
    <tr>
      <th>Sunny</th>
      <td>0.6</td>
      <td>0.4</td>
    </tr>
  </tbody>
</table>
</div>
</div>
</div>
</section>
<section id="using-pd.groupby" class="level3">
<h3 class="anchored" data-anchor-id="using-pd.groupby">Using pd.groupby()</h3>
<div class="cell" data-execution_count="13">
<div class="sourceCode cell-code" id="cb12" style="background: #f1f3f5;"><pre class="sourceCode python code-with-copy"><code class="sourceCode python"><span id="cb12-1">df.groupby([<span class="st" style="color: #20794D;">"Outlook"</span>]).groups</span></code></pre></div>
<div class="cell-output cell-output-display" data-execution_count="13">
<pre><code>{'Overcast': [2, 6, 11, 12], 'Rain': [3, 4, 5, 9, 13], 'Sunny': [0, 1, 7, 8, 10]}</code></pre>
</div>
</div>
<div class="cell" data-execution_count="14">
<div class="sourceCode cell-code" id="cb14" style="background: #f1f3f5;"><pre class="sourceCode python code-with-copy"><code class="sourceCode python"><span id="cb14-1">df.groupby([<span class="st" style="color: #20794D;">"Outlook"</span>]).get_group(<span class="st" style="color: #20794D;">"Sunny"</span>)</span></code></pre></div>
<div class="cell-output cell-output-display" data-execution_count="14">

<div>

<table class="dataframe table table-sm table-striped">
  <thead>
    <tr>
      <th></th>
      <th>Outlook</th>
      <th>Temperature</th>
      <th>Humidity</th>
      <th>Wind</th>
      <th>PlayTennis</th>
    </tr>
  </thead>
  <tbody>
    <tr>
      <th>0</th>
      <td>Sunny</td>
      <td>Hot</td>
      <td>High</td>
      <td>Weak</td>
      <td>No</td>
    </tr>
    <tr>
      <th>1</th>
      <td>Sunny</td>
      <td>Hot</td>
      <td>High</td>
      <td>Strong</td>
      <td>No</td>
    </tr>
    <tr>
      <th>7</th>
      <td>Sunny</td>
      <td>Mild</td>
      <td>High</td>
      <td>Weak</td>
      <td>No</td>
    </tr>
    <tr>
      <th>8</th>
      <td>Sunny</td>
      <td>Cool</td>
      <td>Normal</td>
      <td>Weak</td>
      <td>Yes</td>
    </tr>
    <tr>
      <th>10</th>
      <td>Sunny</td>
      <td>Mild</td>
      <td>Normal</td>
      <td>Strong</td>
      <td>Yes</td>
    </tr>
  </tbody>
</table>
</div>
</div>
</div>
<div class="cell" data-execution_count="15">
<div class="sourceCode cell-code" id="cb15" style="background: #f1f3f5;"><pre class="sourceCode python code-with-copy"><code class="sourceCode python"><span id="cb15-1">df.groupby([<span class="st" style="color: #20794D;">"Outlook"</span>]).get_group(<span class="st" style="color: #20794D;">"Sunny"</span>)[<span class="st" style="color: #20794D;">"PlayTennis"</span>]</span></code></pre></div>
<div class="cell-output cell-output-display" data-execution_count="15">
<pre><code>0      No
1      No
7      No
8     Yes
10    Yes
Name: PlayTennis, dtype: object</code></pre>
</div>
</div>
<div class="cell" data-execution_count="16">
<div class="sourceCode cell-code" id="cb17" style="background: #f1f3f5;"><pre class="sourceCode python code-with-copy"><code class="sourceCode python"><span id="cb17-1">df.groupby([<span class="st" style="color: #20794D;">"Outlook"</span>]).get_group(<span class="st" style="color: #20794D;">"Sunny"</span>)[<span class="st" style="color: #20794D;">"PlayTennis"</span>].value_counts()</span></code></pre></div>
<div class="cell-output cell-output-display" data-execution_count="16">
<pre><code>No     3
Yes    2
Name: PlayTennis, dtype: int64</code></pre>
</div>
</div>
<div class="cell" data-execution_count="18">
<div class="sourceCode cell-code" id="cb19" style="background: #f1f3f5;"><pre class="sourceCode python code-with-copy"><code class="sourceCode python"><span id="cb19-1">df.groupby([<span class="st" style="color: #20794D;">"Outlook"</span>, <span class="st" style="color: #20794D;">"PlayTennis"</span>]).groups</span></code></pre></div>
<div class="cell-output cell-output-display" data-execution_count="18">
<pre><code>{('Overcast', 'Yes'): [2, 6, 11, 12], ('Rain', 'No'): [5, 13], ('Rain', 'Yes'): [3, 4, 9], ('Sunny', 'No'): [0, 1, 7], ('Sunny', 'Yes'): [8, 10]}</code></pre>
</div>
</div>
<div class="cell" data-execution_count="19">
<div class="sourceCode cell-code" id="cb21" style="background: #f1f3f5;"><pre class="sourceCode python code-with-copy"><code class="sourceCode python"><span id="cb21-1">df.groupby([<span class="st" style="color: #20794D;">"Outlook"</span>, <span class="st" style="color: #20794D;">"PlayTennis"</span>]).get_group((<span class="st" style="color: #20794D;">"Sunny"</span>, <span class="st" style="color: #20794D;">"Yes"</span>))</span></code></pre></div>
<div class="cell-output cell-output-display" data-execution_count="19">

<div>

<table class="dataframe table table-sm table-striped">
  <thead>
    <tr>
      <th></th>
      <th>Outlook</th>
      <th>Temperature</th>
      <th>Humidity</th>
      <th>Wind</th>
      <th>PlayTennis</th>
    </tr>
  </thead>
  <tbody>
    <tr>
      <th>8</th>
      <td>Sunny</td>
      <td>Cool</td>
      <td>Normal</td>
      <td>Weak</td>
      <td>Yes</td>
    </tr>
    <tr>
      <th>10</th>
      <td>Sunny</td>
      <td>Mild</td>
      <td>Normal</td>
      <td>Strong</td>
      <td>Yes</td>
    </tr>
  </tbody>
</table>
</div>
</div>
</div>
<div class="cell" data-execution_count="20">
<div class="sourceCode cell-code" id="cb22" style="background: #f1f3f5;"><pre class="sourceCode python code-with-copy"><code class="sourceCode python"><span id="cb22-1">df.groupby([<span class="st" style="color: #20794D;">"Outlook"</span>, <span class="st" style="color: #20794D;">"PlayTennis"</span>]).size()</span></code></pre></div>
<div class="cell-output cell-output-display" data-execution_count="20">
<pre><code>Outlook   PlayTennis
Overcast  Yes           4
Rain      No            2
          Yes           3
Sunny     No            3
          Yes           2
dtype: int64</code></pre>
</div>
</div>
<div class="cell" data-execution_count="16">
<div class="sourceCode cell-code" id="cb24" style="background: #f1f3f5;"><pre class="sourceCode python code-with-copy"><code class="sourceCode python"><span id="cb24-1">df.groupby([<span class="st" style="color: #20794D;">"Outlook"</span>, <span class="st" style="color: #20794D;">"PlayTennis"</span>]).size().index</span></code></pre></div>
<div class="cell-output cell-output-display" data-execution_count="16">
<pre><code>MultiIndex([('Overcast', 'Yes'),
            (    'Rain',  'No'),
            (    'Rain', 'Yes'),
            (   'Sunny',  'No'),
            (   'Sunny', 'Yes')],
           names=['Outlook', 'PlayTennis'])</code></pre>
</div>
</div>
<div class="cell" data-execution_count="21">
<div class="sourceCode cell-code" id="cb26" style="background: #f1f3f5;"><pre class="sourceCode python code-with-copy"><code class="sourceCode python"><span id="cb26-1">df.groupby([<span class="st" style="color: #20794D;">"Outlook"</span>, <span class="st" style="color: #20794D;">"PlayTennis"</span>]).size().unstack()</span></code></pre></div>
<div class="cell-output cell-output-display" data-execution_count="21">

<div>

<table class="dataframe table table-sm table-striped">
  <thead>
    <tr>
      <th>PlayTennis</th>
      <th>No</th>
      <th>Yes</th>
    </tr>
    <tr>
      <th>Outlook</th>
      <th></th>
      <th></th>
    </tr>
  </thead>
  <tbody>
    <tr>
      <th>Overcast</th>
      <td>NaN</td>
      <td>4.0</td>
    </tr>
    <tr>
      <th>Rain</th>
      <td>2.0</td>
      <td>3.0</td>
    </tr>
    <tr>
      <th>Sunny</th>
      <td>3.0</td>
      <td>2.0</td>
    </tr>
  </tbody>
</table>
</div>
</div>
</div>
<div class="cell" data-execution_count="22">
<div class="sourceCode cell-code" id="cb27" style="background: #f1f3f5;"><pre class="sourceCode python code-with-copy"><code class="sourceCode python"><span id="cb27-1">df.groupby([<span class="st" style="color: #20794D;">"Outlook"</span>, <span class="st" style="color: #20794D;">"PlayTennis"</span>]).size().unstack(fill_value<span class="op" style="color: #5E5E5E;">=</span><span class="dv" style="color: #AD0000;">0</span>)</span></code></pre></div>
<div class="cell-output cell-output-display" data-execution_count="22">

<div>

<table class="dataframe table table-sm table-striped">
  <thead>
    <tr>
      <th>PlayTennis</th>
      <th>No</th>
      <th>Yes</th>
    </tr>
    <tr>
      <th>Outlook</th>
      <th></th>
      <th></th>
    </tr>
  </thead>
  <tbody>
    <tr>
      <th>Overcast</th>
      <td>0</td>
      <td>4</td>
    </tr>
    <tr>
      <th>Rain</th>
      <td>2</td>
      <td>3</td>
    </tr>
    <tr>
      <th>Sunny</th>
      <td>3</td>
      <td>2</td>
    </tr>
  </tbody>
</table>
</div>
</div>
</div>
</section>
<section id="using-pd.pivot_table" class="level3">
<h3 class="anchored" data-anchor-id="using-pd.pivot_table">Using pd.pivot_table</h3>
<div class="cell" data-execution_count="23">
<div class="sourceCode cell-code" id="cb28" style="background: #f1f3f5;"><pre class="sourceCode python code-with-copy"><code class="sourceCode python"><span id="cb28-1">pivot_table <span class="op" style="color: #5E5E5E;">=</span> df.pivot_table(index<span class="op" style="color: #5E5E5E;">=</span><span class="st" style="color: #20794D;">'Outlook'</span>, columns<span class="op" style="color: #5E5E5E;">=</span><span class="st" style="color: #20794D;">'PlayTennis'</span>, aggfunc<span class="op" style="color: #5E5E5E;">=</span><span class="st" style="color: #20794D;">'size'</span>, fill_value<span class="op" style="color: #5E5E5E;">=</span><span class="dv" style="color: #AD0000;">0</span>)</span>
<span id="cb28-2">pivot_table</span></code></pre></div>
<div class="cell-output cell-output-display" data-execution_count="23">

<div>

<table class="dataframe table table-sm table-striped">
  <thead>
    <tr>
      <th>PlayTennis</th>
      <th>No</th>
      <th>Yes</th>
    </tr>
    <tr>
      <th>Outlook</th>
      <th></th>
      <th></th>
    </tr>
  </thead>
  <tbody>
    <tr>
      <th>Overcast</th>
      <td>0</td>
      <td>4</td>
    </tr>
    <tr>
      <th>Rain</th>
      <td>2</td>
      <td>3</td>
    </tr>
    <tr>
      <th>Sunny</th>
      <td>3</td>
      <td>2</td>
    </tr>
  </tbody>
</table>
</div>
</div>
</div>
<div class="cell" data-execution_count="24">
<div class="sourceCode cell-code" id="cb29" style="background: #f1f3f5;"><pre class="sourceCode python code-with-copy"><code class="sourceCode python"><span id="cb29-1">df_out.plot(kind<span class="op" style="color: #5E5E5E;">=</span><span class="st" style="color: #20794D;">'bar'</span>, stacked<span class="op" style="color: #5E5E5E;">=</span><span class="va" style="color: #111111;">True</span>)</span></code></pre></div>
<div class="cell-output cell-output-display" data-execution_count="24">
<pre><code>&lt;AxesSubplot:xlabel='Outlook'&gt;</code></pre>
</div>
<div class="cell-output cell-output-display">
<p><img src="https://github.com/nipunbatra/ml2023/notebooks/posts/pivot-cross_files/figure-html/cell-21-output-2.png" class="img-fluid"></p>
</div>
</div>
<div class="cell" data-execution_count="25">
<div class="sourceCode cell-code" id="cb31" style="background: #f1f3f5;"><pre class="sourceCode python code-with-copy"><code class="sourceCode python"><span id="cb31-1">df_out.plot(kind<span class="op" style="color: #5E5E5E;">=</span><span class="st" style="color: #20794D;">'bar'</span>, stacked<span class="op" style="color: #5E5E5E;">=</span><span class="va" style="color: #111111;">False</span>)</span></code></pre></div>
<div class="cell-output cell-output-display" data-execution_count="25">
<pre><code>&lt;AxesSubplot:xlabel='Outlook'&gt;</code></pre>
</div>
<div class="cell-output cell-output-display">
<p><img src="https://github.com/nipunbatra/ml2023/notebooks/posts/pivot-cross_files/figure-html/cell-22-output-2.png" class="img-fluid"></p>
</div>
</div>


</section>

 ]]></description>
  <guid>https://github.com/nipunbatra/ml2023/notebooks/posts/pivot-cross.html</guid>
  <pubDate>Thu, 12 Jan 2023 00:00:00 GMT</pubDate>
</item>
<item>
  <title>Misc tips</title>
  <dc:creator>Nipun Batra</dc:creator>
  <link>https://github.com/nipunbatra/ml2023/notebooks/posts/tips.html</link>
  <description><![CDATA[ 



<section id="miscelleneous-tips" class="level3">
<h3 class="anchored" data-anchor-id="miscelleneous-tips">Miscelleneous tips</h3>
<ul>
<li>Tab Complete</li>
<li>a.b?</li>
<li>Black format</li>
<li>rich
<ul>
<li>table</li>
<li>inspect</li>
</ul></li>
<li>dir()</li>
<li>timing</li>
<li>timing with sort?!</li>
<li>timeit object</li>
<li>plotting timing</li>
<li>array .tolist()</li>
<li>Dataclasses</li>
<li>Annotation</li>
<li>Plotting with pandas (sin, log, question …)</li>
</ul>
<div class="cell" data-execution_count="62">
<div class="sourceCode cell-code" id="cb1" style="background: #f1f3f5;"><pre class="sourceCode python code-with-copy"><code class="sourceCode python"><span id="cb1-1"><span class="im" style="color: #00769E;">import</span> numpy <span class="im" style="color: #00769E;">as</span> np</span>
<span id="cb1-2"><span class="im" style="color: #00769E;">import</span> matplotlib.pyplot <span class="im" style="color: #00769E;">as</span> plt</span>
<span id="cb1-3"><span class="im" style="color: #00769E;">import</span> pandas <span class="im" style="color: #00769E;">as</span> pd</span>
<span id="cb1-4"></span>
<span id="cb1-5"><span class="op" style="color: #5E5E5E;">%</span>matplotlib inline</span>
<span id="cb1-6"><span class="op" style="color: #5E5E5E;">%</span>config InlineBackend.figure_format<span class="op" style="color: #5E5E5E;">=</span><span class="st" style="color: #20794D;">'retina'</span></span></code></pre></div>
</div>
<div class="cell" data-execution_count="14">
<div class="sourceCode cell-code" id="cb2" style="background: #f1f3f5;"><pre class="sourceCode python code-with-copy"><code class="sourceCode python"><span id="cb2-1">n <span class="op" style="color: #5E5E5E;">=</span> <span class="dv" style="color: #AD0000;">100</span></span>
<span id="cb2-2">k <span class="op" style="color: #5E5E5E;">=</span> <span class="dv" style="color: #AD0000;">20</span></span>
<span id="cb2-3">m <span class="op" style="color: #5E5E5E;">=</span> <span class="dv" style="color: #AD0000;">50</span></span>
<span id="cb2-4"></span>
<span id="cb2-5">np.random.seed(<span class="dv" style="color: #AD0000;">0</span>)</span>
<span id="cb2-6">a <span class="op" style="color: #5E5E5E;">=</span> np.random.randn(n, k)</span>
<span id="cb2-7">b <span class="op" style="color: #5E5E5E;">=</span> np.random.randn(k, m)</span>
<span id="cb2-8">a.shape, b.shape</span></code></pre></div>
<div class="cell-output cell-output-display" data-execution_count="14">
<pre><code>((100, 20), (20, 50))</code></pre>
</div>
</div>
<div class="cell" data-execution_count="18">
<div class="sourceCode cell-code" id="cb4" style="background: #f1f3f5;"><pre class="sourceCode python code-with-copy"><code class="sourceCode python"><span id="cb4-1">a_list_of_list <span class="op" style="color: #5E5E5E;">=</span> a.tolist()</span>
<span id="cb4-2">a_list_of_list[<span class="dv" style="color: #AD0000;">0</span>]</span></code></pre></div>
<div class="cell-output cell-output-display" data-execution_count="18">
<pre><code>list</code></pre>
</div>
</div>
<div class="cell" data-execution_count="28">
<div class="sourceCode cell-code" id="cb6" style="background: #f1f3f5;"><pre class="sourceCode python code-with-copy"><code class="sourceCode python"><span id="cb6-1"><span class="co" style="color: #5E5E5E;">"list"</span> <span class="kw" style="color: #003B4F;">in</span> <span class="bu" style="color: null;">dir</span>(a)[:]</span></code></pre></div>
<div class="cell-output cell-output-display" data-execution_count="28">
<pre><code>False</code></pre>
</div>
</div>
<div class="cell" data-execution_count="38">
<div class="sourceCode cell-code" id="cb8" style="background: #f1f3f5;"><pre class="sourceCode python code-with-copy"><code class="sourceCode python"><span id="cb8-1"><span class="im" style="color: #00769E;">import</span> rich</span>
<span id="cb8-2">rich.inspect(a.tolist, methods<span class="op" style="color: #5E5E5E;">=</span><span class="va" style="color: #111111;">True</span>, <span class="bu" style="color: null;">all</span><span class="op" style="color: #5E5E5E;">=</span><span class="va" style="color: #111111;">True</span>)</span></code></pre></div>
<div class="cell-output cell-output-display">
<pre style="white-space:pre;overflow-x:auto;line-height:normal;font-family:Menlo,'DejaVu Sans Mono',consolas,'Courier New',monospace"><span style="color: #000080; text-decoration-color: #000080">╭──────────────────────── </span><span style="color: #000080; text-decoration-color: #000080; font-weight: bold">&lt;</span><span style="color: #ff00ff; text-decoration-color: #ff00ff; font-weight: bold">built-in</span><span style="color: #000000; text-decoration-color: #000000"> method tolist of numpy.ndarray object at </span><span style="color: #008080; text-decoration-color: #008080; font-weight: bold">0x164cbb8d0</span><span style="color: #000080; text-decoration-color: #000080; font-weight: bold">&gt;</span><span style="color: #000080; text-decoration-color: #000080"> ────────────────────────╮</span>
<span style="color: #000080; text-decoration-color: #000080">│</span> <span style="color: #00ffff; text-decoration-color: #00ffff; font-style: italic">def </span><span style="color: #800000; text-decoration-color: #800000; font-weight: bold">ndarray.tolist</span><span style="font-weight: bold">(</span><span style="color: #808000; text-decoration-color: #808000">...</span><span style="font-weight: bold">)</span>                                                                                         <span style="color: #000080; text-decoration-color: #000080">│</span>
<span style="color: #000080; text-decoration-color: #000080">│</span>                                                                                                                 <span style="color: #000080; text-decoration-color: #000080">│</span>
<span style="color: #000080; text-decoration-color: #000080">│</span> <span style="color: #800080; text-decoration-color: #800080; font-weight: bold">a.tolist</span><span style="color: #008080; text-decoration-color: #008080; font-weight: bold">()</span>                                                                                                      <span style="color: #000080; text-decoration-color: #000080">│</span>
<span style="color: #000080; text-decoration-color: #000080">│</span>                                                                                                                 <span style="color: #000080; text-decoration-color: #000080">│</span>
<span style="color: #000080; text-decoration-color: #000080">│</span>            <span style="color: #bfbf7f; text-decoration-color: #bfbf7f; font-style: italic">__doc__</span> = <span style="color: #008000; text-decoration-color: #008000">"a.tolist()\n\n    Return the array as an ``a.ndim``-levels deep nested list of Python </span>    <span style="color: #000080; text-decoration-color: #000080">│</span>
<span style="color: #000080; text-decoration-color: #000080">│</span>                      <span style="color: #008000; text-decoration-color: #008000">scalars.\n\n    Return a copy of the array data as a (nested) Python list.\n    Data items</span> <span style="color: #000080; text-decoration-color: #000080">│</span>
<span style="color: #000080; text-decoration-color: #000080">│</span>                      <span style="color: #008000; text-decoration-color: #008000">are converted to the nearest compatible builtin Python type, via\n    the </span>                 <span style="color: #000080; text-decoration-color: #000080">│</span>
<span style="color: #000080; text-decoration-color: #000080">│</span>                      <span style="color: #008000; text-decoration-color: #008000">`~numpy.ndarray.item` function.\n\n    If ``a.ndim`` is 0, then since the depth of the </span>    <span style="color: #000080; text-decoration-color: #000080">│</span>
<span style="color: #000080; text-decoration-color: #000080">│</span>                      <span style="color: #008000; text-decoration-color: #008000">nested list is 0, it will\n    not be a list at all, but a simple Python scalar.\n\n    </span>   <span style="color: #000080; text-decoration-color: #000080">│</span>
<span style="color: #000080; text-decoration-color: #000080">│</span>                      <span style="color: #008000; text-decoration-color: #008000">Parameters\n    ----------\n    none\n\n    Returns\n    -------\n    y : object, or list </span> <span style="color: #000080; text-decoration-color: #000080">│</span>
<span style="color: #000080; text-decoration-color: #000080">│</span>                      <span style="color: #008000; text-decoration-color: #008000">of object, or list of list of object, or ...\n        The possibly nested list of array </span>   <span style="color: #000080; text-decoration-color: #000080">│</span>
<span style="color: #000080; text-decoration-color: #000080">│</span>                      <span style="color: #008000; text-decoration-color: #008000">elements.\n\n    Notes\n    -----\n    The array may be recreated via ``a = </span>               <span style="color: #000080; text-decoration-color: #000080">│</span>
<span style="color: #000080; text-decoration-color: #000080">│</span>                      <span style="color: #008000; text-decoration-color: #008000">np.array(a.tolist())``, although this\n    may sometimes lose precision.\n\n    Examples\n</span> <span style="color: #000080; text-decoration-color: #000080">│</span>
<span style="color: #000080; text-decoration-color: #000080">│</span>                      <span style="color: #008000; text-decoration-color: #008000">--------\n    For a 1D array, ``a.tolist()`` is almost the same as ``list(a)``,\n    </span>      <span style="color: #000080; text-decoration-color: #000080">│</span>
<span style="color: #000080; text-decoration-color: #000080">│</span>                      <span style="color: #008000; text-decoration-color: #008000">except that ``tolist`` changes numpy scalars to Python scalars:\n\n    &gt;&gt;&gt; a = </span>            <span style="color: #000080; text-decoration-color: #000080">│</span>
<span style="color: #000080; text-decoration-color: #000080">│</span>                      <span style="color: #008000; text-decoration-color: #008000">np.uint32([1, 2])\n    &gt;&gt;&gt; a_list = list(a)\n    &gt;&gt;&gt; a_list\n    [1, 2]\n    &gt;&gt;&gt; </span>          <span style="color: #000080; text-decoration-color: #000080">│</span>
<span style="color: #000080; text-decoration-color: #000080">│</span>                      <span style="color: #008000; text-decoration-color: #008000">type(a_list[0])\n    &lt;class 'numpy.uint32'&gt;\n    &gt;&gt;&gt; a_tolist = a.tolist()\n    &gt;&gt;&gt; </span>       <span style="color: #000080; text-decoration-color: #000080">│</span>
<span style="color: #000080; text-decoration-color: #000080">│</span>                      <span style="color: #008000; text-decoration-color: #008000">a_tolist\n    [1, 2]\n    &gt;&gt;&gt; type(a_tolist[0])\n    &lt;class 'int'&gt;\n\n    Additionally, </span>   <span style="color: #000080; text-decoration-color: #000080">│</span>
<span style="color: #000080; text-decoration-color: #000080">│</span>                      <span style="color: #008000; text-decoration-color: #008000">for a 2D array, ``tolist`` applies recursively:\n\n    &gt;&gt;&gt; a = np.array([[1, 2], [3, </span>      <span style="color: #000080; text-decoration-color: #000080">│</span>
<span style="color: #000080; text-decoration-color: #000080">│</span>                      <span style="color: #008000; text-decoration-color: #008000">4]])\n    &gt;&gt;&gt; list(a)\n    [array([1, 2]), array([3, 4])]\n    &gt;&gt;&gt; a.tolist()\n    [[1, </span>   <span style="color: #000080; text-decoration-color: #000080">│</span>
<span style="color: #000080; text-decoration-color: #000080">│</span>                      <span style="color: #008000; text-decoration-color: #008000">2], [3, 4]]\n\n    The base case for this recursion is a 0D array:\n\n    &gt;&gt;&gt; a = </span>         <span style="color: #000080; text-decoration-color: #000080">│</span>
<span style="color: #000080; text-decoration-color: #000080">│</span>                      <span style="color: #008000; text-decoration-color: #008000">np.array(1)\n    &gt;&gt;&gt; list(a)\n    Traceback (most recent call last):\n      ...\n    </span>      <span style="color: #000080; text-decoration-color: #000080">│</span>
<span style="color: #000080; text-decoration-color: #000080">│</span>                      <span style="color: #008000; text-decoration-color: #008000">TypeError: iteration over a 0-d array\n    &gt;&gt;&gt; a.tolist()\n    1"</span>                          <span style="color: #000080; text-decoration-color: #000080">│</span>
<span style="color: #000080; text-decoration-color: #000080">│</span>         <span style="color: #bfbf7f; text-decoration-color: #bfbf7f; font-style: italic">__module__</span> = <span style="color: #800080; text-decoration-color: #800080; font-style: italic">None</span>                                                                                       <span style="color: #000080; text-decoration-color: #000080">│</span>
<span style="color: #000080; text-decoration-color: #000080">│</span>           <span style="color: #bfbf7f; text-decoration-color: #bfbf7f; font-style: italic">__name__</span> = <span style="color: #008000; text-decoration-color: #008000">'tolist'</span>                                                                                   <span style="color: #000080; text-decoration-color: #000080">│</span>
<span style="color: #000080; text-decoration-color: #000080">│</span>       <span style="color: #bfbf7f; text-decoration-color: #bfbf7f; font-style: italic">__qualname__</span> = <span style="color: #008000; text-decoration-color: #008000">'ndarray.tolist'</span>                                                                           <span style="color: #000080; text-decoration-color: #000080">│</span>
<span style="color: #000080; text-decoration-color: #000080">│</span>           <span style="color: #bfbf7f; text-decoration-color: #bfbf7f; font-style: italic">__self__</span> = <span style="color: #800080; text-decoration-color: #800080; font-weight: bold">array</span><span style="font-weight: bold">([[</span> <span style="color: #008080; text-decoration-color: #008080; font-weight: bold">1.76405235e+00</span>,  <span style="color: #008080; text-decoration-color: #008080; font-weight: bold">4.00157208e-01</span>,  <span style="color: #008080; text-decoration-color: #008080; font-weight: bold">9.78737984e-01</span>, <span style="color: #808000; text-decoration-color: #808000">...</span>,                            <span style="color: #000080; text-decoration-color: #000080">│</span>
<span style="color: #000080; text-decoration-color: #000080">│</span>                              <span style="color: #008080; text-decoration-color: #008080; font-weight: bold">-2.05158264e-01</span>,  <span style="color: #008080; text-decoration-color: #008080; font-weight: bold">3.13067702e-01</span>, <span style="color: #008080; text-decoration-color: #008080; font-weight: bold">-8.54095739e-01</span><span style="font-weight: bold">]</span>,                                <span style="color: #000080; text-decoration-color: #000080">│</span>
<span style="color: #000080; text-decoration-color: #000080">│</span>                             <span style="font-weight: bold">[</span><span style="color: #008080; text-decoration-color: #008080; font-weight: bold">-2.55298982e+00</span>,  <span style="color: #008080; text-decoration-color: #008080; font-weight: bold">6.53618595e-01</span>,  <span style="color: #008080; text-decoration-color: #008080; font-weight: bold">8.64436199e-01</span>, <span style="color: #808000; text-decoration-color: #808000">...</span>,                            <span style="color: #000080; text-decoration-color: #000080">│</span>
<span style="color: #000080; text-decoration-color: #000080">│</span>                               <span style="color: #008080; text-decoration-color: #008080; font-weight: bold">1.20237985e+00</span>, <span style="color: #008080; text-decoration-color: #008080; font-weight: bold">-3.87326817e-01</span>, <span style="color: #008080; text-decoration-color: #008080; font-weight: bold">-3.02302751e-01</span><span style="font-weight: bold">]</span>,                                <span style="color: #000080; text-decoration-color: #000080">│</span>
<span style="color: #000080; text-decoration-color: #000080">│</span>                             <span style="font-weight: bold">[</span><span style="color: #008080; text-decoration-color: #008080; font-weight: bold">-1.04855297e+00</span>, <span style="color: #008080; text-decoration-color: #008080; font-weight: bold">-1.42001794e+00</span>, <span style="color: #008080; text-decoration-color: #008080; font-weight: bold">-1.70627019e+00</span>, <span style="color: #808000; text-decoration-color: #808000">...</span>,                            <span style="color: #000080; text-decoration-color: #000080">│</span>
<span style="color: #000080; text-decoration-color: #000080">│</span>                               <span style="color: #008080; text-decoration-color: #008080; font-weight: bold">3.02471898e-01</span>, <span style="color: #008080; text-decoration-color: #008080; font-weight: bold">-6.34322094e-01</span>, <span style="color: #008080; text-decoration-color: #008080; font-weight: bold">-3.62741166e-01</span><span style="font-weight: bold">]</span>,                                <span style="color: #000080; text-decoration-color: #000080">│</span>
<span style="color: #000080; text-decoration-color: #000080">│</span>                             <span style="color: #808000; text-decoration-color: #808000">...</span>,                                                                                <span style="color: #000080; text-decoration-color: #000080">│</span>
<span style="color: #000080; text-decoration-color: #000080">│</span>                             <span style="font-weight: bold">[</span> <span style="color: #008080; text-decoration-color: #008080; font-weight: bold">8.73311836e-01</span>,  <span style="color: #008080; text-decoration-color: #008080; font-weight: bold">1.19973618e+00</span>,  <span style="color: #008080; text-decoration-color: #008080; font-weight: bold">4.56153036e-01</span>, <span style="color: #808000; text-decoration-color: #808000">...</span>,                            <span style="color: #000080; text-decoration-color: #000080">│</span>
<span style="color: #000080; text-decoration-color: #000080">│</span>                              <span style="color: #008080; text-decoration-color: #008080; font-weight: bold">-1.24021634e+00</span>,  <span style="color: #008080; text-decoration-color: #008080; font-weight: bold">9.00054243e-01</span>,  <span style="color: #008080; text-decoration-color: #008080; font-weight: bold">1.80224223e+00</span><span style="font-weight: bold">]</span>,                                <span style="color: #000080; text-decoration-color: #000080">│</span>
<span style="color: #000080; text-decoration-color: #000080">│</span>                             <span style="font-weight: bold">[</span><span style="color: #008080; text-decoration-color: #008080; font-weight: bold">-2.08285103e-01</span>,  <span style="color: #008080; text-decoration-color: #008080; font-weight: bold">1.57437124e+00</span>,  <span style="color: #008080; text-decoration-color: #008080; font-weight: bold">1.98989494e-01</span>, <span style="color: #808000; text-decoration-color: #808000">...</span>,                            <span style="color: #000080; text-decoration-color: #000080">│</span>
<span style="color: #000080; text-decoration-color: #000080">│</span>                               <span style="color: #008080; text-decoration-color: #008080; font-weight: bold">4.32837621e-01</span>, <span style="color: #008080; text-decoration-color: #008080; font-weight: bold">-8.08717532e-01</span>, <span style="color: #008080; text-decoration-color: #008080; font-weight: bold">-1.10412399e+00</span><span style="font-weight: bold">]</span>,                                <span style="color: #000080; text-decoration-color: #000080">│</span>
<span style="color: #000080; text-decoration-color: #000080">│</span>                             <span style="font-weight: bold">[</span><span style="color: #008080; text-decoration-color: #008080; font-weight: bold">-7.89102180e-01</span>,  <span style="color: #008080; text-decoration-color: #008080; font-weight: bold">1.24845579e-03</span>, <span style="color: #008080; text-decoration-color: #008080; font-weight: bold">-1.59939788e-01</span>, <span style="color: #808000; text-decoration-color: #808000">...</span>,                            <span style="color: #000080; text-decoration-color: #000080">│</span>
<span style="color: #000080; text-decoration-color: #000080">│</span>                               <span style="color: #008080; text-decoration-color: #008080; font-weight: bold">1.58433847e-01</span>, <span style="color: #008080; text-decoration-color: #008080; font-weight: bold">-1.14190142e+00</span>, <span style="color: #008080; text-decoration-color: #008080; font-weight: bold">-1.31097037e+00</span><span style="font-weight: bold">]])</span>                               <span style="color: #000080; text-decoration-color: #000080">│</span>
<span style="color: #000080; text-decoration-color: #000080">│</span> <span style="color: #bfbf7f; text-decoration-color: #bfbf7f; font-style: italic">__text_signature__</span> = <span style="color: #800080; text-decoration-color: #800080; font-style: italic">None</span>                                                                                       <span style="color: #000080; text-decoration-color: #000080">│</span>
<span style="color: #000080; text-decoration-color: #000080">│</span>           <span style="color: #bfbf7f; text-decoration-color: #bfbf7f; font-style: italic">__call__</span> = <span style="color: #00ffff; text-decoration-color: #00ffff; font-style: italic">def </span><span style="color: #800000; text-decoration-color: #800000; font-weight: bold">__call__</span><span style="font-weight: bold">(</span>*args, **kwargs<span style="font-weight: bold">)</span>: <span style="color: #7f7f7f; text-decoration-color: #7f7f7f">Call self as a function.</span>                                    <span style="color: #000080; text-decoration-color: #000080">│</span>
<span style="color: #000080; text-decoration-color: #000080">│</span>          <span style="color: #bfbf7f; text-decoration-color: #bfbf7f; font-style: italic">__class__</span> = <span style="color: #00ffff; text-decoration-color: #00ffff; font-style: italic">class </span><span style="color: #800000; text-decoration-color: #800000; font-weight: bold">__class__</span><span style="font-weight: bold">()</span>:                                                                         <span style="color: #000080; text-decoration-color: #000080">│</span>
<span style="color: #000080; text-decoration-color: #000080">│</span>        <span style="color: #bfbf7f; text-decoration-color: #bfbf7f; font-style: italic">__delattr__</span> = <span style="color: #00ffff; text-decoration-color: #00ffff; font-style: italic">def </span><span style="color: #800000; text-decoration-color: #800000; font-weight: bold">__delattr__</span><span style="font-weight: bold">(</span>name, <span style="color: #800080; text-decoration-color: #800080">/</span><span style="font-weight: bold">)</span>: <span style="color: #7f7f7f; text-decoration-color: #7f7f7f">Implement </span><span style="color: #bf7fbf; text-decoration-color: #bf7fbf; font-weight: bold">delattr</span><span style="color: #7f7f7f; text-decoration-color: #7f7f7f; font-weight: bold">(</span><span style="color: #7f7f7f; text-decoration-color: #7f7f7f">self, name</span><span style="color: #7f7f7f; text-decoration-color: #7f7f7f; font-weight: bold">)</span><span style="color: #7f7f7f; text-decoration-color: #7f7f7f">.</span>                                   <span style="color: #000080; text-decoration-color: #000080">│</span>
<span style="color: #000080; text-decoration-color: #000080">│</span>            <span style="color: #bfbf7f; text-decoration-color: #bfbf7f; font-style: italic">__dir__</span> = <span style="color: #00ffff; text-decoration-color: #00ffff; font-style: italic">def </span><span style="color: #800000; text-decoration-color: #800000; font-weight: bold">__dir__</span><span style="font-weight: bold">()</span>: <span style="color: #7f7f7f; text-decoration-color: #7f7f7f">Default </span><span style="color: #bf7fbf; text-decoration-color: #bf7fbf; font-weight: bold">dir</span><span style="color: #7f7f7f; text-decoration-color: #7f7f7f; font-weight: bold">()</span><span style="color: #7f7f7f; text-decoration-color: #7f7f7f"> implementation.</span>                                               <span style="color: #000080; text-decoration-color: #000080">│</span>
<span style="color: #000080; text-decoration-color: #000080">│</span>             <span style="color: #bfbf7f; text-decoration-color: #bfbf7f; font-style: italic">__eq__</span> = <span style="color: #00ffff; text-decoration-color: #00ffff; font-style: italic">def </span><span style="color: #800000; text-decoration-color: #800000; font-weight: bold">__eq__</span><span style="font-weight: bold">(</span>value, <span style="color: #800080; text-decoration-color: #800080">/</span><span style="font-weight: bold">)</span>: <span style="color: #7f7f7f; text-decoration-color: #7f7f7f">Return </span><span style="color: #bfbf7f; text-decoration-color: #bfbf7f">self</span><span style="color: #7f7f7f; text-decoration-color: #7f7f7f">==value.</span>                                                  <span style="color: #000080; text-decoration-color: #000080">│</span>
<span style="color: #000080; text-decoration-color: #000080">│</span>         <span style="color: #bfbf7f; text-decoration-color: #bfbf7f; font-style: italic">__format__</span> = <span style="color: #00ffff; text-decoration-color: #00ffff; font-style: italic">def </span><span style="color: #800000; text-decoration-color: #800000; font-weight: bold">__format__</span><span style="font-weight: bold">(</span>format_spec, <span style="color: #800080; text-decoration-color: #800080">/</span><span style="font-weight: bold">)</span>: <span style="color: #7f7f7f; text-decoration-color: #7f7f7f">Default object formatter.</span>                                  <span style="color: #000080; text-decoration-color: #000080">│</span>
<span style="color: #000080; text-decoration-color: #000080">│</span>             <span style="color: #bfbf7f; text-decoration-color: #bfbf7f; font-style: italic">__ge__</span> = <span style="color: #00ffff; text-decoration-color: #00ffff; font-style: italic">def </span><span style="color: #800000; text-decoration-color: #800000; font-weight: bold">__ge__</span><span style="font-weight: bold">(</span>value, <span style="color: #800080; text-decoration-color: #800080">/</span><span style="font-weight: bold">)</span>: <span style="color: #7f7f7f; text-decoration-color: #7f7f7f">Return self&gt;=value.</span>                                                  <span style="color: #000080; text-decoration-color: #000080">│</span>
<span style="color: #000080; text-decoration-color: #000080">│</span>   <span style="color: #bfbf7f; text-decoration-color: #bfbf7f; font-style: italic">__getattribute__</span> = <span style="color: #00ffff; text-decoration-color: #00ffff; font-style: italic">def </span><span style="color: #800000; text-decoration-color: #800000; font-weight: bold">__getattribute__</span><span style="font-weight: bold">(</span>name, <span style="color: #800080; text-decoration-color: #800080">/</span><span style="font-weight: bold">)</span>: <span style="color: #7f7f7f; text-decoration-color: #7f7f7f">Return </span><span style="color: #bf7fbf; text-decoration-color: #bf7fbf; font-weight: bold">getattr</span><span style="color: #7f7f7f; text-decoration-color: #7f7f7f; font-weight: bold">(</span><span style="color: #7f7f7f; text-decoration-color: #7f7f7f">self, name</span><span style="color: #7f7f7f; text-decoration-color: #7f7f7f; font-weight: bold">)</span><span style="color: #7f7f7f; text-decoration-color: #7f7f7f">.</span>                                 <span style="color: #000080; text-decoration-color: #000080">│</span>
<span style="color: #000080; text-decoration-color: #000080">│</span>             <span style="color: #bfbf7f; text-decoration-color: #bfbf7f; font-style: italic">__gt__</span> = <span style="color: #00ffff; text-decoration-color: #00ffff; font-style: italic">def </span><span style="color: #800000; text-decoration-color: #800000; font-weight: bold">__gt__</span><span style="font-weight: bold">(</span>value, <span style="color: #800080; text-decoration-color: #800080">/</span><span style="font-weight: bold">)</span>: <span style="color: #7f7f7f; text-decoration-color: #7f7f7f">Return self&gt;value.</span>                                                   <span style="color: #000080; text-decoration-color: #000080">│</span>
<span style="color: #000080; text-decoration-color: #000080">│</span>           <span style="color: #bfbf7f; text-decoration-color: #bfbf7f; font-style: italic">__hash__</span> = <span style="color: #00ffff; text-decoration-color: #00ffff; font-style: italic">def </span><span style="color: #800000; text-decoration-color: #800000; font-weight: bold">__hash__</span><span style="font-weight: bold">()</span>: <span style="color: #7f7f7f; text-decoration-color: #7f7f7f">Return </span><span style="color: #bf7fbf; text-decoration-color: #bf7fbf; font-weight: bold">hash</span><span style="color: #7f7f7f; text-decoration-color: #7f7f7f; font-weight: bold">(</span><span style="color: #7f7f7f; text-decoration-color: #7f7f7f">self</span><span style="color: #7f7f7f; text-decoration-color: #7f7f7f; font-weight: bold">)</span><span style="color: #7f7f7f; text-decoration-color: #7f7f7f">.</span>                                                         <span style="color: #000080; text-decoration-color: #000080">│</span>
<span style="color: #000080; text-decoration-color: #000080">│</span>           <span style="color: #bfbf7f; text-decoration-color: #bfbf7f; font-style: italic">__init__</span> = <span style="color: #00ffff; text-decoration-color: #00ffff; font-style: italic">def </span><span style="color: #800000; text-decoration-color: #800000; font-weight: bold">__init__</span><span style="font-weight: bold">(</span>*args, **kwargs<span style="font-weight: bold">)</span>: <span style="color: #7f7f7f; text-decoration-color: #7f7f7f">Initialize self.  See </span><span style="color: #bf7fbf; text-decoration-color: #bf7fbf; font-weight: bold">help</span><span style="color: #7f7f7f; text-decoration-color: #7f7f7f; font-weight: bold">(</span><span style="color: #bf7fbf; text-decoration-color: #bf7fbf; font-weight: bold">type</span><span style="color: #7f7f7f; text-decoration-color: #7f7f7f; font-weight: bold">(</span><span style="color: #7f7f7f; text-decoration-color: #7f7f7f">self</span><span style="color: #7f7f7f; text-decoration-color: #7f7f7f; font-weight: bold">))</span><span style="color: #7f7f7f; text-decoration-color: #7f7f7f"> for accurate </span>        <span style="color: #000080; text-decoration-color: #000080">│</span>
<span style="color: #000080; text-decoration-color: #000080">│</span>                      <span style="color: #7f7f7f; text-decoration-color: #7f7f7f">signature.</span>                                                                                 <span style="color: #000080; text-decoration-color: #000080">│</span>
<span style="color: #000080; text-decoration-color: #000080">│</span>  <span style="color: #bfbf7f; text-decoration-color: #bfbf7f; font-style: italic">__init_subclass__</span> = <span style="color: #00ffff; text-decoration-color: #00ffff; font-style: italic">def </span><span style="color: #800000; text-decoration-color: #800000; font-weight: bold">__init_subclass__</span><span style="font-weight: bold">(</span><span style="color: #808000; text-decoration-color: #808000">...</span><span style="font-weight: bold">)</span> <span style="color: #7f7f7f; text-decoration-color: #7f7f7f">This method is called when a class is subclassed.</span>               <span style="color: #000080; text-decoration-color: #000080">│</span>
<span style="color: #000080; text-decoration-color: #000080">│</span>             <span style="color: #bfbf7f; text-decoration-color: #bfbf7f; font-style: italic">__le__</span> = <span style="color: #00ffff; text-decoration-color: #00ffff; font-style: italic">def </span><span style="color: #800000; text-decoration-color: #800000; font-weight: bold">__le__</span><span style="font-weight: bold">(</span>value, <span style="color: #800080; text-decoration-color: #800080">/</span><span style="font-weight: bold">)</span>: <span style="color: #7f7f7f; text-decoration-color: #7f7f7f">Return self&lt;=value.</span>                                                  <span style="color: #000080; text-decoration-color: #000080">│</span>
<span style="color: #000080; text-decoration-color: #000080">│</span>             <span style="color: #bfbf7f; text-decoration-color: #bfbf7f; font-style: italic">__lt__</span> = <span style="color: #00ffff; text-decoration-color: #00ffff; font-style: italic">def </span><span style="color: #800000; text-decoration-color: #800000; font-weight: bold">__lt__</span><span style="font-weight: bold">(</span>value, <span style="color: #800080; text-decoration-color: #800080">/</span><span style="font-weight: bold">)</span>: <span style="color: #7f7f7f; text-decoration-color: #7f7f7f">Return self&lt;value.</span>                                                   <span style="color: #000080; text-decoration-color: #000080">│</span>
<span style="color: #000080; text-decoration-color: #000080">│</span>             <span style="color: #bfbf7f; text-decoration-color: #bfbf7f; font-style: italic">__ne__</span> = <span style="color: #00ffff; text-decoration-color: #00ffff; font-style: italic">def </span><span style="color: #800000; text-decoration-color: #800000; font-weight: bold">__ne__</span><span style="font-weight: bold">(</span>value, <span style="color: #800080; text-decoration-color: #800080">/</span><span style="font-weight: bold">)</span>: <span style="color: #7f7f7f; text-decoration-color: #7f7f7f">Return self!=value.</span>                                                  <span style="color: #000080; text-decoration-color: #000080">│</span>
<span style="color: #000080; text-decoration-color: #000080">│</span>            <span style="color: #bfbf7f; text-decoration-color: #bfbf7f; font-style: italic">__new__</span> = <span style="color: #00ffff; text-decoration-color: #00ffff; font-style: italic">def </span><span style="color: #800000; text-decoration-color: #800000; font-weight: bold">__new__</span><span style="font-weight: bold">(</span>*args, **kwargs<span style="font-weight: bold">)</span>: <span style="color: #7f7f7f; text-decoration-color: #7f7f7f">Create and return a new object.  See </span><span style="color: #bf7fbf; text-decoration-color: #bf7fbf; font-weight: bold">help</span><span style="color: #7f7f7f; text-decoration-color: #7f7f7f; font-weight: bold">(</span><span style="color: #7f7f7f; text-decoration-color: #7f7f7f">type</span><span style="color: #7f7f7f; text-decoration-color: #7f7f7f; font-weight: bold">)</span><span style="color: #7f7f7f; text-decoration-color: #7f7f7f"> for accurate</span> <span style="color: #000080; text-decoration-color: #000080">│</span>
<span style="color: #000080; text-decoration-color: #000080">│</span>                      <span style="color: #7f7f7f; text-decoration-color: #7f7f7f">signature.</span>                                                                                 <span style="color: #000080; text-decoration-color: #000080">│</span>
<span style="color: #000080; text-decoration-color: #000080">│</span>         <span style="color: #bfbf7f; text-decoration-color: #bfbf7f; font-style: italic">__reduce__</span> = <span style="color: #00ffff; text-decoration-color: #00ffff; font-style: italic">def </span><span style="color: #800000; text-decoration-color: #800000; font-weight: bold">__reduce__</span><span style="font-weight: bold">(</span><span style="color: #808000; text-decoration-color: #808000">...</span><span style="font-weight: bold">)</span> <span style="color: #7f7f7f; text-decoration-color: #7f7f7f">Helper for pickle.</span>                                                     <span style="color: #000080; text-decoration-color: #000080">│</span>
<span style="color: #000080; text-decoration-color: #000080">│</span>      <span style="color: #bfbf7f; text-decoration-color: #bfbf7f; font-style: italic">__reduce_ex__</span> = <span style="color: #00ffff; text-decoration-color: #00ffff; font-style: italic">def </span><span style="color: #800000; text-decoration-color: #800000; font-weight: bold">__reduce_ex__</span><span style="font-weight: bold">(</span>protocol, <span style="color: #800080; text-decoration-color: #800080">/</span><span style="font-weight: bold">)</span>: <span style="color: #7f7f7f; text-decoration-color: #7f7f7f">Helper for pickle.</span>                                         <span style="color: #000080; text-decoration-color: #000080">│</span>
<span style="color: #000080; text-decoration-color: #000080">│</span>           <span style="color: #bfbf7f; text-decoration-color: #bfbf7f; font-style: italic">__repr__</span> = <span style="color: #00ffff; text-decoration-color: #00ffff; font-style: italic">def </span><span style="color: #800000; text-decoration-color: #800000; font-weight: bold">__repr__</span><span style="font-weight: bold">()</span>: <span style="color: #7f7f7f; text-decoration-color: #7f7f7f">Return </span><span style="color: #bf7fbf; text-decoration-color: #bf7fbf; font-weight: bold">repr</span><span style="color: #7f7f7f; text-decoration-color: #7f7f7f; font-weight: bold">(</span><span style="color: #7f7f7f; text-decoration-color: #7f7f7f">self</span><span style="color: #7f7f7f; text-decoration-color: #7f7f7f; font-weight: bold">)</span><span style="color: #7f7f7f; text-decoration-color: #7f7f7f">.</span>                                                         <span style="color: #000080; text-decoration-color: #000080">│</span>
<span style="color: #000080; text-decoration-color: #000080">│</span>        <span style="color: #bfbf7f; text-decoration-color: #bfbf7f; font-style: italic">__setattr__</span> = <span style="color: #00ffff; text-decoration-color: #00ffff; font-style: italic">def </span><span style="color: #800000; text-decoration-color: #800000; font-weight: bold">__setattr__</span><span style="font-weight: bold">(</span>name, value, <span style="color: #800080; text-decoration-color: #800080">/</span><span style="font-weight: bold">)</span>: <span style="color: #7f7f7f; text-decoration-color: #7f7f7f">Implement </span><span style="color: #bf7fbf; text-decoration-color: #bf7fbf; font-weight: bold">setattr</span><span style="color: #7f7f7f; text-decoration-color: #7f7f7f; font-weight: bold">(</span><span style="color: #7f7f7f; text-decoration-color: #7f7f7f">self, name, value</span><span style="color: #7f7f7f; text-decoration-color: #7f7f7f; font-weight: bold">)</span><span style="color: #7f7f7f; text-decoration-color: #7f7f7f">.</span>                     <span style="color: #000080; text-decoration-color: #000080">│</span>
<span style="color: #000080; text-decoration-color: #000080">│</span>         <span style="color: #bfbf7f; text-decoration-color: #bfbf7f; font-style: italic">__sizeof__</span> = <span style="color: #00ffff; text-decoration-color: #00ffff; font-style: italic">def </span><span style="color: #800000; text-decoration-color: #800000; font-weight: bold">__sizeof__</span><span style="font-weight: bold">()</span>: <span style="color: #7f7f7f; text-decoration-color: #7f7f7f">Size of object in memory, in bytes.</span>                                      <span style="color: #000080; text-decoration-color: #000080">│</span>
<span style="color: #000080; text-decoration-color: #000080">│</span>            <span style="color: #bfbf7f; text-decoration-color: #bfbf7f; font-style: italic">__str__</span> = <span style="color: #00ffff; text-decoration-color: #00ffff; font-style: italic">def </span><span style="color: #800000; text-decoration-color: #800000; font-weight: bold">__str__</span><span style="font-weight: bold">()</span>: <span style="color: #7f7f7f; text-decoration-color: #7f7f7f">Return </span><span style="color: #bf7fbf; text-decoration-color: #bf7fbf; font-weight: bold">str</span><span style="color: #7f7f7f; text-decoration-color: #7f7f7f; font-weight: bold">(</span><span style="color: #7f7f7f; text-decoration-color: #7f7f7f">self</span><span style="color: #7f7f7f; text-decoration-color: #7f7f7f; font-weight: bold">)</span><span style="color: #7f7f7f; text-decoration-color: #7f7f7f">.</span>                                                           <span style="color: #000080; text-decoration-color: #000080">│</span>
<span style="color: #000080; text-decoration-color: #000080">│</span>   <span style="color: #bfbf7f; text-decoration-color: #bfbf7f; font-style: italic">__subclasshook__</span> = <span style="color: #00ffff; text-decoration-color: #00ffff; font-style: italic">def </span><span style="color: #800000; text-decoration-color: #800000; font-weight: bold">__subclasshook__</span><span style="font-weight: bold">(</span><span style="color: #808000; text-decoration-color: #808000">...</span><span style="font-weight: bold">)</span> <span style="color: #7f7f7f; text-decoration-color: #7f7f7f">Abstract classes can override this to customize </span><span style="color: #bf7fbf; text-decoration-color: #bf7fbf; font-weight: bold">issubclass</span><span style="color: #7f7f7f; text-decoration-color: #7f7f7f; font-weight: bold">()</span><span style="color: #7f7f7f; text-decoration-color: #7f7f7f">.</span>    <span style="color: #000080; text-decoration-color: #000080">│</span>
<span style="color: #000080; text-decoration-color: #000080">╰─────────────────────────────────────────────────────────────────────────────────────────────────────────────────╯</span>
</pre>
</div>
</div>
<div class="cell">
<div class="sourceCode cell-code" id="cb9" style="background: #f1f3f5;"><pre class="sourceCode python code-with-copy"><code class="sourceCode python"><span id="cb9-1"><span class="kw" style="color: #003B4F;">lambda</span> x: np.power(x, <span class="dv" style="color: #AD0000;">3</span>)</span>
<span id="cb9-2"></span>
<span id="cb9-3"></span>
<span id="cb9-4"><span class="kw" style="color: #003B4F;">def</span> f(x):</span>
<span id="cb9-5">    <span class="cf" style="color: #003B4F;">return</span> np.power(x, <span class="dv" style="color: #AD0000;">3</span>)</span></code></pre></div>
</div>
<div class="cell" data-execution_count="53">
<div class="sourceCode cell-code" id="cb10" style="background: #f1f3f5;"><pre class="sourceCode python code-with-copy"><code class="sourceCode python"><span id="cb10-1">d <span class="op" style="color: #5E5E5E;">=</span> {</span>
<span id="cb10-2">    <span class="vs" style="color: #20794D;">r"$\sin(x)$"</span>: np.sin,</span>
<span id="cb10-3">    <span class="vs" style="color: #20794D;">r"$\log(x)$"</span>: np.log,</span>
<span id="cb10-4">    <span class="vs" style="color: #20794D;">r"$\frac{sin(x)}</span><span class="sc" style="color: #5E5E5E;">{x}</span><span class="vs" style="color: #20794D;">$"</span>: <span class="kw" style="color: #003B4F;">lambda</span> x: np.sin(x) <span class="op" style="color: #5E5E5E;">/</span> x,</span>
<span id="cb10-5">    <span class="vs" style="color: #20794D;">r"$x^3$"</span>: <span class="kw" style="color: #003B4F;">lambda</span> x: np.power(x, <span class="dv" style="color: #AD0000;">3</span>),</span>
<span id="cb10-6">}</span></code></pre></div>
</div>
<div class="cell" data-execution_count="54">
<div class="sourceCode cell-code" id="cb11" style="background: #f1f3f5;"><pre class="sourceCode python code-with-copy"><code class="sourceCode python"><span id="cb11-1">d</span></code></pre></div>
<div class="cell-output cell-output-display" data-execution_count="54">
<pre><code>{'$\\sin(x)$': &lt;ufunc 'sin'&gt;,
 '$\\log(x)$': &lt;ufunc 'log'&gt;,
 '$\\frac{sin(x)}{x}$': &lt;function __main__.&lt;lambda&gt;(x)&gt;,
 '$x^3$': &lt;function __main__.&lt;lambda&gt;(x)&gt;}</code></pre>
</div>
</div>
<div class="cell" data-execution_count="55">
<div class="sourceCode cell-code" id="cb13" style="background: #f1f3f5;"><pre class="sourceCode python code-with-copy"><code class="sourceCode python"><span id="cb13-1">x <span class="op" style="color: #5E5E5E;">=</span> np.arange(<span class="fl" style="color: #AD0000;">0.005</span>, <span class="fl" style="color: #AD0000;">10.0</span>, <span class="fl" style="color: #AD0000;">0.005</span>)</span></code></pre></div>
</div>
<div class="cell" data-execution_count="56">
<div class="sourceCode cell-code" id="cb14" style="background: #f1f3f5;"><pre class="sourceCode python code-with-copy"><code class="sourceCode python"><span id="cb14-1">e <span class="op" style="color: #5E5E5E;">=</span> {k: v(x) <span class="cf" style="color: #003B4F;">for</span> k, v <span class="kw" style="color: #003B4F;">in</span> d.items()}</span></code></pre></div>
</div>
<div class="cell" data-execution_count="57">
<div class="sourceCode cell-code" id="cb15" style="background: #f1f3f5;"><pre class="sourceCode python code-with-copy"><code class="sourceCode python"><span id="cb15-1">e</span></code></pre></div>
<div class="cell-output cell-output-display" data-execution_count="57">
<pre><code>{'$\\sin(x)$': array([ 0.00499998,  0.00999983,  0.01499944, ..., -0.53137431,
        -0.53560333, -0.53981897]),
 '$\\log(x)$': array([-5.29831737, -4.60517019, -4.19970508, ...,  2.30108397,
         2.30158459,  2.30208497]),
 '$\\frac{sin(x)}{x}$': array([ 0.99999583,  0.99998333,  0.9999625 , ..., -0.05321726,
        -0.05361395, -0.0540089 ]),
 '$x^3$': array([1.25000000e-07, 1.00000000e-06, 3.37500000e-06, ...,
        9.95506747e+02, 9.97002999e+02, 9.98500750e+02])}</code></pre>
</div>
</div>
<div class="cell" data-execution_count="58">
<div class="sourceCode cell-code" id="cb17" style="background: #f1f3f5;"><pre class="sourceCode python code-with-copy"><code class="sourceCode python"><span id="cb17-1">df <span class="op" style="color: #5E5E5E;">=</span> pd.DataFrame(e, index<span class="op" style="color: #5E5E5E;">=</span>x)</span></code></pre></div>
</div>
<div class="cell" data-execution_count="59">
<div class="sourceCode cell-code" id="cb18" style="background: #f1f3f5;"><pre class="sourceCode python code-with-copy"><code class="sourceCode python"><span id="cb18-1">df</span></code></pre></div>
<div class="cell-output cell-output-display" data-execution_count="59">

<div>

<table class="dataframe table table-sm table-striped">
  <thead>
    <tr>
      <th></th>
      <th>$\sin(x)$</th>
      <th>$\log(x)$</th>
      <th>$\frac{sin(x)}{x}$</th>
      <th>$x^3$</th>
    </tr>
  </thead>
  <tbody>
    <tr>
      <th>0.005</th>
      <td>0.005000</td>
      <td>-5.298317</td>
      <td>0.999996</td>
      <td>1.250000e-07</td>
    </tr>
    <tr>
      <th>0.010</th>
      <td>0.010000</td>
      <td>-4.605170</td>
      <td>0.999983</td>
      <td>1.000000e-06</td>
    </tr>
    <tr>
      <th>0.015</th>
      <td>0.014999</td>
      <td>-4.199705</td>
      <td>0.999963</td>
      <td>3.375000e-06</td>
    </tr>
    <tr>
      <th>0.020</th>
      <td>0.019999</td>
      <td>-3.912023</td>
      <td>0.999933</td>
      <td>8.000000e-06</td>
    </tr>
    <tr>
      <th>0.025</th>
      <td>0.024997</td>
      <td>-3.688879</td>
      <td>0.999896</td>
      <td>1.562500e-05</td>
    </tr>
    <tr>
      <th>...</th>
      <td>...</td>
      <td>...</td>
      <td>...</td>
      <td>...</td>
    </tr>
    <tr>
      <th>9.975</th>
      <td>-0.522877</td>
      <td>2.300082</td>
      <td>-0.052419</td>
      <td>9.925187e+02</td>
    </tr>
    <tr>
      <th>9.980</th>
      <td>-0.527132</td>
      <td>2.300583</td>
      <td>-0.052819</td>
      <td>9.940120e+02</td>
    </tr>
    <tr>
      <th>9.985</th>
      <td>-0.531374</td>
      <td>2.301084</td>
      <td>-0.053217</td>
      <td>9.955067e+02</td>
    </tr>
    <tr>
      <th>9.990</th>
      <td>-0.535603</td>
      <td>2.301585</td>
      <td>-0.053614</td>
      <td>9.970030e+02</td>
    </tr>
    <tr>
      <th>9.995</th>
      <td>-0.539819</td>
      <td>2.302085</td>
      <td>-0.054009</td>
      <td>9.985007e+02</td>
    </tr>
  </tbody>
</table>
<p>1999 rows × 4 columns</p>
</div>
</div>
</div>
<div class="cell" data-execution_count="64">
<div class="sourceCode cell-code" id="cb19" style="background: #f1f3f5;"><pre class="sourceCode python code-with-copy"><code class="sourceCode python"><span id="cb19-1">df.plot()</span></code></pre></div>
<div class="cell-output cell-output-display" data-execution_count="64">
<pre><code>&lt;AxesSubplot:&gt;</code></pre>
</div>
<div class="cell-output cell-output-display">
<p><img src="https://github.com/nipunbatra/ml2023/notebooks/posts/tips_files/figure-html/cell-15-output-2.png" class="img-fluid"></p>
</div>
</div>
<div class="cell" data-execution_count="63">
<div class="sourceCode cell-code" id="cb21" style="background: #f1f3f5;"><pre class="sourceCode python code-with-copy"><code class="sourceCode python"><span id="cb21-1">df.plot(subplots<span class="op" style="color: #5E5E5E;">=</span><span class="va" style="color: #111111;">True</span>)</span></code></pre></div>
<div class="cell-output cell-output-display" data-execution_count="63">
<pre><code>array([&lt;AxesSubplot:&gt;, &lt;AxesSubplot:&gt;, &lt;AxesSubplot:&gt;, &lt;AxesSubplot:&gt;],
      dtype=object)</code></pre>
</div>
<div class="cell-output cell-output-display">
<p><img src="https://github.com/nipunbatra/ml2023/notebooks/posts/tips_files/figure-html/cell-16-output-2.png" class="img-fluid"></p>
</div>
</div>
<div class="cell" data-execution_count="46">
<div class="sourceCode cell-code" id="cb23" style="background: #f1f3f5;"><pre class="sourceCode python code-with-copy"><code class="sourceCode python"><span id="cb23-1">df</span></code></pre></div>
<div class="cell-output cell-output-display" data-execution_count="46">

<div>

<table class="dataframe table table-sm table-striped">
  <thead>
    <tr>
      <th></th>
      <th>$\sin$</th>
      <th>log</th>
      <th>$\frac{sin(x)}{x}$</th>
      <th>x^3</th>
    </tr>
  </thead>
  <tbody>
    <tr>
      <th>0.005</th>
      <td>0.005000</td>
      <td>-5.298317</td>
      <td>0.999996</td>
      <td>1.250000e-07</td>
    </tr>
    <tr>
      <th>0.010</th>
      <td>0.010000</td>
      <td>-4.605170</td>
      <td>0.999983</td>
      <td>1.000000e-06</td>
    </tr>
    <tr>
      <th>0.015</th>
      <td>0.014999</td>
      <td>-4.199705</td>
      <td>0.999963</td>
      <td>3.375000e-06</td>
    </tr>
    <tr>
      <th>0.020</th>
      <td>0.019999</td>
      <td>-3.912023</td>
      <td>0.999933</td>
      <td>8.000000e-06</td>
    </tr>
    <tr>
      <th>0.025</th>
      <td>0.024997</td>
      <td>-3.688879</td>
      <td>0.999896</td>
      <td>1.562500e-05</td>
    </tr>
    <tr>
      <th>...</th>
      <td>...</td>
      <td>...</td>
      <td>...</td>
      <td>...</td>
    </tr>
    <tr>
      <th>9.975</th>
      <td>-0.522877</td>
      <td>2.300082</td>
      <td>-0.052419</td>
      <td>9.925187e+02</td>
    </tr>
    <tr>
      <th>9.980</th>
      <td>-0.527132</td>
      <td>2.300583</td>
      <td>-0.052819</td>
      <td>9.940120e+02</td>
    </tr>
    <tr>
      <th>9.985</th>
      <td>-0.531374</td>
      <td>2.301084</td>
      <td>-0.053217</td>
      <td>9.955067e+02</td>
    </tr>
    <tr>
      <th>9.990</th>
      <td>-0.535603</td>
      <td>2.301585</td>
      <td>-0.053614</td>
      <td>9.970030e+02</td>
    </tr>
    <tr>
      <th>9.995</th>
      <td>-0.539819</td>
      <td>2.302085</td>
      <td>-0.054009</td>
      <td>9.985007e+02</td>
    </tr>
  </tbody>
</table>
<p>1999 rows × 4 columns</p>
</div>
</div>
</div>
<div class="cell" data-execution_count="65">
<div class="sourceCode cell-code" id="cb24" style="background: #f1f3f5;"><pre class="sourceCode python code-with-copy"><code class="sourceCode python"><span id="cb24-1">((df <span class="op" style="color: #5E5E5E;">-</span> df.<span class="bu" style="color: null;">min</span>(axis<span class="op" style="color: #5E5E5E;">=</span><span class="dv" style="color: #AD0000;">0</span>)) <span class="op" style="color: #5E5E5E;">/</span> (df.<span class="bu" style="color: null;">max</span>(axis<span class="op" style="color: #5E5E5E;">=</span><span class="dv" style="color: #AD0000;">0</span>) <span class="op" style="color: #5E5E5E;">-</span> df.<span class="bu" style="color: null;">min</span>(axis<span class="op" style="color: #5E5E5E;">=</span><span class="dv" style="color: #AD0000;">0</span>))).plot()</span></code></pre></div>
<div class="cell-output cell-output-display" data-execution_count="65">
<pre><code>&lt;AxesSubplot:&gt;</code></pre>
</div>
<div class="cell-output cell-output-display">
<p><img src="https://github.com/nipunbatra/ml2023/notebooks/posts/tips_files/figure-html/cell-18-output-2.png" class="img-fluid"></p>
</div>
</div>
<div class="cell" data-execution_count="66">
<div class="sourceCode cell-code" id="cb26" style="background: #f1f3f5;"><pre class="sourceCode python code-with-copy"><code class="sourceCode python"><span id="cb26-1">df <span class="op" style="color: #5E5E5E;">=</span> pd.DataFrame(np.random.randn(<span class="dv" style="color: #AD0000;">1000</span>, <span class="dv" style="color: #AD0000;">5</span>),</span>
<span id="cb26-2">                  columns<span class="op" style="color: #5E5E5E;">=</span><span class="st" style="color: #20794D;">"a,b,c,d,e"</span>.split(<span class="st" style="color: #20794D;">","</span>))</span>
<span id="cb26-3">df</span></code></pre></div>
<div class="cell-output cell-output-display" data-execution_count="66">

<div>

<table class="dataframe table table-sm table-striped">
  <thead>
    <tr>
      <th></th>
      <th>a</th>
      <th>b</th>
      <th>c</th>
      <th>d</th>
      <th>e</th>
    </tr>
  </thead>
  <tbody>
    <tr>
      <th>0</th>
      <td>1.593274</td>
      <td>0.568722</td>
      <td>-0.114487</td>
      <td>0.251630</td>
      <td>-1.210856</td>
    </tr>
    <tr>
      <th>1</th>
      <td>-0.393734</td>
      <td>0.085253</td>
      <td>0.099422</td>
      <td>-1.530616</td>
      <td>0.327623</td>
    </tr>
    <tr>
      <th>2</th>
      <td>0.279196</td>
      <td>-0.377051</td>
      <td>0.004175</td>
      <td>-1.483492</td>
      <td>-1.479796</td>
    </tr>
    <tr>
      <th>3</th>
      <td>0.134687</td>
      <td>-0.667723</td>
      <td>-0.011556</td>
      <td>0.839491</td>
      <td>-0.173930</td>
    </tr>
    <tr>
      <th>4</th>
      <td>-2.810668</td>
      <td>-0.150654</td>
      <td>-0.481044</td>
      <td>-0.234694</td>
      <td>0.899731</td>
    </tr>
    <tr>
      <th>...</th>
      <td>...</td>
      <td>...</td>
      <td>...</td>
      <td>...</td>
      <td>...</td>
    </tr>
    <tr>
      <th>995</th>
      <td>-0.837658</td>
      <td>1.315288</td>
      <td>-0.364523</td>
      <td>1.993571</td>
      <td>1.584878</td>
    </tr>
    <tr>
      <th>996</th>
      <td>-2.104663</td>
      <td>-2.553118</td>
      <td>-1.242666</td>
      <td>0.201987</td>
      <td>-0.305332</td>
    </tr>
    <tr>
      <th>997</th>
      <td>-1.195587</td>
      <td>-1.577903</td>
      <td>0.849912</td>
      <td>0.327590</td>
      <td>-0.001670</td>
    </tr>
    <tr>
      <th>998</th>
      <td>-0.035563</td>
      <td>-0.489252</td>
      <td>1.930498</td>
      <td>-0.262645</td>
      <td>0.825932</td>
    </tr>
    <tr>
      <th>999</th>
      <td>-0.643267</td>
      <td>-0.828981</td>
      <td>-0.202735</td>
      <td>-0.257866</td>
      <td>0.070815</td>
    </tr>
  </tbody>
</table>
<p>1000 rows × 5 columns</p>
</div>
</div>
</div>
<div class="cell" data-execution_count="67">
<div class="sourceCode cell-code" id="cb27" style="background: #f1f3f5;"><pre class="sourceCode python code-with-copy"><code class="sourceCode python"><span id="cb27-1">df <span class="op" style="color: #5E5E5E;">=</span> df.assign(f<span class="op" style="color: #5E5E5E;">=</span>df.<span class="bu" style="color: null;">sum</span>(axis<span class="op" style="color: #5E5E5E;">=</span><span class="dv" style="color: #AD0000;">1</span>))</span></code></pre></div>
</div>
<div class="cell" data-execution_count="68">
<div class="sourceCode cell-code" id="cb28" style="background: #f1f3f5;"><pre class="sourceCode python code-with-copy"><code class="sourceCode python"><span id="cb28-1">df</span></code></pre></div>
<div class="cell-output cell-output-display" data-execution_count="68">

<div>

<table class="dataframe table table-sm table-striped">
  <thead>
    <tr>
      <th></th>
      <th>a</th>
      <th>b</th>
      <th>c</th>
      <th>d</th>
      <th>e</th>
      <th>f</th>
    </tr>
  </thead>
  <tbody>
    <tr>
      <th>0</th>
      <td>1.593274</td>
      <td>0.568722</td>
      <td>-0.114487</td>
      <td>0.251630</td>
      <td>-1.210856</td>
      <td>1.088284</td>
    </tr>
    <tr>
      <th>1</th>
      <td>-0.393734</td>
      <td>0.085253</td>
      <td>0.099422</td>
      <td>-1.530616</td>
      <td>0.327623</td>
      <td>-1.412052</td>
    </tr>
    <tr>
      <th>2</th>
      <td>0.279196</td>
      <td>-0.377051</td>
      <td>0.004175</td>
      <td>-1.483492</td>
      <td>-1.479796</td>
      <td>-3.056967</td>
    </tr>
    <tr>
      <th>3</th>
      <td>0.134687</td>
      <td>-0.667723</td>
      <td>-0.011556</td>
      <td>0.839491</td>
      <td>-0.173930</td>
      <td>0.120969</td>
    </tr>
    <tr>
      <th>4</th>
      <td>-2.810668</td>
      <td>-0.150654</td>
      <td>-0.481044</td>
      <td>-0.234694</td>
      <td>0.899731</td>
      <td>-2.777329</td>
    </tr>
    <tr>
      <th>...</th>
      <td>...</td>
      <td>...</td>
      <td>...</td>
      <td>...</td>
      <td>...</td>
      <td>...</td>
    </tr>
    <tr>
      <th>995</th>
      <td>-0.837658</td>
      <td>1.315288</td>
      <td>-0.364523</td>
      <td>1.993571</td>
      <td>1.584878</td>
      <td>3.691555</td>
    </tr>
    <tr>
      <th>996</th>
      <td>-2.104663</td>
      <td>-2.553118</td>
      <td>-1.242666</td>
      <td>0.201987</td>
      <td>-0.305332</td>
      <td>-6.003792</td>
    </tr>
    <tr>
      <th>997</th>
      <td>-1.195587</td>
      <td>-1.577903</td>
      <td>0.849912</td>
      <td>0.327590</td>
      <td>-0.001670</td>
      <td>-1.597657</td>
    </tr>
    <tr>
      <th>998</th>
      <td>-0.035563</td>
      <td>-0.489252</td>
      <td>1.930498</td>
      <td>-0.262645</td>
      <td>0.825932</td>
      <td>1.968971</td>
    </tr>
    <tr>
      <th>999</th>
      <td>-0.643267</td>
      <td>-0.828981</td>
      <td>-0.202735</td>
      <td>-0.257866</td>
      <td>0.070815</td>
      <td>-1.862035</td>
    </tr>
  </tbody>
</table>
<p>1000 rows × 6 columns</p>
</div>
</div>
</div>
<div class="cell" data-execution_count="66">
<div class="sourceCode cell-code" id="cb29" style="background: #f1f3f5;"><pre class="sourceCode python code-with-copy"><code class="sourceCode python"><span id="cb29-1">df.query(<span class="st" style="color: #20794D;">"f &gt; 5"</span>)[<span class="st" style="color: #20794D;">"f"</span>].std()</span></code></pre></div>
<div class="cell-output cell-output-display" data-execution_count="66">
<pre><code>0.6609257763922614</code></pre>
</div>
</div>
<div class="cell" data-execution_count="67">
<div class="sourceCode cell-code" id="cb31" style="background: #f1f3f5;"><pre class="sourceCode python code-with-copy"><code class="sourceCode python"><span id="cb31-1">df.query(<span class="st" style="color: #20794D;">"f &lt;= 5"</span>)[<span class="st" style="color: #20794D;">"f"</span>].std()</span></code></pre></div>
<div class="cell-output cell-output-display" data-execution_count="67">
<pre><code>2.1891090850524444</code></pre>
</div>
</div>
<div class="cell" data-execution_count="71">
<div class="sourceCode cell-code" id="cb33" style="background: #f1f3f5;"><pre class="sourceCode python code-with-copy"><code class="sourceCode python"><span id="cb33-1"><span class="co" style="color: #5E5E5E;">"tolist"</span> <span class="kw" style="color: #003B4F;">in</span> <span class="bu" style="color: null;">dir</span>(df)</span></code></pre></div>
<div class="cell-output cell-output-display" data-execution_count="71">
<pre><code>False</code></pre>
</div>
</div>
<div class="cell" data-execution_count="29">
<div class="sourceCode cell-code" id="cb35" style="background: #f1f3f5;"><pre class="sourceCode python code-with-copy"><code class="sourceCode python"><span id="cb35-1"><span class="kw" style="color: #003B4F;">def</span> search(obj, query):</span>
<span id="cb35-2">    <span class="im" style="color: #00769E;">import</span> re</span>
<span id="cb35-3"></span>
<span id="cb35-4">    <span class="cf" style="color: #003B4F;">return</span> <span class="bu" style="color: null;">list</span>(<span class="bu" style="color: null;">filter</span>(<span class="kw" style="color: #003B4F;">lambda</span> x: re.search(query, x), <span class="bu" style="color: null;">dir</span>(obj)))</span></code></pre></div>
</div>
<div class="cell" data-execution_count="34">
<div class="sourceCode cell-code" id="cb36" style="background: #f1f3f5;"><pre class="sourceCode python code-with-copy"><code class="sourceCode python"><span id="cb36-1">search(a, <span class="st" style="color: #20794D;">"lis"</span>)</span></code></pre></div>
<div class="cell-output cell-output-display" data-execution_count="34">
<pre><code>['tolist']</code></pre>
</div>
</div>
<div class="cell" data-execution_count="1">
<div class="sourceCode cell-code" id="cb38" style="background: #f1f3f5;"><pre class="sourceCode python code-with-copy"><code class="sourceCode python"><span id="cb38-1"><span class="im" style="color: #00769E;">import</span> numpy <span class="im" style="color: #00769E;">as</span> np</span>
<span id="cb38-2"><span class="im" style="color: #00769E;">import</span> pandas <span class="im" style="color: #00769E;">as</span> pd</span></code></pre></div>
</div>
<div class="cell" data-execution_count="98">
<div class="sourceCode cell-code" id="cb39" style="background: #f1f3f5;"><pre class="sourceCode python code-with-copy"><code class="sourceCode python"><span id="cb39-1"><span class="kw" style="color: #003B4F;">def</span> search(obj, query):</span>
<span id="cb39-2">    <span class="im" style="color: #00769E;">import</span> re</span>
<span id="cb39-3">    <span class="im" style="color: #00769E;">from</span> rich <span class="im" style="color: #00769E;">import</span> inspect</span>
<span id="cb39-4">    <span class="im" style="color: #00769E;">from</span> rich.pretty <span class="im" style="color: #00769E;">import</span> Pretty</span>
<span id="cb39-5">    <span class="im" style="color: #00769E;">from</span> rich.panel <span class="im" style="color: #00769E;">import</span> Panel</span>
<span id="cb39-6"></span>
<span id="cb39-7">    z <span class="op" style="color: #5E5E5E;">=</span> <span class="bu" style="color: null;">list</span>(<span class="bu" style="color: null;">filter</span>(<span class="kw" style="color: #003B4F;">lambda</span> x: re.search(query, x), <span class="bu" style="color: null;">dir</span>(obj)))</span>
<span id="cb39-8">    p <span class="op" style="color: #5E5E5E;">=</span> Panel(Pretty(<span class="st" style="color: #20794D;">"a"</span>), title<span class="op" style="color: #5E5E5E;">=</span><span class="ss" style="color: #20794D;">f"Searching for `</span><span class="sc" style="color: #5E5E5E;">{</span>query<span class="sc" style="color: #5E5E5E;">}</span><span class="ss" style="color: #20794D;">`"</span>)</span>
<span id="cb39-9">    <span class="co" style="color: #5E5E5E;"># return p</span></span>
<span id="cb39-10">    ps <span class="op" style="color: #5E5E5E;">=</span> []</span>
<span id="cb39-11">    <span class="cf" style="color: #003B4F;">for</span> q <span class="kw" style="color: #003B4F;">in</span> z:</span>
<span id="cb39-12">        ps.append(Panel(Pretty(inspect(<span class="bu" style="color: null;">getattr</span>(obj, q), methods<span class="op" style="color: #5E5E5E;">=</span><span class="va" style="color: #111111;">True</span>, docs<span class="op" style="color: #5E5E5E;">=</span><span class="va" style="color: #111111;">True</span>))))</span></code></pre></div>
</div>
<div class="cell" data-execution_count="99">
<div class="sourceCode cell-code" id="cb40" style="background: #f1f3f5;"><pre class="sourceCode python code-with-copy"><code class="sourceCode python"><span id="cb40-1">search(np.random, <span class="st" style="color: #20794D;">"normal"</span>)</span></code></pre></div>
<div class="cell-output cell-output-display">
<pre style="white-space:pre;overflow-x:auto;line-height:normal;font-family:Menlo,'DejaVu Sans Mono',consolas,'Courier New',monospace"><span style="color: #000080; text-decoration-color: #000080">╭─ </span><span style="color: #000080; text-decoration-color: #000080; font-weight: bold">&lt;</span><span style="color: #ff00ff; text-decoration-color: #ff00ff; font-weight: bold">built-in</span><span style="color: #000000; text-decoration-color: #000000"> method lognormal of numpy.random.mtrand.RandomState object at </span><span style="color: #008080; text-decoration-color: #008080; font-weight: bold">0x10c627840</span><span style="color: #000080; text-decoration-color: #000080; font-weight: bold">&gt;</span><span style="color: #000080; text-decoration-color: #000080"> ─╮</span>
<span style="color: #000080; text-decoration-color: #000080">│</span> <span style="color: #00ffff; text-decoration-color: #00ffff; font-style: italic">def </span><span style="color: #800000; text-decoration-color: #800000; font-weight: bold">RandomState.lognormal</span><span style="font-weight: bold">(</span><span style="color: #808000; text-decoration-color: #808000">...</span><span style="font-weight: bold">)</span>                                                         <span style="color: #000080; text-decoration-color: #000080">│</span>
<span style="color: #000080; text-decoration-color: #000080">│</span>                                                                                        <span style="color: #000080; text-decoration-color: #000080">│</span>
<span style="color: #000080; text-decoration-color: #000080">│</span> <span style="color: #800080; text-decoration-color: #800080; font-weight: bold">lognormal</span><span style="color: #008080; text-decoration-color: #008080; font-weight: bold">(</span><span style="color: #808000; text-decoration-color: #808000">mean</span><span style="color: #008080; text-decoration-color: #008080">=</span><span style="color: #008080; text-decoration-color: #008080; font-weight: bold">0.0</span><span style="color: #008080; text-decoration-color: #008080">, </span><span style="color: #808000; text-decoration-color: #808000">sigma</span><span style="color: #008080; text-decoration-color: #008080">=</span><span style="color: #008080; text-decoration-color: #008080; font-weight: bold">1.0</span><span style="color: #008080; text-decoration-color: #008080">, </span><span style="color: #808000; text-decoration-color: #808000">size</span><span style="color: #008080; text-decoration-color: #008080">=</span><span style="color: #800080; text-decoration-color: #800080; font-style: italic">None</span><span style="color: #008080; text-decoration-color: #008080; font-weight: bold">)</span>                                              <span style="color: #000080; text-decoration-color: #000080">│</span>
<span style="color: #000080; text-decoration-color: #000080">│</span>                                                                                        <span style="color: #000080; text-decoration-color: #000080">│</span>
<span style="color: #000080; text-decoration-color: #000080">│</span> <span style="color: #008080; text-decoration-color: #008080; font-weight: bold">29</span><span style="font-style: italic"> attribute(s) not shown.</span> Run <span style="color: #800080; text-decoration-color: #800080; font-weight: bold">inspect</span><span style="font-weight: bold">(</span>inspect<span style="font-weight: bold">)</span> for options.                           <span style="color: #000080; text-decoration-color: #000080">│</span>
<span style="color: #000080; text-decoration-color: #000080">╰────────────────────────────────────────────────────────────────────────────────────────╯</span>
</pre>
</div>
<div class="cell-output cell-output-display">
<pre style="white-space:pre;overflow-x:auto;line-height:normal;font-family:Menlo,'DejaVu Sans Mono',consolas,'Courier New',monospace"><span style="color: #000080; text-decoration-color: #000080">╭─ </span><span style="color: #000080; text-decoration-color: #000080; font-weight: bold">&lt;</span><span style="color: #ff00ff; text-decoration-color: #ff00ff; font-weight: bold">built-in</span><span style="color: #000000; text-decoration-color: #000000"> method multivariate_normal of numpy.random.mtrand.RandomState object at </span><span style="color: #008080; text-decoration-color: #008080; font-weight: bold">0x10c627840</span><span style="color: #000080; text-decoration-color: #000080; font-weight: bold">&gt;</span><span style="color: #000080; text-decoration-color: #000080"> ─╮</span>
<span style="color: #000080; text-decoration-color: #000080">│</span> <span style="color: #00ffff; text-decoration-color: #00ffff; font-style: italic">def </span><span style="color: #800000; text-decoration-color: #800000; font-weight: bold">RandomState.multivariate_normal</span><span style="font-weight: bold">(</span><span style="color: #808000; text-decoration-color: #808000">...</span><span style="font-weight: bold">)</span>                                                         <span style="color: #000080; text-decoration-color: #000080">│</span>
<span style="color: #000080; text-decoration-color: #000080">│</span>                                                                                                  <span style="color: #000080; text-decoration-color: #000080">│</span>
<span style="color: #000080; text-decoration-color: #000080">│</span> <span style="color: #800080; text-decoration-color: #800080; font-weight: bold">multivariate_normal</span><span style="color: #008080; text-decoration-color: #008080; font-weight: bold">(</span><span style="color: #008080; text-decoration-color: #008080">mean, cov, </span><span style="color: #808000; text-decoration-color: #808000">size</span><span style="color: #008080; text-decoration-color: #008080">=</span><span style="color: #800080; text-decoration-color: #800080; font-style: italic">None</span><span style="color: #008080; text-decoration-color: #008080">, </span><span style="color: #808000; text-decoration-color: #808000">check_valid</span><span style="color: #008080; text-decoration-color: #008080">=</span><span style="color: #008000; text-decoration-color: #008000">'warn'</span><span style="color: #008080; text-decoration-color: #008080">, </span><span style="color: #808000; text-decoration-color: #808000">tol</span><span style="color: #008080; text-decoration-color: #008080">=</span><span style="color: #008080; text-decoration-color: #008080; font-weight: bold">1e-8</span><span style="color: #008080; text-decoration-color: #008080; font-weight: bold">)</span>                          <span style="color: #000080; text-decoration-color: #000080">│</span>
<span style="color: #000080; text-decoration-color: #000080">│</span>                                                                                                  <span style="color: #000080; text-decoration-color: #000080">│</span>
<span style="color: #000080; text-decoration-color: #000080">│</span> <span style="color: #008080; text-decoration-color: #008080; font-weight: bold">29</span><span style="font-style: italic"> attribute(s) not shown.</span> Run <span style="color: #800080; text-decoration-color: #800080; font-weight: bold">inspect</span><span style="font-weight: bold">(</span>inspect<span style="font-weight: bold">)</span> for options.                                     <span style="color: #000080; text-decoration-color: #000080">│</span>
<span style="color: #000080; text-decoration-color: #000080">╰──────────────────────────────────────────────────────────────────────────────────────────────────╯</span>
</pre>
</div>
<div class="cell-output cell-output-display">
<pre style="white-space:pre;overflow-x:auto;line-height:normal;font-family:Menlo,'DejaVu Sans Mono',consolas,'Courier New',monospace"><span style="color: #000080; text-decoration-color: #000080">╭─ </span><span style="color: #000080; text-decoration-color: #000080; font-weight: bold">&lt;</span><span style="color: #ff00ff; text-decoration-color: #ff00ff; font-weight: bold">built-in</span><span style="color: #000000; text-decoration-color: #000000"> method normal of numpy.random.mtrand.RandomState object at </span><span style="color: #008080; text-decoration-color: #008080; font-weight: bold">0x10c627840</span><span style="color: #000080; text-decoration-color: #000080; font-weight: bold">&gt;</span><span style="color: #000080; text-decoration-color: #000080"> ─╮</span>
<span style="color: #000080; text-decoration-color: #000080">│</span> <span style="color: #00ffff; text-decoration-color: #00ffff; font-style: italic">def </span><span style="color: #800000; text-decoration-color: #800000; font-weight: bold">RandomState.normal</span><span style="font-weight: bold">(</span><span style="color: #808000; text-decoration-color: #808000">...</span><span style="font-weight: bold">)</span>                                                         <span style="color: #000080; text-decoration-color: #000080">│</span>
<span style="color: #000080; text-decoration-color: #000080">│</span>                                                                                     <span style="color: #000080; text-decoration-color: #000080">│</span>
<span style="color: #000080; text-decoration-color: #000080">│</span> <span style="color: #800080; text-decoration-color: #800080; font-weight: bold">normal</span><span style="color: #008080; text-decoration-color: #008080; font-weight: bold">(</span><span style="color: #808000; text-decoration-color: #808000">loc</span><span style="color: #008080; text-decoration-color: #008080">=</span><span style="color: #008080; text-decoration-color: #008080; font-weight: bold">0.0</span><span style="color: #008080; text-decoration-color: #008080">, </span><span style="color: #808000; text-decoration-color: #808000">scale</span><span style="color: #008080; text-decoration-color: #008080">=</span><span style="color: #008080; text-decoration-color: #008080; font-weight: bold">1.0</span><span style="color: #008080; text-decoration-color: #008080">, </span><span style="color: #808000; text-decoration-color: #808000">size</span><span style="color: #008080; text-decoration-color: #008080">=</span><span style="color: #800080; text-decoration-color: #800080; font-style: italic">None</span><span style="color: #008080; text-decoration-color: #008080; font-weight: bold">)</span>                                               <span style="color: #000080; text-decoration-color: #000080">│</span>
<span style="color: #000080; text-decoration-color: #000080">│</span>                                                                                     <span style="color: #000080; text-decoration-color: #000080">│</span>
<span style="color: #000080; text-decoration-color: #000080">│</span> <span style="color: #008080; text-decoration-color: #008080; font-weight: bold">29</span><span style="font-style: italic"> attribute(s) not shown.</span> Run <span style="color: #800080; text-decoration-color: #800080; font-weight: bold">inspect</span><span style="font-weight: bold">(</span>inspect<span style="font-weight: bold">)</span> for options.                        <span style="color: #000080; text-decoration-color: #000080">│</span>
<span style="color: #000080; text-decoration-color: #000080">╰─────────────────────────────────────────────────────────────────────────────────────╯</span>
</pre>
</div>
<div class="cell-output cell-output-display">
<pre style="white-space:pre;overflow-x:auto;line-height:normal;font-family:Menlo,'DejaVu Sans Mono',consolas,'Courier New',monospace"><span style="color: #000080; text-decoration-color: #000080">╭─ </span><span style="color: #000080; text-decoration-color: #000080; font-weight: bold">&lt;</span><span style="color: #ff00ff; text-decoration-color: #ff00ff; font-weight: bold">built-in</span><span style="color: #000000; text-decoration-color: #000000"> method standard_normal of numpy.random.mtrand.RandomState object at </span><span style="color: #008080; text-decoration-color: #008080; font-weight: bold">0x10c627840</span><span style="color: #000080; text-decoration-color: #000080; font-weight: bold">&gt;</span><span style="color: #000080; text-decoration-color: #000080"> ─╮</span>
<span style="color: #000080; text-decoration-color: #000080">│</span> <span style="color: #00ffff; text-decoration-color: #00ffff; font-style: italic">def </span><span style="color: #800000; text-decoration-color: #800000; font-weight: bold">RandomState.standard_normal</span><span style="font-weight: bold">(</span><span style="color: #808000; text-decoration-color: #808000">...</span><span style="font-weight: bold">)</span>                                                         <span style="color: #000080; text-decoration-color: #000080">│</span>
<span style="color: #000080; text-decoration-color: #000080">│</span>                                                                                              <span style="color: #000080; text-decoration-color: #000080">│</span>
<span style="color: #000080; text-decoration-color: #000080">│</span> <span style="color: #800080; text-decoration-color: #800080; font-weight: bold">standard_normal</span><span style="color: #008080; text-decoration-color: #008080; font-weight: bold">(</span><span style="color: #808000; text-decoration-color: #808000">size</span><span style="color: #008080; text-decoration-color: #008080">=</span><span style="color: #800080; text-decoration-color: #800080; font-style: italic">None</span><span style="color: #008080; text-decoration-color: #008080; font-weight: bold">)</span>                                                                   <span style="color: #000080; text-decoration-color: #000080">│</span>
<span style="color: #000080; text-decoration-color: #000080">│</span>                                                                                              <span style="color: #000080; text-decoration-color: #000080">│</span>
<span style="color: #000080; text-decoration-color: #000080">│</span> <span style="color: #008080; text-decoration-color: #008080; font-weight: bold">29</span><span style="font-style: italic"> attribute(s) not shown.</span> Run <span style="color: #800080; text-decoration-color: #800080; font-weight: bold">inspect</span><span style="font-weight: bold">(</span>inspect<span style="font-weight: bold">)</span> for options.                                 <span style="color: #000080; text-decoration-color: #000080">│</span>
<span style="color: #000080; text-decoration-color: #000080">╰──────────────────────────────────────────────────────────────────────────────────────────────╯</span>
</pre>
</div>
</div>
<div class="cell" data-execution_count="73">
<div class="sourceCode cell-code" id="cb41" style="background: #f1f3f5;"><pre class="sourceCode python code-with-copy"><code class="sourceCode python"><span id="cb41-1"><span class="bu" style="color: null;">getattr</span>(pd.DataFrame().values, <span class="st" style="color: #20794D;">"tolist"</span>)</span></code></pre></div>
<div class="cell-output cell-output-display" data-execution_count="73">
<pre><code>&lt;function ndarray.tolist&gt;</code></pre>
</div>
</div>
<div class="cell" data-execution_count="70">
<div class="sourceCode cell-code" id="cb43" style="background: #f1f3f5;"><pre class="sourceCode python code-with-copy"><code class="sourceCode python"><span id="cb43-1">pd.DataFrame.to</span></code></pre></div>
<div class="cell-output cell-output-display" data-execution_count="70">

<div>

<table class="dataframe table table-sm table-striped">
  <thead>
    <tr>
      <th></th>
    </tr>
  </thead>
  <tbody>
  </tbody>
</table>
</div>
</div>
</div>
<div class="cell" data-execution_count="14">
<div class="sourceCode cell-code" id="cb44" style="background: #f1f3f5;"><pre class="sourceCode python code-with-copy"><code class="sourceCode python"><span id="cb44-1">df <span class="op" style="color: #5E5E5E;">=</span> pd.DataFrame()</span>
<span id="cb44-2">search(df.values, <span class="st" style="color: #20794D;">"list"</span>)</span></code></pre></div>
<div class="cell-output cell-output-display" data-execution_count="14">
<pre style="white-space:pre;overflow-x:auto;line-height:normal;font-family:Menlo,'DejaVu Sans Mono',consolas,'Courier New',monospace">╭───────────────────────────────────────────── Searching for {query} ─────────────────────────────────────────────╮
│ <span style="font-weight: bold">[</span><span style="color: #008000; text-decoration-color: #008000">'tolist'</span><span style="font-weight: bold">]</span>                                                                                                      │
╰─────────────────────────────────────────────────────────────────────────────────────────────────────────────────╯
</pre>
</div>
</div>
<div class="cell" data-execution_count="11">
<div class="sourceCode cell-code" id="cb45" style="background: #f1f3f5;"><pre class="sourceCode python code-with-copy"><code class="sourceCode python"><span id="cb45-1">search(pd.DataFrame, <span class="st" style="color: #20794D;">"to"</span>)</span></code></pre></div>
<div class="cell-output cell-output-display" data-execution_count="11">
<pre style="white-space:pre;overflow-x:auto;line-height:normal;font-family:Menlo,'DejaVu Sans Mono',consolas,'Courier New',monospace">╭─────────────────────────────────────────────────────────────────────────────────────────────────────────────────╮
│ <span style="font-weight: bold">[</span>                                                                                                               │
│     <span style="color: #008000; text-decoration-color: #008000">'_constructor'</span>,                                                                                             │
│     <span style="color: #008000; text-decoration-color: #008000">'_constructor_sliced'</span>,                                                                                      │
│     <span style="color: #008000; text-decoration-color: #008000">'_to_dict_of_blocks'</span>,                                                                                       │
│     <span style="color: #008000; text-decoration-color: #008000">'kurtosis'</span>,                                                                                                 │
│     <span style="color: #008000; text-decoration-color: #008000">'to_clipboard'</span>,                                                                                             │
│     <span style="color: #008000; text-decoration-color: #008000">'to_csv'</span>,                                                                                                   │
│     <span style="color: #008000; text-decoration-color: #008000">'to_dict'</span>,                                                                                                  │
│     <span style="color: #008000; text-decoration-color: #008000">'to_excel'</span>,                                                                                                 │
│     <span style="color: #008000; text-decoration-color: #008000">'to_feather'</span>,                                                                                               │
│     <span style="color: #008000; text-decoration-color: #008000">'to_gbq'</span>,                                                                                                   │
│     <span style="color: #008000; text-decoration-color: #008000">'to_hdf'</span>,                                                                                                   │
│     <span style="color: #008000; text-decoration-color: #008000">'to_html'</span>,                                                                                                  │
│     <span style="color: #008000; text-decoration-color: #008000">'to_json'</span>,                                                                                                  │
│     <span style="color: #008000; text-decoration-color: #008000">'to_latex'</span>,                                                                                                 │
│     <span style="color: #008000; text-decoration-color: #008000">'to_markdown'</span>,                                                                                              │
│     <span style="color: #008000; text-decoration-color: #008000">'to_numpy'</span>,                                                                                                 │
│     <span style="color: #008000; text-decoration-color: #008000">'to_orc'</span>,                                                                                                   │
│     <span style="color: #008000; text-decoration-color: #008000">'to_parquet'</span>,                                                                                               │
│     <span style="color: #008000; text-decoration-color: #008000">'to_period'</span>,                                                                                                │
│     <span style="color: #008000; text-decoration-color: #008000">'to_pickle'</span>,                                                                                                │
│     <span style="color: #008000; text-decoration-color: #008000">'to_records'</span>,                                                                                               │
│     <span style="color: #008000; text-decoration-color: #008000">'to_sql'</span>,                                                                                                   │
│     <span style="color: #008000; text-decoration-color: #008000">'to_stata'</span>,                                                                                                 │
│     <span style="color: #008000; text-decoration-color: #008000">'to_string'</span>,                                                                                                │
│     <span style="color: #008000; text-decoration-color: #008000">'to_timestamp'</span>,                                                                                             │
│     <span style="color: #008000; text-decoration-color: #008000">'to_xarray'</span>,                                                                                                │
│     <span style="color: #008000; text-decoration-color: #008000">'to_xml'</span>                                                                                                    │
│ <span style="font-weight: bold">]</span>                                                                                                               │
╰─────────────────────────────────────────────────────────────────────────────────────────────────────────────────╯
</pre>
</div>
</div>
<div class="cell" data-execution_count="47">
<div class="sourceCode cell-code" id="cb46" style="background: #f1f3f5;"><pre class="sourceCode python code-with-copy"><code class="sourceCode python"><span id="cb46-1">q <span class="op" style="color: #5E5E5E;">=</span> <span class="st" style="color: #20794D;">"normal"</span></span></code></pre></div>
</div>
<div class="cell" data-execution_count="55">
<div class="sourceCode cell-code" id="cb47" style="background: #f1f3f5;"><pre class="sourceCode python code-with-copy"><code class="sourceCode python"><span id="cb47-1">np.random.normal</span></code></pre></div>
<div class="cell-output cell-output-display" data-execution_count="55">
<pre><code>&lt;function RandomState.normal&gt;</code></pre>
</div>
</div>
<div class="cell" data-execution_count="65">
<div class="sourceCode cell-code" id="cb49" style="background: #f1f3f5;"><pre class="sourceCode python code-with-copy"><code class="sourceCode python"><span id="cb49-1"><span class="im" style="color: #00769E;">from</span> rich <span class="im" style="color: #00769E;">import</span> inspect</span>
<span id="cb49-2"></span>
<span id="cb49-3">inspect(<span class="bu" style="color: null;">eval</span>(<span class="ss" style="color: #20794D;">f"np.random.</span><span class="sc" style="color: #5E5E5E;">{</span>q<span class="sc" style="color: #5E5E5E;">}</span><span class="ss" style="color: #20794D;">"</span>), methods<span class="op" style="color: #5E5E5E;">=</span><span class="va" style="color: #111111;">True</span>, <span class="bu" style="color: null;">all</span><span class="op" style="color: #5E5E5E;">=</span><span class="va" style="color: #111111;">True</span>)</span></code></pre></div>
<div class="cell-output cell-output-display">
<pre style="white-space:pre;overflow-x:auto;line-height:normal;font-family:Menlo,'DejaVu Sans Mono',consolas,'Courier New',monospace"><span style="color: #000080; text-decoration-color: #000080">╭─────────────── </span><span style="color: #000080; text-decoration-color: #000080; font-weight: bold">&lt;</span><span style="color: #ff00ff; text-decoration-color: #ff00ff; font-weight: bold">built-in</span><span style="color: #000000; text-decoration-color: #000000"> method normal of numpy.random.mtrand.RandomState object at </span><span style="color: #008080; text-decoration-color: #008080; font-weight: bold">0x10c627840</span><span style="color: #000080; text-decoration-color: #000080; font-weight: bold">&gt;</span><span style="color: #000080; text-decoration-color: #000080"> ───────────────╮</span>
<span style="color: #000080; text-decoration-color: #000080">│</span> <span style="color: #00ffff; text-decoration-color: #00ffff; font-style: italic">def </span><span style="color: #800000; text-decoration-color: #800000; font-weight: bold">RandomState.normal</span><span style="font-weight: bold">(</span><span style="color: #808000; text-decoration-color: #808000">...</span><span style="font-weight: bold">)</span>                                                                                     <span style="color: #000080; text-decoration-color: #000080">│</span>
<span style="color: #000080; text-decoration-color: #000080">│</span>                                                                                                                 <span style="color: #000080; text-decoration-color: #000080">│</span>
<span style="color: #000080; text-decoration-color: #000080">│</span> <span style="color: #800080; text-decoration-color: #800080; font-weight: bold">normal</span><span style="color: #008080; text-decoration-color: #008080; font-weight: bold">(</span><span style="color: #808000; text-decoration-color: #808000">loc</span><span style="color: #008080; text-decoration-color: #008080">=</span><span style="color: #008080; text-decoration-color: #008080; font-weight: bold">0.0</span><span style="color: #008080; text-decoration-color: #008080">, </span><span style="color: #808000; text-decoration-color: #808000">scale</span><span style="color: #008080; text-decoration-color: #008080">=</span><span style="color: #008080; text-decoration-color: #008080; font-weight: bold">1.0</span><span style="color: #008080; text-decoration-color: #008080">, </span><span style="color: #808000; text-decoration-color: #808000">size</span><span style="color: #008080; text-decoration-color: #008080">=</span><span style="color: #800080; text-decoration-color: #800080; font-style: italic">None</span><span style="color: #008080; text-decoration-color: #008080; font-weight: bold">)</span>                                                                           <span style="color: #000080; text-decoration-color: #000080">│</span>
<span style="color: #000080; text-decoration-color: #000080">│</span>                                                                                                                 <span style="color: #000080; text-decoration-color: #000080">│</span>
<span style="color: #000080; text-decoration-color: #000080">│</span>            <span style="color: #bfbf7f; text-decoration-color: #bfbf7f; font-style: italic">__doc__</span> = <span style="color: #008000; text-decoration-color: #008000">'\n        normal(loc=0.0, scale=1.0, size=None)\n\n        Draw random samples from a </span>    <span style="color: #000080; text-decoration-color: #000080">│</span>
<span style="color: #000080; text-decoration-color: #000080">│</span>                      <span style="color: #008000; text-decoration-color: #008000">normal (Gaussian) distribution.\n\n        The probability density function of the normal </span> <span style="color: #000080; text-decoration-color: #000080">│</span>
<span style="color: #000080; text-decoration-color: #000080">│</span>                      <span style="color: #008000; text-decoration-color: #008000">distribution, first\n        derived by De Moivre and 200 years later by both Gauss and </span>   <span style="color: #000080; text-decoration-color: #000080">│</span>
<span style="color: #000080; text-decoration-color: #000080">│</span>                      <span style="color: #008000; text-decoration-color: #008000">Laplace\n        independently [2]_, is often called the bell curve because of\n        </span>   <span style="color: #000080; text-decoration-color: #000080">│</span>
<span style="color: #000080; text-decoration-color: #000080">│</span>                      <span style="color: #008000; text-decoration-color: #008000">its characteristic shape (see the example below).\n\n        The normal distributions </span>     <span style="color: #000080; text-decoration-color: #000080">│</span>
<span style="color: #000080; text-decoration-color: #000080">│</span>                      <span style="color: #008000; text-decoration-color: #008000">occurs often in nature.  For example, it\n        describes the commonly occurring </span>        <span style="color: #000080; text-decoration-color: #000080">│</span>
<span style="color: #000080; text-decoration-color: #000080">│</span>                      <span style="color: #008000; text-decoration-color: #008000">distribution of samples influenced\n        by a large number of tiny, random </span>             <span style="color: #000080; text-decoration-color: #000080">│</span>
<span style="color: #000080; text-decoration-color: #000080">│</span>                      <span style="color: #008000; text-decoration-color: #008000">disturbances, each with its own\n        unique distribution [2]_.\n\n        .. note::\n </span> <span style="color: #000080; text-decoration-color: #000080">│</span>
<span style="color: #000080; text-decoration-color: #000080">│</span>                      <span style="color: #008000; text-decoration-color: #008000">New code should use the ``normal`` method of a ``default_rng()``\n            instance </span>    <span style="color: #000080; text-decoration-color: #000080">│</span>
<span style="color: #000080; text-decoration-color: #000080">│</span>                      <span style="color: #008000; text-decoration-color: #008000">instead; please see the :ref:`random-quick-start`.\n\n        Parameters\n        </span>         <span style="color: #000080; text-decoration-color: #000080">│</span>
<span style="color: #000080; text-decoration-color: #000080">│</span>                      <span style="color: #008000; text-decoration-color: #008000">----------\n        loc : float or array_like of floats\n            Mean ("centre") of </span>   <span style="color: #000080; text-decoration-color: #000080">│</span>
<span style="color: #000080; text-decoration-color: #000080">│</span>                      <span style="color: #008000; text-decoration-color: #008000">the distribution.\n        scale : float or array_like of floats\n            Standard </span>    <span style="color: #000080; text-decoration-color: #000080">│</span>
<span style="color: #000080; text-decoration-color: #000080">│</span>                      <span style="color: #008000; text-decoration-color: #008000">deviation (spread or "width") of the distribution. Must be\n            non-negative.\n   </span> <span style="color: #000080; text-decoration-color: #000080">│</span>
<span style="color: #000080; text-decoration-color: #000080">│</span>                      <span style="color: #008000; text-decoration-color: #008000">size : int or tuple of ints, optional\n            Output shape.  If the given shape is, </span>  <span style="color: #000080; text-decoration-color: #000080">│</span>
<span style="color: #000080; text-decoration-color: #000080">│</span>                      <span style="color: #008000; text-decoration-color: #008000">e.g., ``(m, n, k)``, then\n            ``m * n * k`` samples are drawn.  If size is </span>       <span style="color: #000080; text-decoration-color: #000080">│</span>
<span style="color: #000080; text-decoration-color: #000080">│</span>                      <span style="color: #008000; text-decoration-color: #008000">``None`` (default),\n            a single value is returned if ``loc`` and ``scale`` are </span>  <span style="color: #000080; text-decoration-color: #000080">│</span>
<span style="color: #000080; text-decoration-color: #000080">│</span>                      <span style="color: #008000; text-decoration-color: #008000">both scalars.\n            Otherwise, ``np.broadcast(loc, scale).size`` samples are </span>       <span style="color: #000080; text-decoration-color: #000080">│</span>
<span style="color: #000080; text-decoration-color: #000080">│</span>                      <span style="color: #008000; text-decoration-color: #008000">drawn.\n\n        Returns\n        -------\n        out : ndarray or scalar\n            </span>  <span style="color: #000080; text-decoration-color: #000080">│</span>
<span style="color: #000080; text-decoration-color: #000080">│</span>                      <span style="color: #008000; text-decoration-color: #008000">Drawn samples from the parameterized normal distribution.\n\n        See Also\n        </span>    <span style="color: #000080; text-decoration-color: #000080">│</span>
<span style="color: #000080; text-decoration-color: #000080">│</span>                      <span style="color: #008000; text-decoration-color: #008000">--------\n        scipy.stats.norm : probability density function, distribution or\n      </span> <span style="color: #000080; text-decoration-color: #000080">│</span>
<span style="color: #000080; text-decoration-color: #000080">│</span>                      <span style="color: #008000; text-decoration-color: #008000">cumulative density function, etc.\n        random.Generator.normal: which should be used </span>  <span style="color: #000080; text-decoration-color: #000080">│</span>
<span style="color: #000080; text-decoration-color: #000080">│</span>                      <span style="color: #008000; text-decoration-color: #008000">for new code.\n\n        Notes\n        -----\n        The probability density for the </span>    <span style="color: #000080; text-decoration-color: #000080">│</span>
<span style="color: #000080; text-decoration-color: #000080">│</span>                      <span style="color: #008000; text-decoration-color: #008000">Gaussian distribution is\n\n        .. math:: p(x) = \\frac{1}{\\sqrt{ 2 \\pi \\sigma^2 </span>   <span style="color: #000080; text-decoration-color: #000080">│</span>
<span style="color: #000080; text-decoration-color: #000080">│</span>                      <span style="color: #008000; text-decoration-color: #008000">}}\n                         e^{ - \\frac{ (x - \\mu)^2 } {2 \\sigma^2} },\n\n        </span>     <span style="color: #000080; text-decoration-color: #000080">│</span>
<span style="color: #000080; text-decoration-color: #000080">│</span>                      <span style="color: #008000; text-decoration-color: #008000">where :math:`\\mu` is the mean and :math:`\\sigma` the standard\n        deviation. The </span>   <span style="color: #000080; text-decoration-color: #000080">│</span>
<span style="color: #000080; text-decoration-color: #000080">│</span>                      <span style="color: #008000; text-decoration-color: #008000">square of the standard deviation, :math:`\\sigma^2`,\n        is called the variance.\n\n </span> <span style="color: #000080; text-decoration-color: #000080">│</span>
<span style="color: #000080; text-decoration-color: #000080">│</span>                      <span style="color: #008000; text-decoration-color: #008000">The function has its peak at the mean, and its "spread" increases with\n        the </span>       <span style="color: #000080; text-decoration-color: #000080">│</span>
<span style="color: #000080; text-decoration-color: #000080">│</span>                      <span style="color: #008000; text-decoration-color: #008000">standard deviation (the function reaches 0.607 times its maximum at\n        :math:`x + </span>   <span style="color: #000080; text-decoration-color: #000080">│</span>
<span style="color: #000080; text-decoration-color: #000080">│</span>                      <span style="color: #008000; text-decoration-color: #008000">\\sigma` and :math:`x - \\sigma` [2]_).  This implies that\n        normal is more likely </span> <span style="color: #000080; text-decoration-color: #000080">│</span>
<span style="color: #000080; text-decoration-color: #000080">│</span>                      <span style="color: #008000; text-decoration-color: #008000">to return samples lying close to the mean, rather\n        than those far away.\n\n       </span> <span style="color: #000080; text-decoration-color: #000080">│</span>
<span style="color: #000080; text-decoration-color: #000080">│</span>                      <span style="color: #008000; text-decoration-color: #008000">References\n        ----------\n        .. [1] Wikipedia, "Normal distribution",\n        </span> <span style="color: #000080; text-decoration-color: #000080">│</span>
<span style="color: #000080; text-decoration-color: #000080">│</span>                      <span style="color: #008000; text-decoration-color: #008000">https://en.wikipedia.org/wiki/Normal_distribution\n        .. [2] P. R. Peebles Jr., </span>      <span style="color: #000080; text-decoration-color: #000080">│</span>
<span style="color: #000080; text-decoration-color: #000080">│</span>                      <span style="color: #008000; text-decoration-color: #008000">"Central Limit Theorem" in "Probability,\n               Random Variables and Random </span>      <span style="color: #000080; text-decoration-color: #000080">│</span>
<span style="color: #000080; text-decoration-color: #000080">│</span>                      <span style="color: #008000; text-decoration-color: #008000">Signal Principles", 4th ed., 2001,\n               pp. 51, 51, 125.\n\n        Examples\n </span> <span style="color: #000080; text-decoration-color: #000080">│</span>
<span style="color: #000080; text-decoration-color: #000080">│</span>                      <span style="color: #008000; text-decoration-color: #008000">--------\n        Draw samples from the distribution:\n\n        &gt;&gt;&gt; mu, sigma = 0, 0.1 # </span> <span style="color: #000080; text-decoration-color: #000080">│</span>
<span style="color: #000080; text-decoration-color: #000080">│</span>                      <span style="color: #008000; text-decoration-color: #008000">mean and standard deviation\n        &gt;&gt;&gt; s = np.random.normal(mu, sigma, 1000)\n\n        </span> <span style="color: #000080; text-decoration-color: #000080">│</span>
<span style="color: #000080; text-decoration-color: #000080">│</span>                      <span style="color: #008000; text-decoration-color: #008000">Verify the mean and the variance:\n\n        &gt;&gt;&gt; abs(mu - np.mean(s))\n        0.0  # may </span> <span style="color: #000080; text-decoration-color: #000080">│</span>
<span style="color: #000080; text-decoration-color: #000080">│</span>                      <span style="color: #008000; text-decoration-color: #008000">vary\n\n        &gt;&gt;&gt; abs(sigma - np.std(s, ddof=1))\n        0.1  # may vary\n\n        </span>    <span style="color: #000080; text-decoration-color: #000080">│</span>
<span style="color: #000080; text-decoration-color: #000080">│</span>                      <span style="color: #008000; text-decoration-color: #008000">Display the histogram of the samples, along with\n        the probability density </span>         <span style="color: #000080; text-decoration-color: #000080">│</span>
<span style="color: #000080; text-decoration-color: #000080">│</span>                      <span style="color: #008000; text-decoration-color: #008000">function:\n\n        &gt;&gt;&gt; import matplotlib.pyplot as plt\n        &gt;&gt;&gt; count, bins, ignored</span> <span style="color: #000080; text-decoration-color: #000080">│</span>
<span style="color: #000080; text-decoration-color: #000080">│</span>                      <span style="color: #008000; text-decoration-color: #008000">= plt.hist(s, 30, density=True)\n        &gt;&gt;&gt; plt.plot(bins, 1/(sigma * np.sqrt(2 * np.pi))</span> <span style="color: #000080; text-decoration-color: #000080">│</span>
<span style="color: #000080; text-decoration-color: #000080">│</span>                      <span style="color: #008000; text-decoration-color: #008000">*\n        ...                np.exp( - (bins - mu)**2 / (2 * sigma**2) ),\n        ...   </span> <span style="color: #000080; text-decoration-color: #000080">│</span>
<span style="color: #000080; text-decoration-color: #000080">│</span>                      <span style="color: #008000; text-decoration-color: #008000">linewidth=2, color=\'r\')\n        &gt;&gt;&gt; plt.show()\n\n        Two-by-four array of samples </span> <span style="color: #000080; text-decoration-color: #000080">│</span>
<span style="color: #000080; text-decoration-color: #000080">│</span>                      <span style="color: #008000; text-decoration-color: #008000">from N(3, 6.25):\n\n        &gt;&gt;&gt; np.random.normal(3, 2.5, size=(2, 4))\n        </span>            <span style="color: #000080; text-decoration-color: #000080">│</span>
<span style="color: #000080; text-decoration-color: #000080">│</span>                      <span style="color: #008000; text-decoration-color: #008000">array([[-4.49401501,  4.00950034, -1.81814867,  7.29718677],   # random\n               [ </span> <span style="color: #000080; text-decoration-color: #000080">│</span>
<span style="color: #000080; text-decoration-color: #000080">│</span>                      <span style="color: #008000; text-decoration-color: #008000">0.39924804,  4.68456316,  4.99394529,  4.84057254]])  # random\n\n        '</span>                <span style="color: #000080; text-decoration-color: #000080">│</span>
<span style="color: #000080; text-decoration-color: #000080">│</span>         <span style="color: #bfbf7f; text-decoration-color: #bfbf7f; font-style: italic">__module__</span> = <span style="color: #800080; text-decoration-color: #800080; font-style: italic">None</span>                                                                                       <span style="color: #000080; text-decoration-color: #000080">│</span>
<span style="color: #000080; text-decoration-color: #000080">│</span>           <span style="color: #bfbf7f; text-decoration-color: #bfbf7f; font-style: italic">__name__</span> = <span style="color: #008000; text-decoration-color: #008000">'normal'</span>                                                                                   <span style="color: #000080; text-decoration-color: #000080">│</span>
<span style="color: #000080; text-decoration-color: #000080">│</span>       <span style="color: #bfbf7f; text-decoration-color: #bfbf7f; font-style: italic">__qualname__</span> = <span style="color: #008000; text-decoration-color: #008000">'RandomState.normal'</span>                                                                       <span style="color: #000080; text-decoration-color: #000080">│</span>
<span style="color: #000080; text-decoration-color: #000080">│</span>           <span style="color: #bfbf7f; text-decoration-color: #bfbf7f; font-style: italic">__self__</span> = <span style="color: #800080; text-decoration-color: #800080; font-weight: bold">RandomState</span><span style="font-weight: bold">(</span>MT19937<span style="font-weight: bold">)</span> at <span style="color: #008080; text-decoration-color: #008080; font-weight: bold">0x10C627840</span>                                                        <span style="color: #000080; text-decoration-color: #000080">│</span>
<span style="color: #000080; text-decoration-color: #000080">│</span> <span style="color: #bfbf7f; text-decoration-color: #bfbf7f; font-style: italic">__text_signature__</span> = <span style="color: #800080; text-decoration-color: #800080; font-style: italic">None</span>                                                                                       <span style="color: #000080; text-decoration-color: #000080">│</span>
<span style="color: #000080; text-decoration-color: #000080">│</span>           <span style="color: #bfbf7f; text-decoration-color: #bfbf7f; font-style: italic">__call__</span> = <span style="color: #00ffff; text-decoration-color: #00ffff; font-style: italic">def </span><span style="color: #800000; text-decoration-color: #800000; font-weight: bold">__call__</span><span style="font-weight: bold">(</span>*args, **kwargs<span style="font-weight: bold">)</span>: <span style="color: #7f7f7f; text-decoration-color: #7f7f7f">Call self as a function.</span>                                    <span style="color: #000080; text-decoration-color: #000080">│</span>
<span style="color: #000080; text-decoration-color: #000080">│</span>          <span style="color: #bfbf7f; text-decoration-color: #bfbf7f; font-style: italic">__class__</span> = <span style="color: #00ffff; text-decoration-color: #00ffff; font-style: italic">class </span><span style="color: #800000; text-decoration-color: #800000; font-weight: bold">__class__</span><span style="font-weight: bold">()</span>:                                                                         <span style="color: #000080; text-decoration-color: #000080">│</span>
<span style="color: #000080; text-decoration-color: #000080">│</span>        <span style="color: #bfbf7f; text-decoration-color: #bfbf7f; font-style: italic">__delattr__</span> = <span style="color: #00ffff; text-decoration-color: #00ffff; font-style: italic">def </span><span style="color: #800000; text-decoration-color: #800000; font-weight: bold">__delattr__</span><span style="font-weight: bold">(</span>name, <span style="color: #800080; text-decoration-color: #800080">/</span><span style="font-weight: bold">)</span>: <span style="color: #7f7f7f; text-decoration-color: #7f7f7f">Implement </span><span style="color: #bf7fbf; text-decoration-color: #bf7fbf; font-weight: bold">delattr</span><span style="color: #7f7f7f; text-decoration-color: #7f7f7f; font-weight: bold">(</span><span style="color: #7f7f7f; text-decoration-color: #7f7f7f">self, name</span><span style="color: #7f7f7f; text-decoration-color: #7f7f7f; font-weight: bold">)</span><span style="color: #7f7f7f; text-decoration-color: #7f7f7f">.</span>                                   <span style="color: #000080; text-decoration-color: #000080">│</span>
<span style="color: #000080; text-decoration-color: #000080">│</span>            <span style="color: #bfbf7f; text-decoration-color: #bfbf7f; font-style: italic">__dir__</span> = <span style="color: #00ffff; text-decoration-color: #00ffff; font-style: italic">def </span><span style="color: #800000; text-decoration-color: #800000; font-weight: bold">__dir__</span><span style="font-weight: bold">()</span>: <span style="color: #7f7f7f; text-decoration-color: #7f7f7f">Default </span><span style="color: #bf7fbf; text-decoration-color: #bf7fbf; font-weight: bold">dir</span><span style="color: #7f7f7f; text-decoration-color: #7f7f7f; font-weight: bold">()</span><span style="color: #7f7f7f; text-decoration-color: #7f7f7f"> implementation.</span>                                               <span style="color: #000080; text-decoration-color: #000080">│</span>
<span style="color: #000080; text-decoration-color: #000080">│</span>             <span style="color: #bfbf7f; text-decoration-color: #bfbf7f; font-style: italic">__eq__</span> = <span style="color: #00ffff; text-decoration-color: #00ffff; font-style: italic">def </span><span style="color: #800000; text-decoration-color: #800000; font-weight: bold">__eq__</span><span style="font-weight: bold">(</span>value, <span style="color: #800080; text-decoration-color: #800080">/</span><span style="font-weight: bold">)</span>: <span style="color: #7f7f7f; text-decoration-color: #7f7f7f">Return </span><span style="color: #bfbf7f; text-decoration-color: #bfbf7f">self</span><span style="color: #7f7f7f; text-decoration-color: #7f7f7f">==value.</span>                                                  <span style="color: #000080; text-decoration-color: #000080">│</span>
<span style="color: #000080; text-decoration-color: #000080">│</span>         <span style="color: #bfbf7f; text-decoration-color: #bfbf7f; font-style: italic">__format__</span> = <span style="color: #00ffff; text-decoration-color: #00ffff; font-style: italic">def </span><span style="color: #800000; text-decoration-color: #800000; font-weight: bold">__format__</span><span style="font-weight: bold">(</span>format_spec, <span style="color: #800080; text-decoration-color: #800080">/</span><span style="font-weight: bold">)</span>: <span style="color: #7f7f7f; text-decoration-color: #7f7f7f">Default object formatter.</span>                                  <span style="color: #000080; text-decoration-color: #000080">│</span>
<span style="color: #000080; text-decoration-color: #000080">│</span>             <span style="color: #bfbf7f; text-decoration-color: #bfbf7f; font-style: italic">__ge__</span> = <span style="color: #00ffff; text-decoration-color: #00ffff; font-style: italic">def </span><span style="color: #800000; text-decoration-color: #800000; font-weight: bold">__ge__</span><span style="font-weight: bold">(</span>value, <span style="color: #800080; text-decoration-color: #800080">/</span><span style="font-weight: bold">)</span>: <span style="color: #7f7f7f; text-decoration-color: #7f7f7f">Return self&gt;=value.</span>                                                  <span style="color: #000080; text-decoration-color: #000080">│</span>
<span style="color: #000080; text-decoration-color: #000080">│</span>   <span style="color: #bfbf7f; text-decoration-color: #bfbf7f; font-style: italic">__getattribute__</span> = <span style="color: #00ffff; text-decoration-color: #00ffff; font-style: italic">def </span><span style="color: #800000; text-decoration-color: #800000; font-weight: bold">__getattribute__</span><span style="font-weight: bold">(</span>name, <span style="color: #800080; text-decoration-color: #800080">/</span><span style="font-weight: bold">)</span>: <span style="color: #7f7f7f; text-decoration-color: #7f7f7f">Return </span><span style="color: #bf7fbf; text-decoration-color: #bf7fbf; font-weight: bold">getattr</span><span style="color: #7f7f7f; text-decoration-color: #7f7f7f; font-weight: bold">(</span><span style="color: #7f7f7f; text-decoration-color: #7f7f7f">self, name</span><span style="color: #7f7f7f; text-decoration-color: #7f7f7f; font-weight: bold">)</span><span style="color: #7f7f7f; text-decoration-color: #7f7f7f">.</span>                                 <span style="color: #000080; text-decoration-color: #000080">│</span>
<span style="color: #000080; text-decoration-color: #000080">│</span>             <span style="color: #bfbf7f; text-decoration-color: #bfbf7f; font-style: italic">__gt__</span> = <span style="color: #00ffff; text-decoration-color: #00ffff; font-style: italic">def </span><span style="color: #800000; text-decoration-color: #800000; font-weight: bold">__gt__</span><span style="font-weight: bold">(</span>value, <span style="color: #800080; text-decoration-color: #800080">/</span><span style="font-weight: bold">)</span>: <span style="color: #7f7f7f; text-decoration-color: #7f7f7f">Return self&gt;value.</span>                                                   <span style="color: #000080; text-decoration-color: #000080">│</span>
<span style="color: #000080; text-decoration-color: #000080">│</span>           <span style="color: #bfbf7f; text-decoration-color: #bfbf7f; font-style: italic">__hash__</span> = <span style="color: #00ffff; text-decoration-color: #00ffff; font-style: italic">def </span><span style="color: #800000; text-decoration-color: #800000; font-weight: bold">__hash__</span><span style="font-weight: bold">()</span>: <span style="color: #7f7f7f; text-decoration-color: #7f7f7f">Return </span><span style="color: #bf7fbf; text-decoration-color: #bf7fbf; font-weight: bold">hash</span><span style="color: #7f7f7f; text-decoration-color: #7f7f7f; font-weight: bold">(</span><span style="color: #7f7f7f; text-decoration-color: #7f7f7f">self</span><span style="color: #7f7f7f; text-decoration-color: #7f7f7f; font-weight: bold">)</span><span style="color: #7f7f7f; text-decoration-color: #7f7f7f">.</span>                                                         <span style="color: #000080; text-decoration-color: #000080">│</span>
<span style="color: #000080; text-decoration-color: #000080">│</span>           <span style="color: #bfbf7f; text-decoration-color: #bfbf7f; font-style: italic">__init__</span> = <span style="color: #00ffff; text-decoration-color: #00ffff; font-style: italic">def </span><span style="color: #800000; text-decoration-color: #800000; font-weight: bold">__init__</span><span style="font-weight: bold">(</span>*args, **kwargs<span style="font-weight: bold">)</span>: <span style="color: #7f7f7f; text-decoration-color: #7f7f7f">Initialize self.  See </span><span style="color: #bf7fbf; text-decoration-color: #bf7fbf; font-weight: bold">help</span><span style="color: #7f7f7f; text-decoration-color: #7f7f7f; font-weight: bold">(</span><span style="color: #bf7fbf; text-decoration-color: #bf7fbf; font-weight: bold">type</span><span style="color: #7f7f7f; text-decoration-color: #7f7f7f; font-weight: bold">(</span><span style="color: #7f7f7f; text-decoration-color: #7f7f7f">self</span><span style="color: #7f7f7f; text-decoration-color: #7f7f7f; font-weight: bold">))</span><span style="color: #7f7f7f; text-decoration-color: #7f7f7f"> for accurate </span>        <span style="color: #000080; text-decoration-color: #000080">│</span>
<span style="color: #000080; text-decoration-color: #000080">│</span>                      <span style="color: #7f7f7f; text-decoration-color: #7f7f7f">signature.</span>                                                                                 <span style="color: #000080; text-decoration-color: #000080">│</span>
<span style="color: #000080; text-decoration-color: #000080">│</span>  <span style="color: #bfbf7f; text-decoration-color: #bfbf7f; font-style: italic">__init_subclass__</span> = <span style="color: #00ffff; text-decoration-color: #00ffff; font-style: italic">def </span><span style="color: #800000; text-decoration-color: #800000; font-weight: bold">__init_subclass__</span><span style="font-weight: bold">(</span><span style="color: #808000; text-decoration-color: #808000">...</span><span style="font-weight: bold">)</span> <span style="color: #7f7f7f; text-decoration-color: #7f7f7f">This method is called when a class is subclassed.</span>               <span style="color: #000080; text-decoration-color: #000080">│</span>
<span style="color: #000080; text-decoration-color: #000080">│</span>             <span style="color: #bfbf7f; text-decoration-color: #bfbf7f; font-style: italic">__le__</span> = <span style="color: #00ffff; text-decoration-color: #00ffff; font-style: italic">def </span><span style="color: #800000; text-decoration-color: #800000; font-weight: bold">__le__</span><span style="font-weight: bold">(</span>value, <span style="color: #800080; text-decoration-color: #800080">/</span><span style="font-weight: bold">)</span>: <span style="color: #7f7f7f; text-decoration-color: #7f7f7f">Return self&lt;=value.</span>                                                  <span style="color: #000080; text-decoration-color: #000080">│</span>
<span style="color: #000080; text-decoration-color: #000080">│</span>             <span style="color: #bfbf7f; text-decoration-color: #bfbf7f; font-style: italic">__lt__</span> = <span style="color: #00ffff; text-decoration-color: #00ffff; font-style: italic">def </span><span style="color: #800000; text-decoration-color: #800000; font-weight: bold">__lt__</span><span style="font-weight: bold">(</span>value, <span style="color: #800080; text-decoration-color: #800080">/</span><span style="font-weight: bold">)</span>: <span style="color: #7f7f7f; text-decoration-color: #7f7f7f">Return self&lt;value.</span>                                                   <span style="color: #000080; text-decoration-color: #000080">│</span>
<span style="color: #000080; text-decoration-color: #000080">│</span>             <span style="color: #bfbf7f; text-decoration-color: #bfbf7f; font-style: italic">__ne__</span> = <span style="color: #00ffff; text-decoration-color: #00ffff; font-style: italic">def </span><span style="color: #800000; text-decoration-color: #800000; font-weight: bold">__ne__</span><span style="font-weight: bold">(</span>value, <span style="color: #800080; text-decoration-color: #800080">/</span><span style="font-weight: bold">)</span>: <span style="color: #7f7f7f; text-decoration-color: #7f7f7f">Return self!=value.</span>                                                  <span style="color: #000080; text-decoration-color: #000080">│</span>
<span style="color: #000080; text-decoration-color: #000080">│</span>            <span style="color: #bfbf7f; text-decoration-color: #bfbf7f; font-style: italic">__new__</span> = <span style="color: #00ffff; text-decoration-color: #00ffff; font-style: italic">def </span><span style="color: #800000; text-decoration-color: #800000; font-weight: bold">__new__</span><span style="font-weight: bold">(</span>*args, **kwargs<span style="font-weight: bold">)</span>: <span style="color: #7f7f7f; text-decoration-color: #7f7f7f">Create and return a new object.  See </span><span style="color: #bf7fbf; text-decoration-color: #bf7fbf; font-weight: bold">help</span><span style="color: #7f7f7f; text-decoration-color: #7f7f7f; font-weight: bold">(</span><span style="color: #7f7f7f; text-decoration-color: #7f7f7f">type</span><span style="color: #7f7f7f; text-decoration-color: #7f7f7f; font-weight: bold">)</span><span style="color: #7f7f7f; text-decoration-color: #7f7f7f"> for accurate</span> <span style="color: #000080; text-decoration-color: #000080">│</span>
<span style="color: #000080; text-decoration-color: #000080">│</span>                      <span style="color: #7f7f7f; text-decoration-color: #7f7f7f">signature.</span>                                                                                 <span style="color: #000080; text-decoration-color: #000080">│</span>
<span style="color: #000080; text-decoration-color: #000080">│</span>         <span style="color: #bfbf7f; text-decoration-color: #bfbf7f; font-style: italic">__reduce__</span> = <span style="color: #00ffff; text-decoration-color: #00ffff; font-style: italic">def </span><span style="color: #800000; text-decoration-color: #800000; font-weight: bold">__reduce__</span><span style="font-weight: bold">(</span><span style="color: #808000; text-decoration-color: #808000">...</span><span style="font-weight: bold">)</span> <span style="color: #7f7f7f; text-decoration-color: #7f7f7f">Helper for pickle.</span>                                                     <span style="color: #000080; text-decoration-color: #000080">│</span>
<span style="color: #000080; text-decoration-color: #000080">│</span>      <span style="color: #bfbf7f; text-decoration-color: #bfbf7f; font-style: italic">__reduce_ex__</span> = <span style="color: #00ffff; text-decoration-color: #00ffff; font-style: italic">def </span><span style="color: #800000; text-decoration-color: #800000; font-weight: bold">__reduce_ex__</span><span style="font-weight: bold">(</span>protocol, <span style="color: #800080; text-decoration-color: #800080">/</span><span style="font-weight: bold">)</span>: <span style="color: #7f7f7f; text-decoration-color: #7f7f7f">Helper for pickle.</span>                                         <span style="color: #000080; text-decoration-color: #000080">│</span>
<span style="color: #000080; text-decoration-color: #000080">│</span>           <span style="color: #bfbf7f; text-decoration-color: #bfbf7f; font-style: italic">__repr__</span> = <span style="color: #00ffff; text-decoration-color: #00ffff; font-style: italic">def </span><span style="color: #800000; text-decoration-color: #800000; font-weight: bold">__repr__</span><span style="font-weight: bold">()</span>: <span style="color: #7f7f7f; text-decoration-color: #7f7f7f">Return </span><span style="color: #bf7fbf; text-decoration-color: #bf7fbf; font-weight: bold">repr</span><span style="color: #7f7f7f; text-decoration-color: #7f7f7f; font-weight: bold">(</span><span style="color: #7f7f7f; text-decoration-color: #7f7f7f">self</span><span style="color: #7f7f7f; text-decoration-color: #7f7f7f; font-weight: bold">)</span><span style="color: #7f7f7f; text-decoration-color: #7f7f7f">.</span>                                                         <span style="color: #000080; text-decoration-color: #000080">│</span>
<span style="color: #000080; text-decoration-color: #000080">│</span>        <span style="color: #bfbf7f; text-decoration-color: #bfbf7f; font-style: italic">__setattr__</span> = <span style="color: #00ffff; text-decoration-color: #00ffff; font-style: italic">def </span><span style="color: #800000; text-decoration-color: #800000; font-weight: bold">__setattr__</span><span style="font-weight: bold">(</span>name, value, <span style="color: #800080; text-decoration-color: #800080">/</span><span style="font-weight: bold">)</span>: <span style="color: #7f7f7f; text-decoration-color: #7f7f7f">Implement </span><span style="color: #bf7fbf; text-decoration-color: #bf7fbf; font-weight: bold">setattr</span><span style="color: #7f7f7f; text-decoration-color: #7f7f7f; font-weight: bold">(</span><span style="color: #7f7f7f; text-decoration-color: #7f7f7f">self, name, value</span><span style="color: #7f7f7f; text-decoration-color: #7f7f7f; font-weight: bold">)</span><span style="color: #7f7f7f; text-decoration-color: #7f7f7f">.</span>                     <span style="color: #000080; text-decoration-color: #000080">│</span>
<span style="color: #000080; text-decoration-color: #000080">│</span>         <span style="color: #bfbf7f; text-decoration-color: #bfbf7f; font-style: italic">__sizeof__</span> = <span style="color: #00ffff; text-decoration-color: #00ffff; font-style: italic">def </span><span style="color: #800000; text-decoration-color: #800000; font-weight: bold">__sizeof__</span><span style="font-weight: bold">()</span>: <span style="color: #7f7f7f; text-decoration-color: #7f7f7f">Size of object in memory, in bytes.</span>                                      <span style="color: #000080; text-decoration-color: #000080">│</span>
<span style="color: #000080; text-decoration-color: #000080">│</span>            <span style="color: #bfbf7f; text-decoration-color: #bfbf7f; font-style: italic">__str__</span> = <span style="color: #00ffff; text-decoration-color: #00ffff; font-style: italic">def </span><span style="color: #800000; text-decoration-color: #800000; font-weight: bold">__str__</span><span style="font-weight: bold">()</span>: <span style="color: #7f7f7f; text-decoration-color: #7f7f7f">Return </span><span style="color: #bf7fbf; text-decoration-color: #bf7fbf; font-weight: bold">str</span><span style="color: #7f7f7f; text-decoration-color: #7f7f7f; font-weight: bold">(</span><span style="color: #7f7f7f; text-decoration-color: #7f7f7f">self</span><span style="color: #7f7f7f; text-decoration-color: #7f7f7f; font-weight: bold">)</span><span style="color: #7f7f7f; text-decoration-color: #7f7f7f">.</span>                                                           <span style="color: #000080; text-decoration-color: #000080">│</span>
<span style="color: #000080; text-decoration-color: #000080">│</span>   <span style="color: #bfbf7f; text-decoration-color: #bfbf7f; font-style: italic">__subclasshook__</span> = <span style="color: #00ffff; text-decoration-color: #00ffff; font-style: italic">def </span><span style="color: #800000; text-decoration-color: #800000; font-weight: bold">__subclasshook__</span><span style="font-weight: bold">(</span><span style="color: #808000; text-decoration-color: #808000">...</span><span style="font-weight: bold">)</span> <span style="color: #7f7f7f; text-decoration-color: #7f7f7f">Abstract classes can override this to customize </span><span style="color: #bf7fbf; text-decoration-color: #bf7fbf; font-weight: bold">issubclass</span><span style="color: #7f7f7f; text-decoration-color: #7f7f7f; font-weight: bold">()</span><span style="color: #7f7f7f; text-decoration-color: #7f7f7f">.</span>    <span style="color: #000080; text-decoration-color: #000080">│</span>
<span style="color: #000080; text-decoration-color: #000080">╰─────────────────────────────────────────────────────────────────────────────────────────────────────────────────╯</span>
</pre>
</div>
</div>
<div class="cell" data-execution_count="63">
<div class="sourceCode cell-code" id="cb50" style="background: #f1f3f5;"><pre class="sourceCode python code-with-copy"><code class="sourceCode python"><span id="cb50-1">inspect(inspect)</span></code></pre></div>
<div class="cell-output cell-output-display">
<pre style="white-space:pre;overflow-x:auto;line-height:normal;font-family:Menlo,'DejaVu Sans Mono',consolas,'Courier New',monospace"><span style="color: #000080; text-decoration-color: #000080">╭─────────────────────────────────────── </span><span style="color: #000080; text-decoration-color: #000080; font-weight: bold">&lt;</span><span style="color: #ff00ff; text-decoration-color: #ff00ff; font-weight: bold">function</span><span style="color: #000000; text-decoration-color: #000000"> inspect at </span><span style="color: #008080; text-decoration-color: #008080; font-weight: bold">0x10f3fc550</span><span style="color: #000080; text-decoration-color: #000080; font-weight: bold">&gt;</span><span style="color: #000080; text-decoration-color: #000080"> ───────────────────────────────────────╮</span>
<span style="color: #000080; text-decoration-color: #000080">│</span> <span style="color: #00ffff; text-decoration-color: #00ffff; font-style: italic">def </span><span style="color: #800000; text-decoration-color: #800000; font-weight: bold">inspect</span><span style="font-weight: bold">(</span>obj: Any, *, console: Optional<span style="font-weight: bold">[</span><span style="color: #800080; text-decoration-color: #800080; font-weight: bold">ForwardRef</span><span style="font-weight: bold">(</span><span style="color: #008000; text-decoration-color: #008000">'Console'</span><span style="font-weight: bold">)]</span> = <span style="color: #800080; text-decoration-color: #800080; font-style: italic">None</span>, title: Optional<span style="font-weight: bold">[</span>str<span style="font-weight: bold">]</span> = <span style="color: #800080; text-decoration-color: #800080; font-style: italic">None</span>, help:    <span style="color: #000080; text-decoration-color: #000080">│</span>
<span style="color: #000080; text-decoration-color: #000080">│</span> bool = <span style="color: #ff0000; text-decoration-color: #ff0000; font-style: italic">False</span>, methods: bool = <span style="color: #ff0000; text-decoration-color: #ff0000; font-style: italic">False</span>, docs: bool = <span style="color: #00ff00; text-decoration-color: #00ff00; font-style: italic">True</span>, private: bool = <span style="color: #ff0000; text-decoration-color: #ff0000; font-style: italic">False</span>, dunder: bool = <span style="color: #ff0000; text-decoration-color: #ff0000; font-style: italic">False</span>, sort: bool <span style="color: #000080; text-decoration-color: #000080">│</span>
<span style="color: #000080; text-decoration-color: #000080">│</span> = <span style="color: #00ff00; text-decoration-color: #00ff00; font-style: italic">True</span>, all: bool = <span style="color: #ff0000; text-decoration-color: #ff0000; font-style: italic">False</span>, value: bool = <span style="color: #00ff00; text-decoration-color: #00ff00; font-style: italic">True</span><span style="font-weight: bold">)</span> -&gt; <span style="color: #800080; text-decoration-color: #800080; font-style: italic">None</span>:                                                         <span style="color: #000080; text-decoration-color: #000080">│</span>
<span style="color: #000080; text-decoration-color: #000080">│</span>                                                                                                                 <span style="color: #000080; text-decoration-color: #000080">│</span>
<span style="color: #000080; text-decoration-color: #000080">│</span> <span style="color: #008080; text-decoration-color: #008080">Inspect any Python object.</span>                                                                                      <span style="color: #000080; text-decoration-color: #000080">│</span>
<span style="color: #000080; text-decoration-color: #000080">│</span>                                                                                                                 <span style="color: #000080; text-decoration-color: #000080">│</span>
<span style="color: #000080; text-decoration-color: #000080">│</span> <span style="color: #008080; text-decoration-color: #008080">* </span><span style="color: #800080; text-decoration-color: #800080; font-weight: bold">inspect</span><span style="color: #008080; text-decoration-color: #008080; font-weight: bold">(&lt;</span><span style="color: #ff00ff; text-decoration-color: #ff00ff; font-weight: bold">OBJECT</span><span style="color: #008080; text-decoration-color: #008080; font-weight: bold">&gt;)</span><span style="color: #008080; text-decoration-color: #008080"> to see summarized info.</span>                                                                     <span style="color: #000080; text-decoration-color: #000080">│</span>
<span style="color: #000080; text-decoration-color: #000080">│</span> <span style="color: #008080; text-decoration-color: #008080">* </span><span style="color: #800080; text-decoration-color: #800080; font-weight: bold">inspect</span><span style="color: #008080; text-decoration-color: #008080; font-weight: bold">(&lt;</span><span style="color: #ff00ff; text-decoration-color: #ff00ff; font-weight: bold">OBJECT</span><span style="color: #008080; text-decoration-color: #008080; font-weight: bold">&gt;</span><span style="color: #008080; text-decoration-color: #008080">, </span><span style="color: #808000; text-decoration-color: #808000">methods</span><span style="color: #008080; text-decoration-color: #008080">=</span><span style="color: #00ff00; text-decoration-color: #00ff00; font-style: italic">True</span><span style="color: #008080; text-decoration-color: #008080; font-weight: bold">)</span><span style="color: #008080; text-decoration-color: #008080"> to see methods.</span>                                                               <span style="color: #000080; text-decoration-color: #000080">│</span>
<span style="color: #000080; text-decoration-color: #000080">│</span> <span style="color: #008080; text-decoration-color: #008080">* </span><span style="color: #800080; text-decoration-color: #800080; font-weight: bold">inspect</span><span style="color: #008080; text-decoration-color: #008080; font-weight: bold">(&lt;</span><span style="color: #ff00ff; text-decoration-color: #ff00ff; font-weight: bold">OBJECT</span><span style="color: #008080; text-decoration-color: #008080; font-weight: bold">&gt;</span><span style="color: #008080; text-decoration-color: #008080">, </span><span style="color: #808000; text-decoration-color: #808000">help</span><span style="color: #008080; text-decoration-color: #008080">=</span><span style="color: #00ff00; text-decoration-color: #00ff00; font-style: italic">True</span><span style="color: #008080; text-decoration-color: #008080; font-weight: bold">)</span><span style="color: #008080; text-decoration-color: #008080"> to see full </span><span style="color: #008080; text-decoration-color: #008080; font-weight: bold">(</span><span style="color: #008080; text-decoration-color: #008080">non-abbreviated</span><span style="color: #008080; text-decoration-color: #008080; font-weight: bold">)</span><span style="color: #008080; text-decoration-color: #008080"> help.</span>                                              <span style="color: #000080; text-decoration-color: #000080">│</span>
<span style="color: #000080; text-decoration-color: #000080">│</span> <span style="color: #008080; text-decoration-color: #008080">* </span><span style="color: #800080; text-decoration-color: #800080; font-weight: bold">inspect</span><span style="color: #008080; text-decoration-color: #008080; font-weight: bold">(&lt;</span><span style="color: #ff00ff; text-decoration-color: #ff00ff; font-weight: bold">OBJECT</span><span style="color: #008080; text-decoration-color: #008080; font-weight: bold">&gt;</span><span style="color: #008080; text-decoration-color: #008080">, </span><span style="color: #808000; text-decoration-color: #808000">private</span><span style="color: #008080; text-decoration-color: #008080">=</span><span style="color: #00ff00; text-decoration-color: #00ff00; font-style: italic">True</span><span style="color: #008080; text-decoration-color: #008080; font-weight: bold">)</span><span style="color: #008080; text-decoration-color: #008080"> to see private attributes </span><span style="color: #008080; text-decoration-color: #008080; font-weight: bold">(</span><span style="color: #008080; text-decoration-color: #008080">single underscore</span><span style="color: #008080; text-decoration-color: #008080; font-weight: bold">)</span><span style="color: #008080; text-decoration-color: #008080">.</span>                                <span style="color: #000080; text-decoration-color: #000080">│</span>
<span style="color: #000080; text-decoration-color: #000080">│</span> <span style="color: #008080; text-decoration-color: #008080">* </span><span style="color: #800080; text-decoration-color: #800080; font-weight: bold">inspect</span><span style="color: #008080; text-decoration-color: #008080; font-weight: bold">(&lt;</span><span style="color: #ff00ff; text-decoration-color: #ff00ff; font-weight: bold">OBJECT</span><span style="color: #008080; text-decoration-color: #008080; font-weight: bold">&gt;</span><span style="color: #008080; text-decoration-color: #008080">, </span><span style="color: #808000; text-decoration-color: #808000">dunder</span><span style="color: #008080; text-decoration-color: #008080">=</span><span style="color: #00ff00; text-decoration-color: #00ff00; font-style: italic">True</span><span style="color: #008080; text-decoration-color: #008080; font-weight: bold">)</span><span style="color: #008080; text-decoration-color: #008080"> to see attributes beginning with double underscore.</span>                            <span style="color: #000080; text-decoration-color: #000080">│</span>
<span style="color: #000080; text-decoration-color: #000080">│</span> <span style="color: #008080; text-decoration-color: #008080">* </span><span style="color: #800080; text-decoration-color: #800080; font-weight: bold">inspect</span><span style="color: #008080; text-decoration-color: #008080; font-weight: bold">(&lt;</span><span style="color: #ff00ff; text-decoration-color: #ff00ff; font-weight: bold">OBJECT</span><span style="color: #008080; text-decoration-color: #008080; font-weight: bold">&gt;</span><span style="color: #008080; text-decoration-color: #008080">, </span><span style="color: #808000; text-decoration-color: #808000">all</span><span style="color: #008080; text-decoration-color: #008080">=</span><span style="color: #00ff00; text-decoration-color: #00ff00; font-style: italic">True</span><span style="color: #008080; text-decoration-color: #008080; font-weight: bold">)</span><span style="color: #008080; text-decoration-color: #008080"> to see all attributes.</span>                                                            <span style="color: #000080; text-decoration-color: #000080">│</span>
<span style="color: #000080; text-decoration-color: #000080">│</span>                                                                                                                 <span style="color: #000080; text-decoration-color: #000080">│</span>
<span style="color: #000080; text-decoration-color: #000080">│</span> <span style="color: #008080; text-decoration-color: #008080">Args:</span>                                                                                                           <span style="color: #000080; text-decoration-color: #000080">│</span>
<span style="color: #000080; text-decoration-color: #000080">│</span> <span style="color: #008080; text-decoration-color: #008080">    obj </span><span style="color: #008080; text-decoration-color: #008080; font-weight: bold">(</span><span style="color: #008080; text-decoration-color: #008080">Any</span><span style="color: #008080; text-decoration-color: #008080; font-weight: bold">)</span><span style="color: #008080; text-decoration-color: #008080">: An object to inspect.</span>                                                                            <span style="color: #000080; text-decoration-color: #000080">│</span>
<span style="color: #000080; text-decoration-color: #000080">│</span> <span style="color: #008080; text-decoration-color: #008080">    title </span><span style="color: #008080; text-decoration-color: #008080; font-weight: bold">(</span><span style="color: #008080; text-decoration-color: #008080">str, optional</span><span style="color: #008080; text-decoration-color: #008080; font-weight: bold">)</span><span style="color: #008080; text-decoration-color: #008080">: Title to display over inspect result, or </span><span style="color: #800080; text-decoration-color: #800080; font-style: italic">None</span><span style="color: #008080; text-decoration-color: #008080"> use type. Defaults to </span><span style="color: #800080; text-decoration-color: #800080; font-style: italic">None</span><span style="color: #008080; text-decoration-color: #008080">.</span>            <span style="color: #000080; text-decoration-color: #000080">│</span>
<span style="color: #000080; text-decoration-color: #000080">│</span> <span style="color: #008080; text-decoration-color: #008080">    help </span><span style="color: #008080; text-decoration-color: #008080; font-weight: bold">(</span><span style="color: #008080; text-decoration-color: #008080">bool, optional</span><span style="color: #008080; text-decoration-color: #008080; font-weight: bold">)</span><span style="color: #008080; text-decoration-color: #008080">: Show full help text rather than just first paragraph. Defaults to </span><span style="color: #ff0000; text-decoration-color: #ff0000; font-style: italic">False</span><span style="color: #008080; text-decoration-color: #008080">.</span>             <span style="color: #000080; text-decoration-color: #000080">│</span>
<span style="color: #000080; text-decoration-color: #000080">│</span> <span style="color: #008080; text-decoration-color: #008080">    methods </span><span style="color: #008080; text-decoration-color: #008080; font-weight: bold">(</span><span style="color: #008080; text-decoration-color: #008080">bool, optional</span><span style="color: #008080; text-decoration-color: #008080; font-weight: bold">)</span><span style="color: #008080; text-decoration-color: #008080">: Enable inspection of callables. Defaults to </span><span style="color: #ff0000; text-decoration-color: #ff0000; font-style: italic">False</span><span style="color: #008080; text-decoration-color: #008080">.</span>                                <span style="color: #000080; text-decoration-color: #000080">│</span>
<span style="color: #000080; text-decoration-color: #000080">│</span> <span style="color: #008080; text-decoration-color: #008080">    docs </span><span style="color: #008080; text-decoration-color: #008080; font-weight: bold">(</span><span style="color: #008080; text-decoration-color: #008080">bool, optional</span><span style="color: #008080; text-decoration-color: #008080; font-weight: bold">)</span><span style="color: #008080; text-decoration-color: #008080">: Also render doc strings. Defaults to </span><span style="color: #00ff00; text-decoration-color: #00ff00; font-style: italic">True</span><span style="color: #008080; text-decoration-color: #008080">.</span>                                           <span style="color: #000080; text-decoration-color: #000080">│</span>
<span style="color: #000080; text-decoration-color: #000080">│</span> <span style="color: #008080; text-decoration-color: #008080">    private </span><span style="color: #008080; text-decoration-color: #008080; font-weight: bold">(</span><span style="color: #008080; text-decoration-color: #008080">bool, optional</span><span style="color: #008080; text-decoration-color: #008080; font-weight: bold">)</span><span style="color: #008080; text-decoration-color: #008080">: Show private attributes </span><span style="color: #008080; text-decoration-color: #008080; font-weight: bold">(</span><span style="color: #008080; text-decoration-color: #008080">beginning with underscore</span><span style="color: #008080; text-decoration-color: #008080; font-weight: bold">)</span><span style="color: #008080; text-decoration-color: #008080">. Defaults to </span><span style="color: #ff0000; text-decoration-color: #ff0000; font-style: italic">False</span><span style="color: #008080; text-decoration-color: #008080">.</span>           <span style="color: #000080; text-decoration-color: #000080">│</span>
<span style="color: #000080; text-decoration-color: #000080">│</span> <span style="color: #008080; text-decoration-color: #008080">    dunder </span><span style="color: #008080; text-decoration-color: #008080; font-weight: bold">(</span><span style="color: #008080; text-decoration-color: #008080">bool, optional</span><span style="color: #008080; text-decoration-color: #008080; font-weight: bold">)</span><span style="color: #008080; text-decoration-color: #008080">: Show attributes starting with double underscore. Defaults to </span><span style="color: #ff0000; text-decoration-color: #ff0000; font-style: italic">False</span><span style="color: #008080; text-decoration-color: #008080">.</span>                <span style="color: #000080; text-decoration-color: #000080">│</span>
<span style="color: #000080; text-decoration-color: #000080">│</span> <span style="color: #008080; text-decoration-color: #008080">    sort </span><span style="color: #008080; text-decoration-color: #008080; font-weight: bold">(</span><span style="color: #008080; text-decoration-color: #008080">bool, optional</span><span style="color: #008080; text-decoration-color: #008080; font-weight: bold">)</span><span style="color: #008080; text-decoration-color: #008080">: Sort attributes alphabetically. Defaults to </span><span style="color: #00ff00; text-decoration-color: #00ff00; font-style: italic">True</span><span style="color: #008080; text-decoration-color: #008080">.</span>                                    <span style="color: #000080; text-decoration-color: #000080">│</span>
<span style="color: #000080; text-decoration-color: #000080">│</span> <span style="color: #008080; text-decoration-color: #008080">    all </span><span style="color: #008080; text-decoration-color: #008080; font-weight: bold">(</span><span style="color: #008080; text-decoration-color: #008080">bool, optional</span><span style="color: #008080; text-decoration-color: #008080; font-weight: bold">)</span><span style="color: #008080; text-decoration-color: #008080">: Show all attributes. Defaults to </span><span style="color: #ff0000; text-decoration-color: #ff0000; font-style: italic">False</span><span style="color: #008080; text-decoration-color: #008080">.</span>                                               <span style="color: #000080; text-decoration-color: #000080">│</span>
<span style="color: #000080; text-decoration-color: #000080">│</span> <span style="color: #008080; text-decoration-color: #008080">    value </span><span style="color: #008080; text-decoration-color: #008080; font-weight: bold">(</span><span style="color: #008080; text-decoration-color: #008080">bool, optional</span><span style="color: #008080; text-decoration-color: #008080; font-weight: bold">)</span><span style="color: #008080; text-decoration-color: #008080">: Pretty print value. Defaults to </span><span style="color: #00ff00; text-decoration-color: #00ff00; font-style: italic">True</span><span style="color: #008080; text-decoration-color: #008080">.</span>                                               <span style="color: #000080; text-decoration-color: #000080">│</span>
<span style="color: #000080; text-decoration-color: #000080">│</span>                                                                                                                 <span style="color: #000080; text-decoration-color: #000080">│</span>
<span style="color: #000080; text-decoration-color: #000080">│</span> <span style="color: #008080; text-decoration-color: #008080; font-weight: bold">35</span><span style="font-style: italic"> attribute(s) not shown.</span> Run <span style="color: #800080; text-decoration-color: #800080; font-weight: bold">inspect</span><span style="font-weight: bold">(</span>inspect<span style="font-weight: bold">)</span> for options.                                                    <span style="color: #000080; text-decoration-color: #000080">│</span>
<span style="color: #000080; text-decoration-color: #000080">╰─────────────────────────────────────────────────────────────────────────────────────────────────────────────────╯</span>
</pre>
</div>
</div>
<div class="cell" data-execution_count="74">
<div class="sourceCode cell-code" id="cb51" style="background: #f1f3f5;"><pre class="sourceCode python code-with-copy"><code class="sourceCode python"><span id="cb51-1"><span class="im" style="color: #00769E;">from</span> dataclasses <span class="im" style="color: #00769E;">import</span> dataclass</span>
<span id="cb51-2"></span>
<span id="cb51-3"></span>
<span id="cb51-4"><span class="at" style="color: #657422;">@dataclass</span></span>
<span id="cb51-5"><span class="kw" style="color: #003B4F;">class</span> InventoryItem:</span>
<span id="cb51-6">    <span class="co" style="color: #5E5E5E;">"""Class for keeping track of an item in inventory."""</span></span>
<span id="cb51-7"></span>
<span id="cb51-8">    name: <span class="bu" style="color: null;">str</span></span>
<span id="cb51-9">    unit_price: <span class="bu" style="color: null;">float</span></span>
<span id="cb51-10">    quantity_on_hand: <span class="bu" style="color: null;">int</span> <span class="op" style="color: #5E5E5E;">=</span> <span class="dv" style="color: #AD0000;">0</span></span></code></pre></div>
</div>
<div class="cell" data-execution_count="75">
<div class="sourceCode cell-code" id="cb52" style="background: #f1f3f5;"><pre class="sourceCode python code-with-copy"><code class="sourceCode python"><span id="cb52-1">c <span class="op" style="color: #5E5E5E;">=</span> InventoryItem(<span class="st" style="color: #20794D;">"A"</span>, <span class="dv" style="color: #AD0000;">20</span>)</span></code></pre></div>
</div>
<div class="cell" data-execution_count="76">
<div class="sourceCode cell-code" id="cb53" style="background: #f1f3f5;"><pre class="sourceCode python code-with-copy"><code class="sourceCode python"><span id="cb53-1">c</span></code></pre></div>
<div class="cell-output cell-output-display" data-execution_count="76">
<pre><code>InventoryItem(name='A', unit_price=20, quantity_on_hand=0)</code></pre>
</div>
</div>
<div class="cell" data-execution_count="69">
<div class="sourceCode cell-code" id="cb55" style="background: #f1f3f5;"><pre class="sourceCode python code-with-copy"><code class="sourceCode python"><span id="cb55-1"><span class="kw" style="color: #003B4F;">class</span> InventoryItemOld:</span>
<span id="cb55-2">    <span class="kw" style="color: #003B4F;">def</span> <span class="fu" style="color: #4758AB;">__init__</span>(<span class="va" style="color: #111111;">self</span>, name: <span class="bu" style="color: null;">str</span>, unit_price: <span class="bu" style="color: null;">float</span>, </span>
<span id="cb55-3">                 quantity_on_hand: <span class="bu" style="color: null;">int</span> <span class="op" style="color: #5E5E5E;">=</span> <span class="dv" style="color: #AD0000;">0</span>):</span>
<span id="cb55-4">        <span class="va" style="color: #111111;">self</span>.name <span class="op" style="color: #5E5E5E;">=</span> name</span>
<span id="cb55-5">        <span class="va" style="color: #111111;">self</span>.unit_price <span class="op" style="color: #5E5E5E;">=</span> unit_price</span>
<span id="cb55-6">        <span class="va" style="color: #111111;">self</span>.quantity_on_hand <span class="op" style="color: #5E5E5E;">=</span> quantity_on_hand</span></code></pre></div>
</div>
<div class="cell" data-execution_count="73">
<div class="sourceCode cell-code" id="cb56" style="background: #f1f3f5;"><pre class="sourceCode python code-with-copy"><code class="sourceCode python"><span id="cb56-1">d <span class="op" style="color: #5E5E5E;">=</span> InventoryItemOld(<span class="st" style="color: #20794D;">"A"</span>, <span class="dv" style="color: #AD0000;">2</span>)</span>
<span id="cb56-2">d</span></code></pre></div>
<div class="cell-output cell-output-display" data-execution_count="73">
<pre><code>&lt;__main__.InventoryItemOld at 0x166340430&gt;</code></pre>
</div>
</div>
<div class="cell" data-execution_count="70">
<div class="sourceCode cell-code" id="cb58" style="background: #f1f3f5;"><pre class="sourceCode python code-with-copy"><code class="sourceCode python"><span id="cb58-1"><span class="kw" style="color: #003B4F;">def</span> greeting(name: <span class="bu" style="color: null;">str</span>) <span class="op" style="color: #5E5E5E;">-&gt;</span> <span class="bu" style="color: null;">str</span>:</span>
<span id="cb58-2">    <span class="cf" style="color: #003B4F;">return</span> <span class="st" style="color: #20794D;">'Hello '</span> <span class="op" style="color: #5E5E5E;">+</span> name</span></code></pre></div>
</div>
<div class="cell" data-execution_count="71">
<div class="sourceCode cell-code" id="cb59" style="background: #f1f3f5;"><pre class="sourceCode python code-with-copy"><code class="sourceCode python"><span id="cb59-1">greeting(<span class="st" style="color: #20794D;">"Abc"</span>)</span></code></pre></div>
<div class="cell-output cell-output-display" data-execution_count="71">
<pre><code>'Hello Abc'</code></pre>
</div>
</div>
<div class="cell" data-execution_count="72">
<div class="sourceCode cell-code" id="cb61" style="background: #f1f3f5;"><pre class="sourceCode python code-with-copy"><code class="sourceCode python"><span id="cb61-1">greeting(<span class="dv" style="color: #AD0000;">10</span>)</span></code></pre></div>
<div class="cell-output cell-output-error">
<pre><code>TypeError: can only concatenate str (not "int") to str</code></pre>
</div>
</div>


</section>

 ]]></description>
  <guid>https://github.com/nipunbatra/ml2023/notebooks/posts/tips.html</guid>
  <pubDate>Tue, 10 Jan 2023 00:00:00 GMT</pubDate>
</item>
</channel>
</rss>
