<?xml version="1.0" encoding="UTF-8"?>
<rss  xmlns:atom="http://www.w3.org/2005/Atom" 
      xmlns:media="http://search.yahoo.com/mrss/" 
      xmlns:content="http://purl.org/rss/1.0/modules/content/" 
      xmlns:dc="http://purl.org/dc/elements/1.1/" 
      version="2.0">
<channel>
<title>ES654</title>
<link>https://github.com/nipunbatra/ml2023/notebooks/index.html</link>
<atom:link href="https://github.com/nipunbatra/ml2023/notebooks/index.xml" rel="self" type="application/rss+xml"/>
<description></description>
<generator>quarto-1.2.313</generator>
<lastBuildDate>Tue, 17 Jan 2023 00:00:00 GMT</lastBuildDate>
<item>
  <title>Grid Search</title>
  <dc:creator>Nipun Batra</dc:creator>
  <link>https://github.com/nipunbatra/ml2023/notebooks/posts/hyperparameter-1.html</link>
  <description><![CDATA[ 



<section id="hyperparameter-tuning" class="level4">
<h4 class="anchored" data-anchor-id="hyperparameter-tuning">Hyperparameter Tuning</h4>
<div class="cell" data-execution_count="1">
<div class="sourceCode cell-code" id="cb1" style="background: #f1f3f5;"><pre class="sourceCode python code-with-copy"><code class="sourceCode python"><span id="cb1-1"><span class="im" style="color: #00769E;">import</span> pandas <span class="im" style="color: #00769E;">as</span> pd</span>
<span id="cb1-2"><span class="im" style="color: #00769E;">import</span> numpy <span class="im" style="color: #00769E;">as</span> np</span>
<span id="cb1-3"><span class="im" style="color: #00769E;">from</span> sklearn.tree <span class="im" style="color: #00769E;">import</span> DecisionTreeClassifier</span></code></pre></div>
</div>
</section>
<section id="dataset-creation" class="level4">
<h4 class="anchored" data-anchor-id="dataset-creation">Dataset creation</h4>
<div class="cell" data-execution_count="2">
<div class="sourceCode cell-code" id="cb2" style="background: #f1f3f5;"><pre class="sourceCode python code-with-copy"><code class="sourceCode python"><span id="cb2-1"><span class="co" style="color: #5E5E5E;"># Create a DataFrame for classification containing four real features and one binary target</span></span>
<span id="cb2-2"></span>
<span id="cb2-3">df <span class="op" style="color: #5E5E5E;">=</span> pd.DataFrame({</span>
<span id="cb2-4">    <span class="st" style="color: #20794D;">'feature1'</span>: np.random.randint(<span class="dv" style="color: #AD0000;">0</span>, <span class="dv" style="color: #AD0000;">100</span>, <span class="dv" style="color: #AD0000;">100</span>),</span>
<span id="cb2-5">    <span class="st" style="color: #20794D;">'feature2'</span>: np.random.randint(<span class="dv" style="color: #AD0000;">0</span>, <span class="dv" style="color: #AD0000;">100</span>, <span class="dv" style="color: #AD0000;">100</span>),</span>
<span id="cb2-6">    <span class="st" style="color: #20794D;">'feature3'</span>: np.random.randint(<span class="dv" style="color: #AD0000;">0</span>, <span class="dv" style="color: #AD0000;">100</span>, <span class="dv" style="color: #AD0000;">100</span>),</span>
<span id="cb2-7">    <span class="st" style="color: #20794D;">'feature4'</span>: np.random.randint(<span class="dv" style="color: #AD0000;">0</span>, <span class="dv" style="color: #AD0000;">100</span>, <span class="dv" style="color: #AD0000;">100</span>),</span>
<span id="cb2-8">    <span class="st" style="color: #20794D;">'target'</span>: np.random.randint(<span class="dv" style="color: #AD0000;">0</span>, <span class="dv" style="color: #AD0000;">2</span>, <span class="dv" style="color: #AD0000;">100</span>)</span>
<span id="cb2-9">})</span></code></pre></div>
</div>
<div class="cell" data-execution_count="3">
<div class="sourceCode cell-code" id="cb3" style="background: #f1f3f5;"><pre class="sourceCode python code-with-copy"><code class="sourceCode python"><span id="cb3-1">df.head()</span></code></pre></div>
<div class="cell-output cell-output-display" data-execution_count="3">

<div>

<table class="dataframe table table-sm table-striped">
  <thead>
    <tr>
      <th></th>
      <th>feature1</th>
      <th>feature2</th>
      <th>feature3</th>
      <th>feature4</th>
      <th>target</th>
    </tr>
  </thead>
  <tbody>
    <tr>
      <th>0</th>
      <td>29</td>
      <td>14</td>
      <td>66</td>
      <td>83</td>
      <td>1</td>
    </tr>
    <tr>
      <th>1</th>
      <td>68</td>
      <td>70</td>
      <td>87</td>
      <td>72</td>
      <td>1</td>
    </tr>
    <tr>
      <th>2</th>
      <td>42</td>
      <td>5</td>
      <td>40</td>
      <td>67</td>
      <td>1</td>
    </tr>
    <tr>
      <th>3</th>
      <td>2</td>
      <td>54</td>
      <td>79</td>
      <td>0</td>
      <td>1</td>
    </tr>
    <tr>
      <th>4</th>
      <td>81</td>
      <td>36</td>
      <td>35</td>
      <td>75</td>
      <td>0</td>
    </tr>
  </tbody>
</table>
</div>
</div>
</div>
<div class="cell" data-execution_count="4">
<div class="sourceCode cell-code" id="cb4" style="background: #f1f3f5;"><pre class="sourceCode python code-with-copy"><code class="sourceCode python"><span id="cb4-1">train_df <span class="op" style="color: #5E5E5E;">=</span> df[:<span class="dv" style="color: #AD0000;">50</span>]</span>
<span id="cb4-2">validation_df <span class="op" style="color: #5E5E5E;">=</span> df[<span class="dv" style="color: #AD0000;">50</span>:<span class="dv" style="color: #AD0000;">80</span>]</span></code></pre></div>
</div>
<div class="cell" data-execution_count="5">
<div class="sourceCode cell-code" id="cb5" style="background: #f1f3f5;"><pre class="sourceCode python code-with-copy"><code class="sourceCode python"><span id="cb5-1">dt <span class="op" style="color: #5E5E5E;">=</span> DecisionTreeClassifier()</span>
<span id="cb5-2">dt.fit(train_df[[<span class="st" style="color: #20794D;">'feature1'</span>, <span class="st" style="color: #20794D;">'feature2'</span>, <span class="st" style="color: #20794D;">'feature3'</span>, <span class="st" style="color: #20794D;">'feature4'</span>]], train_df[<span class="st" style="color: #20794D;">'target'</span>])</span>
<span id="cb5-3">dt</span></code></pre></div>
<div class="cell-output cell-output-display" data-execution_count="5">
<style>#sk-container-id-1 {color: black;background-color: white;}#sk-container-id-1 pre{padding: 0;}#sk-container-id-1 div.sk-toggleable {background-color: white;}#sk-container-id-1 label.sk-toggleable__label {cursor: pointer;display: block;width: 100%;margin-bottom: 0;padding: 0.3em;box-sizing: border-box;text-align: center;}#sk-container-id-1 label.sk-toggleable__label-arrow:before {content: "▸";float: left;margin-right: 0.25em;color: #696969;}#sk-container-id-1 label.sk-toggleable__label-arrow:hover:before {color: black;}#sk-container-id-1 div.sk-estimator:hover label.sk-toggleable__label-arrow:before {color: black;}#sk-container-id-1 div.sk-toggleable__content {max-height: 0;max-width: 0;overflow: hidden;text-align: left;background-color: #f0f8ff;}#sk-container-id-1 div.sk-toggleable__content pre {margin: 0.2em;color: black;border-radius: 0.25em;background-color: #f0f8ff;}#sk-container-id-1 input.sk-toggleable__control:checked~div.sk-toggleable__content {max-height: 200px;max-width: 100%;overflow: auto;}#sk-container-id-1 input.sk-toggleable__control:checked~label.sk-toggleable__label-arrow:before {content: "▾";}#sk-container-id-1 div.sk-estimator input.sk-toggleable__control:checked~label.sk-toggleable__label {background-color: #d4ebff;}#sk-container-id-1 div.sk-label input.sk-toggleable__control:checked~label.sk-toggleable__label {background-color: #d4ebff;}#sk-container-id-1 input.sk-hidden--visually {border: 0;clip: rect(1px 1px 1px 1px);clip: rect(1px, 1px, 1px, 1px);height: 1px;margin: -1px;overflow: hidden;padding: 0;position: absolute;width: 1px;}#sk-container-id-1 div.sk-estimator {font-family: monospace;background-color: #f0f8ff;border: 1px dotted black;border-radius: 0.25em;box-sizing: border-box;margin-bottom: 0.5em;}#sk-container-id-1 div.sk-estimator:hover {background-color: #d4ebff;}#sk-container-id-1 div.sk-parallel-item::after {content: "";width: 100%;border-bottom: 1px solid gray;flex-grow: 1;}#sk-container-id-1 div.sk-label:hover label.sk-toggleable__label {background-color: #d4ebff;}#sk-container-id-1 div.sk-serial::before {content: "";position: absolute;border-left: 1px solid gray;box-sizing: border-box;top: 0;bottom: 0;left: 50%;z-index: 0;}#sk-container-id-1 div.sk-serial {display: flex;flex-direction: column;align-items: center;background-color: white;padding-right: 0.2em;padding-left: 0.2em;position: relative;}#sk-container-id-1 div.sk-item {position: relative;z-index: 1;}#sk-container-id-1 div.sk-parallel {display: flex;align-items: stretch;justify-content: center;background-color: white;position: relative;}#sk-container-id-1 div.sk-item::before, #sk-container-id-1 div.sk-parallel-item::before {content: "";position: absolute;border-left: 1px solid gray;box-sizing: border-box;top: 0;bottom: 0;left: 50%;z-index: -1;}#sk-container-id-1 div.sk-parallel-item {display: flex;flex-direction: column;z-index: 1;position: relative;background-color: white;}#sk-container-id-1 div.sk-parallel-item:first-child::after {align-self: flex-end;width: 50%;}#sk-container-id-1 div.sk-parallel-item:last-child::after {align-self: flex-start;width: 50%;}#sk-container-id-1 div.sk-parallel-item:only-child::after {width: 0;}#sk-container-id-1 div.sk-dashed-wrapped {border: 1px dashed gray;margin: 0 0.4em 0.5em 0.4em;box-sizing: border-box;padding-bottom: 0.4em;background-color: white;}#sk-container-id-1 div.sk-label label {font-family: monospace;font-weight: bold;display: inline-block;line-height: 1.2em;}#sk-container-id-1 div.sk-label-container {text-align: center;}#sk-container-id-1 div.sk-container {/* jupyter's `normalize.less` sets `[hidden] { display: none; }` but bootstrap.min.css set `[hidden] { display: none !important; }` so we also need the `!important` here to be able to override the default hidden behavior on the sphinx rendered scikit-learn.org. See: https://github.com/scikit-learn/scikit-learn/issues/21755 */display: inline-block !important;position: relative;}#sk-container-id-1 div.sk-text-repr-fallback {display: none;}</style><div id="sk-container-id-1" class="sk-top-container"><div class="sk-text-repr-fallback"><pre>DecisionTreeClassifier()</pre><b>In a Jupyter environment, please rerun this cell to show the HTML representation or trust the notebook. <br>On GitHub, the HTML representation is unable to render, please try loading this page with nbviewer.org.</b></div><div class="sk-container" hidden=""><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="sk-estimator-id-1" type="checkbox" checked=""><label for="sk-estimator-id-1" class="sk-toggleable__label sk-toggleable__label-arrow">DecisionTreeClassifier</label><div class="sk-toggleable__content"><pre>DecisionTreeClassifier()</pre></div></div></div></div></div>
</div>
</div>
<div class="cell" data-execution_count="6">
<div class="sourceCode cell-code" id="cb6" style="background: #f1f3f5;"><pre class="sourceCode python code-with-copy"><code class="sourceCode python"><span id="cb6-1">dt.score(validation_df[[<span class="st" style="color: #20794D;">'feature1'</span>, <span class="st" style="color: #20794D;">'feature2'</span>, <span class="st" style="color: #20794D;">'feature3'</span>, <span class="st" style="color: #20794D;">'feature4'</span>]], validation_df[<span class="st" style="color: #20794D;">'target'</span>])</span></code></pre></div>
<div class="cell-output cell-output-display" data-execution_count="6">
<pre><code>0.5333333333333333</code></pre>
</div>
</div>
<div class="cell" data-execution_count="7">
<div class="sourceCode cell-code" id="cb8" style="background: #f1f3f5;"><pre class="sourceCode python code-with-copy"><code class="sourceCode python"><span id="cb8-1">dt <span class="op" style="color: #5E5E5E;">=</span> DecisionTreeClassifier(criterion<span class="op" style="color: #5E5E5E;">=</span><span class="st" style="color: #20794D;">'entropy'</span>, max_depth<span class="op" style="color: #5E5E5E;">=</span><span class="dv" style="color: #AD0000;">2</span>)</span>
<span id="cb8-2">dt.fit(train_df[[<span class="st" style="color: #20794D;">'feature1'</span>, <span class="st" style="color: #20794D;">'feature2'</span>, <span class="st" style="color: #20794D;">'feature3'</span>, <span class="st" style="color: #20794D;">'feature4'</span>]], train_df[<span class="st" style="color: #20794D;">'target'</span>])</span>
<span id="cb8-3">dt.score(validation_df[[<span class="st" style="color: #20794D;">'feature1'</span>, <span class="st" style="color: #20794D;">'feature2'</span>, <span class="st" style="color: #20794D;">'feature3'</span>, <span class="st" style="color: #20794D;">'feature4'</span>]], validation_df[<span class="st" style="color: #20794D;">'target'</span>])</span></code></pre></div>
<div class="cell-output cell-output-display" data-execution_count="7">
<pre><code>0.5666666666666667</code></pre>
</div>
</div>
<div class="cell" data-execution_count="9">
<div class="sourceCode cell-code" id="cb10" style="background: #f1f3f5;"><pre class="sourceCode python code-with-copy"><code class="sourceCode python"><span id="cb10-1">hyperparams <span class="op" style="color: #5E5E5E;">=</span> {<span class="st" style="color: #20794D;">'criterion'</span>: [<span class="st" style="color: #20794D;">'gini'</span>, <span class="st" style="color: #20794D;">'entropy'</span>],</span>
<span id="cb10-2">               <span class="st" style="color: #20794D;">'max_depth'</span>: [<span class="dv" style="color: #AD0000;">2</span>, <span class="dv" style="color: #AD0000;">3</span>, <span class="dv" style="color: #AD0000;">4</span>, <span class="dv" style="color: #AD0000;">5</span>, <span class="dv" style="color: #AD0000;">6</span>, <span class="dv" style="color: #AD0000;">7</span>, <span class="dv" style="color: #AD0000;">8</span>, <span class="dv" style="color: #AD0000;">9</span>, <span class="dv" style="color: #AD0000;">10</span>],</span>
<span id="cb10-3">               <span class="st" style="color: #20794D;">'min_samples_split'</span>: [<span class="dv" style="color: #AD0000;">2</span>, <span class="dv" style="color: #AD0000;">3</span>, <span class="dv" style="color: #AD0000;">4</span>, <span class="dv" style="color: #AD0000;">5</span>, <span class="dv" style="color: #AD0000;">6</span>, <span class="dv" style="color: #AD0000;">7</span>, <span class="dv" style="color: #AD0000;">8</span>, <span class="dv" style="color: #AD0000;">9</span>, <span class="dv" style="color: #AD0000;">10</span>]}</span></code></pre></div>
</div>
<div class="cell" data-execution_count="10">
<div class="sourceCode cell-code" id="cb11" style="background: #f1f3f5;"><pre class="sourceCode python code-with-copy"><code class="sourceCode python"><span id="cb11-1">out <span class="op" style="color: #5E5E5E;">=</span> {}</span>
<span id="cb11-2"><span class="cf" style="color: #003B4F;">for</span> c <span class="kw" style="color: #003B4F;">in</span> hyperparams[<span class="st" style="color: #20794D;">'criterion'</span>]:</span>
<span id="cb11-3">    <span class="cf" style="color: #003B4F;">for</span> d <span class="kw" style="color: #003B4F;">in</span> hyperparams[<span class="st" style="color: #20794D;">'max_depth'</span>]:</span>
<span id="cb11-4">        <span class="cf" style="color: #003B4F;">for</span> s <span class="kw" style="color: #003B4F;">in</span> hyperparams[<span class="st" style="color: #20794D;">'min_samples_split'</span>]:</span>
<span id="cb11-5">            dt <span class="op" style="color: #5E5E5E;">=</span> DecisionTreeClassifier(criterion<span class="op" style="color: #5E5E5E;">=</span>c, max_depth<span class="op" style="color: #5E5E5E;">=</span>d, min_samples_split<span class="op" style="color: #5E5E5E;">=</span>s)</span>
<span id="cb11-6">            dt.fit(train_df[[<span class="st" style="color: #20794D;">'feature1'</span>, <span class="st" style="color: #20794D;">'feature2'</span>, <span class="st" style="color: #20794D;">'feature3'</span>, <span class="st" style="color: #20794D;">'feature4'</span>]], train_df[<span class="st" style="color: #20794D;">'target'</span>])</span>
<span id="cb11-7">            out[(c, d, s)] <span class="op" style="color: #5E5E5E;">=</span> dt.score(validation_df[[<span class="st" style="color: #20794D;">'feature1'</span>, <span class="st" style="color: #20794D;">'feature2'</span>, <span class="st" style="color: #20794D;">'feature3'</span>, <span class="st" style="color: #20794D;">'feature4'</span>]], validation_df[<span class="st" style="color: #20794D;">'target'</span>])</span></code></pre></div>
</div>
<div class="cell" data-execution_count="11">
<div class="sourceCode cell-code" id="cb12" style="background: #f1f3f5;"><pre class="sourceCode python code-with-copy"><code class="sourceCode python"><span id="cb12-1">hp_ser <span class="op" style="color: #5E5E5E;">=</span> pd.Series(out)</span>
<span id="cb12-2">hp_ser.sort_values(ascending<span class="op" style="color: #5E5E5E;">=</span><span class="va" style="color: #111111;">False</span>)</span></code></pre></div>
<div class="cell-output cell-output-display" data-execution_count="11">
<pre><code>entropy  10  10    0.766667
         7   7     0.766667
         9   8     0.766667
         8   10    0.766667
             9     0.766667
                     ...   
gini     10  5     0.500000
         8   3     0.500000
         7   4     0.500000
             3     0.500000
         5   2     0.500000
Length: 162, dtype: float64</code></pre>
</div>
</div>
<div class="cell" data-execution_count="12">
<div class="sourceCode cell-code" id="cb14" style="background: #f1f3f5;"><pre class="sourceCode python code-with-copy"><code class="sourceCode python"><span id="cb14-1">hp_ser.idxmax()</span></code></pre></div>
<div class="cell-output cell-output-display" data-execution_count="12">
<pre><code>('entropy', 4, 6)</code></pre>
</div>
</div>
<div class="cell" data-execution_count="13">
<div class="sourceCode cell-code" id="cb16" style="background: #f1f3f5;"><pre class="sourceCode python code-with-copy"><code class="sourceCode python"><span id="cb16-1">best_dt <span class="op" style="color: #5E5E5E;">=</span> DecisionTreeClassifier(criterion<span class="op" style="color: #5E5E5E;">=</span><span class="st" style="color: #20794D;">'entropy'</span>, max_depth<span class="op" style="color: #5E5E5E;">=</span><span class="dv" style="color: #AD0000;">4</span>, min_samples_split<span class="op" style="color: #5E5E5E;">=</span><span class="dv" style="color: #AD0000;">6</span>)</span></code></pre></div>
</div>
<div class="cell" data-execution_count="14">
<div class="sourceCode cell-code" id="cb17" style="background: #f1f3f5;"><pre class="sourceCode python code-with-copy"><code class="sourceCode python"><span id="cb17-1">best_dt.fit(df[:<span class="dv" style="color: #AD0000;">80</span>][[<span class="st" style="color: #20794D;">'feature1'</span>, <span class="st" style="color: #20794D;">'feature2'</span>, <span class="st" style="color: #20794D;">'feature3'</span>, <span class="st" style="color: #20794D;">'feature4'</span>]], df[:<span class="dv" style="color: #AD0000;">80</span>][<span class="st" style="color: #20794D;">'target'</span>])</span></code></pre></div>
<div class="cell-output cell-output-display" data-execution_count="14">
<style>#sk-container-id-2 {color: black;background-color: white;}#sk-container-id-2 pre{padding: 0;}#sk-container-id-2 div.sk-toggleable {background-color: white;}#sk-container-id-2 label.sk-toggleable__label {cursor: pointer;display: block;width: 100%;margin-bottom: 0;padding: 0.3em;box-sizing: border-box;text-align: center;}#sk-container-id-2 label.sk-toggleable__label-arrow:before {content: "▸";float: left;margin-right: 0.25em;color: #696969;}#sk-container-id-2 label.sk-toggleable__label-arrow:hover:before {color: black;}#sk-container-id-2 div.sk-estimator:hover label.sk-toggleable__label-arrow:before {color: black;}#sk-container-id-2 div.sk-toggleable__content {max-height: 0;max-width: 0;overflow: hidden;text-align: left;background-color: #f0f8ff;}#sk-container-id-2 div.sk-toggleable__content pre {margin: 0.2em;color: black;border-radius: 0.25em;background-color: #f0f8ff;}#sk-container-id-2 input.sk-toggleable__control:checked~div.sk-toggleable__content {max-height: 200px;max-width: 100%;overflow: auto;}#sk-container-id-2 input.sk-toggleable__control:checked~label.sk-toggleable__label-arrow:before {content: "▾";}#sk-container-id-2 div.sk-estimator input.sk-toggleable__control:checked~label.sk-toggleable__label {background-color: #d4ebff;}#sk-container-id-2 div.sk-label input.sk-toggleable__control:checked~label.sk-toggleable__label {background-color: #d4ebff;}#sk-container-id-2 input.sk-hidden--visually {border: 0;clip: rect(1px 1px 1px 1px);clip: rect(1px, 1px, 1px, 1px);height: 1px;margin: -1px;overflow: hidden;padding: 0;position: absolute;width: 1px;}#sk-container-id-2 div.sk-estimator {font-family: monospace;background-color: #f0f8ff;border: 1px dotted black;border-radius: 0.25em;box-sizing: border-box;margin-bottom: 0.5em;}#sk-container-id-2 div.sk-estimator:hover {background-color: #d4ebff;}#sk-container-id-2 div.sk-parallel-item::after {content: "";width: 100%;border-bottom: 1px solid gray;flex-grow: 1;}#sk-container-id-2 div.sk-label:hover label.sk-toggleable__label {background-color: #d4ebff;}#sk-container-id-2 div.sk-serial::before {content: "";position: absolute;border-left: 1px solid gray;box-sizing: border-box;top: 0;bottom: 0;left: 50%;z-index: 0;}#sk-container-id-2 div.sk-serial {display: flex;flex-direction: column;align-items: center;background-color: white;padding-right: 0.2em;padding-left: 0.2em;position: relative;}#sk-container-id-2 div.sk-item {position: relative;z-index: 1;}#sk-container-id-2 div.sk-parallel {display: flex;align-items: stretch;justify-content: center;background-color: white;position: relative;}#sk-container-id-2 div.sk-item::before, #sk-container-id-2 div.sk-parallel-item::before {content: "";position: absolute;border-left: 1px solid gray;box-sizing: border-box;top: 0;bottom: 0;left: 50%;z-index: -1;}#sk-container-id-2 div.sk-parallel-item {display: flex;flex-direction: column;z-index: 1;position: relative;background-color: white;}#sk-container-id-2 div.sk-parallel-item:first-child::after {align-self: flex-end;width: 50%;}#sk-container-id-2 div.sk-parallel-item:last-child::after {align-self: flex-start;width: 50%;}#sk-container-id-2 div.sk-parallel-item:only-child::after {width: 0;}#sk-container-id-2 div.sk-dashed-wrapped {border: 1px dashed gray;margin: 0 0.4em 0.5em 0.4em;box-sizing: border-box;padding-bottom: 0.4em;background-color: white;}#sk-container-id-2 div.sk-label label {font-family: monospace;font-weight: bold;display: inline-block;line-height: 1.2em;}#sk-container-id-2 div.sk-label-container {text-align: center;}#sk-container-id-2 div.sk-container {/* jupyter's `normalize.less` sets `[hidden] { display: none; }` but bootstrap.min.css set `[hidden] { display: none !important; }` so we also need the `!important` here to be able to override the default hidden behavior on the sphinx rendered scikit-learn.org. See: https://github.com/scikit-learn/scikit-learn/issues/21755 */display: inline-block !important;position: relative;}#sk-container-id-2 div.sk-text-repr-fallback {display: none;}</style><div id="sk-container-id-2" class="sk-top-container"><div class="sk-text-repr-fallback"><pre>DecisionTreeClassifier(criterion='entropy', max_depth=4, min_samples_split=6)</pre><b>In a Jupyter environment, please rerun this cell to show the HTML representation or trust the notebook. <br>On GitHub, the HTML representation is unable to render, please try loading this page with nbviewer.org.</b></div><div class="sk-container" hidden=""><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="sk-estimator-id-2" type="checkbox" checked=""><label for="sk-estimator-id-2" class="sk-toggleable__label sk-toggleable__label-arrow">DecisionTreeClassifier</label><div class="sk-toggleable__content"><pre>DecisionTreeClassifier(criterion='entropy', max_depth=4, min_samples_split=6)</pre></div></div></div></div></div>
</div>
</div>
<div class="cell" data-execution_count="16">
<div class="sourceCode cell-code" id="cb18" style="background: #f1f3f5;"><pre class="sourceCode python code-with-copy"><code class="sourceCode python"><span id="cb18-1">best_dt.score(df[<span class="dv" style="color: #AD0000;">80</span>:][[<span class="st" style="color: #20794D;">'feature1'</span>, <span class="st" style="color: #20794D;">'feature2'</span>, <span class="st" style="color: #20794D;">'feature3'</span>, <span class="st" style="color: #20794D;">'feature4'</span>]], df[<span class="dv" style="color: #AD0000;">80</span>:][<span class="st" style="color: #20794D;">'target'</span>])</span></code></pre></div>
<div class="cell-output cell-output-display" data-execution_count="16">
<pre><code>0.45</code></pre>
</div>
</div>
</section>
<section id="without-using-multiple-nested-loops" class="level4">
<h4 class="anchored" data-anchor-id="without-using-multiple-nested-loops">Without using multiple nested loops</h4>
<div class="cell" data-execution_count="20">
<div class="sourceCode cell-code" id="cb20" style="background: #f1f3f5;"><pre class="sourceCode python code-with-copy"><code class="sourceCode python"><span id="cb20-1"><span class="bu" style="color: null;">print</span>(hyperparams.items(), <span class="bu" style="color: null;">len</span>(hyperparams.items()))</span></code></pre></div>
<div class="cell-output cell-output-stdout">
<pre><code>dict_items([('criterion', ['gini', 'entropy']), ('max_depth', [2, 3, 4, 5, 6, 7, 8, 9, 10]), ('min_samples_split', [2, 3, 4, 5, 6, 7, 8, 9, 10])]) 3</code></pre>
</div>
</div>
<div class="cell" data-execution_count="17">
<div class="sourceCode cell-code" id="cb22" style="background: #f1f3f5;"><pre class="sourceCode python code-with-copy"><code class="sourceCode python"><span id="cb22-1"><span class="kw" style="color: #003B4F;">def</span> print_vec(x, y, z):</span>
<span id="cb22-2">    <span class="bu" style="color: null;">print</span>(<span class="ss" style="color: #20794D;">f"[</span><span class="sc" style="color: #5E5E5E;">{</span>x<span class="sc" style="color: #5E5E5E;">}</span><span class="ss" style="color: #20794D;"> </span><span class="ch" style="color: #20794D;">\n</span><span class="sc" style="color: #5E5E5E;">{</span>y<span class="sc" style="color: #5E5E5E;">}</span><span class="ss" style="color: #20794D;"> </span><span class="ch" style="color: #20794D;">\n</span><span class="sc" style="color: #5E5E5E;">{</span>z<span class="sc" style="color: #5E5E5E;">}</span><span class="ss" style="color: #20794D;">]"</span>)</span>
<span id="cb22-3">print_vec(<span class="op" style="color: #5E5E5E;">*</span>hyperparams.items())</span></code></pre></div>
<div class="cell-output cell-output-stdout">
<pre><code>[('criterion', ['gini', 'entropy']) 
('max_depth', [2, 3, 4, 5, 6, 7, 8, 9, 10]) 
('min_samples_split', [2, 3, 4, 5, 6, 7, 8, 9, 10])]</code></pre>
</div>
</div>
<div class="cell" data-execution_count="18">
<div class="sourceCode cell-code" id="cb24" style="background: #f1f3f5;"><pre class="sourceCode python code-with-copy"><code class="sourceCode python"><span id="cb24-1"><span class="bu" style="color: null;">list</span>(<span class="bu" style="color: null;">zip</span>(<span class="op" style="color: #5E5E5E;">*</span>hyperparams.items()))</span></code></pre></div>
<div class="cell-output cell-output-display" data-execution_count="18">
<pre><code>[('criterion', 'max_depth', 'min_samples_split'),
 (['gini', 'entropy'],
  [2, 3, 4, 5, 6, 7, 8, 9, 10],
  [2, 3, 4, 5, 6, 7, 8, 9, 10])]</code></pre>
</div>
</div>
<div class="cell" data-execution_count="19">
<div class="sourceCode cell-code" id="cb26" style="background: #f1f3f5;"><pre class="sourceCode python code-with-copy"><code class="sourceCode python"><span id="cb26-1">keys, values <span class="op" style="color: #5E5E5E;">=</span> <span class="bu" style="color: null;">zip</span>(<span class="op" style="color: #5E5E5E;">*</span>hyperparams.items())</span></code></pre></div>
</div>
<div class="cell" data-execution_count="20">
<div class="sourceCode cell-code" id="cb27" style="background: #f1f3f5;"><pre class="sourceCode python code-with-copy"><code class="sourceCode python"><span id="cb27-1">keys</span></code></pre></div>
<div class="cell-output cell-output-display" data-execution_count="20">
<pre><code>('criterion', 'max_depth', 'min_samples_split')</code></pre>
</div>
</div>
<div class="cell" data-execution_count="21">
<div class="sourceCode cell-code" id="cb29" style="background: #f1f3f5;"><pre class="sourceCode python code-with-copy"><code class="sourceCode python"><span id="cb29-1">values</span></code></pre></div>
<div class="cell-output cell-output-display" data-execution_count="21">
<pre><code>(['gini', 'entropy'],
 [2, 3, 4, 5, 6, 7, 8, 9, 10],
 [2, 3, 4, 5, 6, 7, 8, 9, 10])</code></pre>
</div>
</div>
<div class="cell" data-execution_count="22">
<div class="sourceCode cell-code" id="cb31" style="background: #f1f3f5;"><pre class="sourceCode python code-with-copy"><code class="sourceCode python"><span id="cb31-1"><span class="im" style="color: #00769E;">import</span> itertools</span>
<span id="cb31-2"><span class="bu" style="color: null;">list</span>(itertools.product(<span class="op" style="color: #5E5E5E;">*</span>values))[::<span class="dv" style="color: #AD0000;">10</span>]</span></code></pre></div>
<div class="cell-output cell-output-display" data-execution_count="22">
<pre><code>[('gini', 2, 2),
 ('gini', 3, 3),
 ('gini', 4, 4),
 ('gini', 5, 5),
 ('gini', 6, 6),
 ('gini', 7, 7),
 ('gini', 8, 8),
 ('gini', 9, 9),
 ('gini', 10, 10),
 ('entropy', 3, 2),
 ('entropy', 4, 3),
 ('entropy', 5, 4),
 ('entropy', 6, 5),
 ('entropy', 7, 6),
 ('entropy', 8, 7),
 ('entropy', 9, 8),
 ('entropy', 10, 9)]</code></pre>
</div>
</div>
<div class="cell" data-execution_count="23">
<div class="sourceCode cell-code" id="cb33" style="background: #f1f3f5;"><pre class="sourceCode python code-with-copy"><code class="sourceCode python"><span id="cb33-1">v <span class="op" style="color: #5E5E5E;">=</span> <span class="bu" style="color: null;">next</span>(itertools.product(<span class="op" style="color: #5E5E5E;">*</span>values))</span>
<span id="cb33-2"><span class="bu" style="color: null;">print</span>(v)</span></code></pre></div>
<div class="cell-output cell-output-stdout">
<pre><code>('gini', 2, 2)</code></pre>
</div>
</div>
<div class="cell" data-execution_count="24">
<div class="sourceCode cell-code" id="cb35" style="background: #f1f3f5;"><pre class="sourceCode python code-with-copy"><code class="sourceCode python"><span id="cb35-1">print_vec(<span class="op" style="color: #5E5E5E;">*</span><span class="bu" style="color: null;">zip</span>(keys, v))</span></code></pre></div>
<div class="cell-output cell-output-stdout">
<pre><code>[('criterion', 'gini') 
('max_depth', 2) 
('min_samples_split', 2)]</code></pre>
</div>
</div>
<div class="cell" data-execution_count="25">
<div class="sourceCode cell-code" id="cb37" style="background: #f1f3f5;"><pre class="sourceCode python code-with-copy"><code class="sourceCode python"><span id="cb37-1"><span class="kw" style="color: #003B4F;">def</span> print_dict(<span class="op" style="color: #5E5E5E;">**</span>kwargs):</span>
<span id="cb37-2">    <span class="bu" style="color: null;">print</span>(kwargs)</span>
<span id="cb37-3"></span>
<span id="cb37-4">print_dict(<span class="op" style="color: #5E5E5E;">**</span>(<span class="bu" style="color: null;">dict</span>(<span class="bu" style="color: null;">zip</span>(keys, v))))</span></code></pre></div>
<div class="cell-output cell-output-stdout">
<pre><code>{'criterion': 'gini', 'max_depth': 2, 'min_samples_split': 2}</code></pre>
</div>
</div>
<div class="cell" data-execution_count="26">
<div class="sourceCode cell-code" id="cb39" style="background: #f1f3f5;"><pre class="sourceCode python code-with-copy"><code class="sourceCode python"><span id="cb39-1">out <span class="op" style="color: #5E5E5E;">=</span> {}</span>
<span id="cb39-2"><span class="cf" style="color: #003B4F;">for</span> v <span class="kw" style="color: #003B4F;">in</span> itertools.product(<span class="op" style="color: #5E5E5E;">*</span>values):</span>
<span id="cb39-3">    params <span class="op" style="color: #5E5E5E;">=</span> <span class="bu" style="color: null;">dict</span>(<span class="bu" style="color: null;">zip</span>(keys, v))</span>
<span id="cb39-4">    dt<span class="op" style="color: #5E5E5E;">=</span> DecisionTreeClassifier(<span class="op" style="color: #5E5E5E;">**</span>params)</span>
<span id="cb39-5">    dt.fit(train_df[[<span class="st" style="color: #20794D;">'feature1'</span>, <span class="st" style="color: #20794D;">'feature2'</span>, <span class="st" style="color: #20794D;">'feature3'</span>, <span class="st" style="color: #20794D;">'feature4'</span>]], train_df[<span class="st" style="color: #20794D;">'target'</span>])</span>
<span id="cb39-6">    out[(params[<span class="st" style="color: #20794D;">'criterion'</span>], params[<span class="st" style="color: #20794D;">'max_depth'</span>], params[<span class="st" style="color: #20794D;">'min_samples_split'</span>])] <span class="op" style="color: #5E5E5E;">=</span> dt.score(validation_df[[<span class="st" style="color: #20794D;">'feature1'</span>, <span class="st" style="color: #20794D;">'feature2'</span>, <span class="st" style="color: #20794D;">'feature3'</span>, <span class="st" style="color: #20794D;">'feature4'</span>]], validation_df[<span class="st" style="color: #20794D;">'target'</span>])</span>
<span id="cb39-7">    </span></code></pre></div>
</div>
<div class="cell" data-execution_count="27">
<div class="sourceCode cell-code" id="cb40" style="background: #f1f3f5;"><pre class="sourceCode python code-with-copy"><code class="sourceCode python"><span id="cb40-1">pd.Series(out).sort_values(ascending<span class="op" style="color: #5E5E5E;">=</span><span class="va" style="color: #111111;">False</span>)</span></code></pre></div>
<div class="cell-output cell-output-display" data-execution_count="27">
<pre><code>entropy  10  10    0.766667
         7   7     0.766667
         9   8     0.766667
         8   10    0.766667
             9     0.766667
                     ...   
         3   3     0.500000
             4     0.500000
             5     0.500000
gini     10  5     0.500000
             3     0.500000
Length: 162, dtype: float64</code></pre>
</div>
</div>


</section>

 ]]></description>
  <guid>https://github.com/nipunbatra/ml2023/notebooks/posts/hyperparameter-1.html</guid>
  <pubDate>Tue, 17 Jan 2023 00:00:00 GMT</pubDate>
</item>
<item>
  <title>Some Python Utilities</title>
  <dc:creator>Nipun Batra</dc:creator>
  <link>https://github.com/nipunbatra/ml2023/notebooks/posts/python-utils.html</link>
  <description><![CDATA[ 



<section id="function-argument-unpacking" class="level4">
<h4 class="anchored" data-anchor-id="function-argument-unpacking">Function Argument Unpacking</h4>
<p>Reference: https://www.youtube.com/watch?v=YWY4BZi_o28</p>
<div class="cell" data-execution_count="1">
<div class="sourceCode cell-code" id="cb1" style="background: #f1f3f5;"><pre class="sourceCode python code-with-copy"><code class="sourceCode python"><span id="cb1-1"><span class="kw" style="color: #003B4F;">def</span> print_vec(x, y, z):</span>
<span id="cb1-2">    <span class="bu" style="color: null;">print</span>(<span class="ss" style="color: #20794D;">f"[</span><span class="sc" style="color: #5E5E5E;">{</span>x<span class="sc" style="color: #5E5E5E;">}</span><span class="ss" style="color: #20794D;"> </span><span class="ch" style="color: #20794D;">\n</span><span class="sc" style="color: #5E5E5E;">{</span>y<span class="sc" style="color: #5E5E5E;">}</span><span class="ss" style="color: #20794D;"> </span><span class="ch" style="color: #20794D;">\n</span><span class="sc" style="color: #5E5E5E;">{</span>z<span class="sc" style="color: #5E5E5E;">}</span><span class="ss" style="color: #20794D;">]"</span>)</span></code></pre></div>
</div>
<div class="cell" data-execution_count="2">
<div class="sourceCode cell-code" id="cb2" style="background: #f1f3f5;"><pre class="sourceCode python code-with-copy"><code class="sourceCode python"><span id="cb2-1">print_vec(<span class="dv" style="color: #AD0000;">1</span>, <span class="dv" style="color: #AD0000;">2</span>, <span class="dv" style="color: #AD0000;">3</span>)</span></code></pre></div>
<div class="cell-output cell-output-stdout">
<pre><code>[1 
2 
3]</code></pre>
</div>
</div>
<div class="cell" data-execution_count="5">
<div class="sourceCode cell-code" id="cb4" style="background: #f1f3f5;"><pre class="sourceCode python code-with-copy"><code class="sourceCode python"><span id="cb4-1">tuple_vec <span class="op" style="color: #5E5E5E;">=</span> (<span class="dv" style="color: #AD0000;">1</span>, <span class="dv" style="color: #AD0000;">0</span>, <span class="dv" style="color: #AD0000;">1</span>)</span>
<span id="cb4-2"><span class="co" style="color: #5E5E5E;">#print_vec(tuple_vec)</span></span>
<span id="cb4-3">print_vec(tuple_vec[<span class="dv" style="color: #AD0000;">0</span>], tuple_vec[<span class="dv" style="color: #AD0000;">1</span>], tuple_vec[<span class="dv" style="color: #AD0000;">2</span>])</span></code></pre></div>
<div class="cell-output cell-output-stdout">
<pre><code>[1 
0 
1]</code></pre>
</div>
</div>
<div class="cell" data-execution_count="6">
<div class="sourceCode cell-code" id="cb6" style="background: #f1f3f5;"><pre class="sourceCode python code-with-copy"><code class="sourceCode python"><span id="cb6-1">list_vec <span class="op" style="color: #5E5E5E;">=</span> [<span class="dv" style="color: #AD0000;">1</span>, <span class="dv" style="color: #AD0000;">0</span>, <span class="dv" style="color: #AD0000;">1</span>]</span>
<span id="cb6-2"></span>
<span id="cb6-3">print_vec(tuple_vec[<span class="dv" style="color: #AD0000;">0</span>], tuple_vec[<span class="dv" style="color: #AD0000;">1</span>], tuple_vec[<span class="dv" style="color: #AD0000;">2</span>])</span>
<span id="cb6-4"><span class="bu" style="color: null;">print</span>(<span class="st" style="color: #20794D;">"*"</span><span class="op" style="color: #5E5E5E;">*</span><span class="dv" style="color: #AD0000;">20</span>)</span>
<span id="cb6-5">print_vec(<span class="op" style="color: #5E5E5E;">*</span>tuple_vec)</span>
<span id="cb6-6"><span class="bu" style="color: null;">print</span>(<span class="st" style="color: #20794D;">"*"</span><span class="op" style="color: #5E5E5E;">*</span><span class="dv" style="color: #AD0000;">20</span>)</span>
<span id="cb6-7"></span>
<span id="cb6-8">print_vec(<span class="op" style="color: #5E5E5E;">*</span>list_vec)</span></code></pre></div>
<div class="cell-output cell-output-stdout">
<pre><code>[1 
0 
1]
********************
[1 
0 
1]
********************
[1 
0 
1]</code></pre>
</div>
</div>
<div class="cell" data-execution_count="7">
<div class="sourceCode cell-code" id="cb8" style="background: #f1f3f5;"><pre class="sourceCode python code-with-copy"><code class="sourceCode python"><span id="cb8-1">dictionary_vec <span class="op" style="color: #5E5E5E;">=</span> {<span class="st" style="color: #20794D;">"x"</span>: <span class="dv" style="color: #AD0000;">1</span>, <span class="st" style="color: #20794D;">"y"</span>: <span class="dv" style="color: #AD0000;">0</span>, <span class="st" style="color: #20794D;">"z"</span>: <span class="dv" style="color: #AD0000;">1</span>}</span>
<span id="cb8-2">print_vec(<span class="op" style="color: #5E5E5E;">**</span>dictionary_vec)</span></code></pre></div>
<div class="cell-output cell-output-stdout">
<pre><code>[1 
0 
1]</code></pre>
</div>
</div>
<div class="cell" data-execution_count="8">
<div class="sourceCode cell-code" id="cb10" style="background: #f1f3f5;"><pre class="sourceCode python code-with-copy"><code class="sourceCode python"><span id="cb10-1">dictionary_vec <span class="op" style="color: #5E5E5E;">=</span> {<span class="st" style="color: #20794D;">"a"</span>: <span class="dv" style="color: #AD0000;">1</span>, <span class="st" style="color: #20794D;">"b"</span>: <span class="dv" style="color: #AD0000;">0</span>, <span class="st" style="color: #20794D;">"c"</span>:<span class="dv" style="color: #AD0000;">1</span>}</span>
<span id="cb10-2">print_vec(<span class="op" style="color: #5E5E5E;">**</span>dictionary_vec)</span></code></pre></div>
<div class="cell-output cell-output-error">
<pre><code>TypeError: print_vec() got an unexpected keyword argument 'a'</code></pre>
</div>
</div>
<div class="cell" data-execution_count="6">
<div class="sourceCode cell-code" id="cb12" style="background: #f1f3f5;"><pre class="sourceCode python code-with-copy"><code class="sourceCode python"><span id="cb12-1"><span class="bu" style="color: null;">print</span>(<span class="op" style="color: #5E5E5E;">*</span>dictionary_vec)</span></code></pre></div>
<div class="cell-output cell-output-stdout">
<pre><code>a b c</code></pre>
</div>
</div>
</section>
<section id="zip" class="level4">
<h4 class="anchored" data-anchor-id="zip">Zip</h4>
<div class="cell" data-execution_count="9">
<div class="sourceCode cell-code" id="cb14" style="background: #f1f3f5;"><pre class="sourceCode python code-with-copy"><code class="sourceCode python"><span id="cb14-1"><span class="bu" style="color: null;">list</span>(<span class="bu" style="color: null;">zip</span>([<span class="dv" style="color: #AD0000;">1</span>, <span class="dv" style="color: #AD0000;">2</span>, <span class="dv" style="color: #AD0000;">3</span>], [<span class="st" style="color: #20794D;">'a'</span>, <span class="st" style="color: #20794D;">'b'</span>, <span class="st" style="color: #20794D;">'c'</span>], [<span class="dv" style="color: #AD0000;">7</span>, <span class="dv" style="color: #AD0000;">8</span>, <span class="dv" style="color: #AD0000;">9</span>]))</span></code></pre></div>
<div class="cell-output cell-output-display" data-execution_count="9">
<pre><code>[(1, 'a', 7), (2, 'b', 8), (3, 'c', 9)]</code></pre>
</div>
</div>
</section>
<section id="itertools-product" class="level4">
<h4 class="anchored" data-anchor-id="itertools-product">Itertools Product</h4>
<div class="cell" data-execution_count="10">
<div class="sourceCode cell-code" id="cb16" style="background: #f1f3f5;"><pre class="sourceCode python code-with-copy"><code class="sourceCode python"><span id="cb16-1"><span class="im" style="color: #00769E;">import</span> itertools</span>
<span id="cb16-2"><span class="bu" style="color: null;">list</span>(itertools.product([<span class="dv" style="color: #AD0000;">1</span>, <span class="dv" style="color: #AD0000;">2</span>], [<span class="st" style="color: #20794D;">'a'</span>, <span class="st" style="color: #20794D;">'b'</span>, <span class="st" style="color: #20794D;">'c'</span>], [<span class="dv" style="color: #AD0000;">7</span>, <span class="dv" style="color: #AD0000;">8</span>, <span class="dv" style="color: #AD0000;">9</span>]))</span></code></pre></div>
<div class="cell-output cell-output-display" data-execution_count="10">
<pre><code>[(1, 'a', 7),
 (1, 'a', 8),
 (1, 'a', 9),
 (1, 'b', 7),
 (1, 'b', 8),
 (1, 'b', 9),
 (1, 'c', 7),
 (1, 'c', 8),
 (1, 'c', 9),
 (2, 'a', 7),
 (2, 'a', 8),
 (2, 'a', 9),
 (2, 'b', 7),
 (2, 'b', 8),
 (2, 'b', 9),
 (2, 'c', 7),
 (2, 'c', 8),
 (2, 'c', 9)]</code></pre>
</div>
</div>


</section>

 ]]></description>
  <guid>https://github.com/nipunbatra/ml2023/notebooks/posts/python-utils.html</guid>
  <pubDate>Tue, 17 Jan 2023 00:00:00 GMT</pubDate>
</item>
<item>
  <title>Pandas tips</title>
  <dc:creator>Nipun Batra</dc:creator>
  <link>https://github.com/nipunbatra/ml2023/notebooks/posts/pivot-cross.html</link>
  <description><![CDATA[ 



<div class="cell" data-execution_count="2">
<div class="sourceCode cell-code" id="cb1" style="background: #f1f3f5;"><pre class="sourceCode python code-with-copy"><code class="sourceCode python"><span id="cb1-1"><span class="im" style="color: #00769E;">import</span> pandas <span class="im" style="color: #00769E;">as</span> pd</span>
<span id="cb1-2"><span class="im" style="color: #00769E;">import</span> numpy <span class="im" style="color: #00769E;">as</span> np</span></code></pre></div>
</div>
<section id="dataset-creation" class="level3">
<h3 class="anchored" data-anchor-id="dataset-creation">Dataset creation</h3>
<div class="cell" data-execution_count="3">
<div class="sourceCode cell-code" id="cb2" style="background: #f1f3f5;"><pre class="sourceCode python code-with-copy"><code class="sourceCode python"><span id="cb2-1"><span class="co" style="color: #5E5E5E;"># Create a DataFrame for whether or not a person plays tennis. </span></span>
<span id="cb2-2"><span class="co" style="color: #5E5E5E;"># It has discrete features and 14 rows.</span></span>
<span id="cb2-3"></span>
<span id="cb2-4">df <span class="op" style="color: #5E5E5E;">=</span> pd.DataFrame({</span>
<span id="cb2-5">    <span class="st" style="color: #20794D;">'Outlook'</span>: [<span class="st" style="color: #20794D;">'Sunny'</span>, <span class="st" style="color: #20794D;">'Sunny'</span>, <span class="st" style="color: #20794D;">'Overcast'</span>, <span class="st" style="color: #20794D;">'Rain'</span>, <span class="st" style="color: #20794D;">'Rain'</span>, <span class="st" style="color: #20794D;">'Rain'</span>, <span class="st" style="color: #20794D;">'Overcast'</span>, <span class="st" style="color: #20794D;">'Sunny'</span>, <span class="st" style="color: #20794D;">'Sunny'</span>, <span class="st" style="color: #20794D;">'Rain'</span>, <span class="st" style="color: #20794D;">'Sunny'</span>, <span class="st" style="color: #20794D;">'Overcast'</span>, <span class="st" style="color: #20794D;">'Overcast'</span>, <span class="st" style="color: #20794D;">'Rain'</span>],</span>
<span id="cb2-6">    <span class="st" style="color: #20794D;">'Temperature'</span>: [<span class="st" style="color: #20794D;">'Hot'</span>, <span class="st" style="color: #20794D;">'Hot'</span>, <span class="st" style="color: #20794D;">'Hot'</span>, <span class="st" style="color: #20794D;">'Mild'</span>, <span class="st" style="color: #20794D;">'Cool'</span>, <span class="st" style="color: #20794D;">'Cool'</span>, <span class="st" style="color: #20794D;">'Cool'</span>, <span class="st" style="color: #20794D;">'Mild'</span>, <span class="st" style="color: #20794D;">'Cool'</span>, <span class="st" style="color: #20794D;">'Mild'</span>, <span class="st" style="color: #20794D;">'Mild'</span>, <span class="st" style="color: #20794D;">'Mild'</span>, <span class="st" style="color: #20794D;">'Hot'</span>, <span class="st" style="color: #20794D;">'Mild'</span>],</span>
<span id="cb2-7">    <span class="st" style="color: #20794D;">'Humidity'</span>: [<span class="st" style="color: #20794D;">'High'</span>, <span class="st" style="color: #20794D;">'High'</span>, <span class="st" style="color: #20794D;">'High'</span>, <span class="st" style="color: #20794D;">'High'</span>, <span class="st" style="color: #20794D;">'Normal'</span>, <span class="st" style="color: #20794D;">'Normal'</span>, <span class="st" style="color: #20794D;">'Normal'</span>, <span class="st" style="color: #20794D;">'High'</span>, <span class="st" style="color: #20794D;">'Normal'</span>, <span class="st" style="color: #20794D;">'Normal'</span>, <span class="st" style="color: #20794D;">'Normal'</span>, <span class="st" style="color: #20794D;">'High'</span>, <span class="st" style="color: #20794D;">'Normal'</span>, <span class="st" style="color: #20794D;">'High'</span>],</span>
<span id="cb2-8">    <span class="st" style="color: #20794D;">'Wind'</span>: [<span class="st" style="color: #20794D;">'Weak'</span>, <span class="st" style="color: #20794D;">'Strong'</span>, <span class="st" style="color: #20794D;">'Weak'</span>, <span class="st" style="color: #20794D;">'Weak'</span>, <span class="st" style="color: #20794D;">'Weak'</span>, <span class="st" style="color: #20794D;">'Strong'</span>, <span class="st" style="color: #20794D;">'Strong'</span>, <span class="st" style="color: #20794D;">'Weak'</span>, <span class="st" style="color: #20794D;">'Weak'</span>, <span class="st" style="color: #20794D;">'Weak'</span>, <span class="st" style="color: #20794D;">'Strong'</span>, <span class="st" style="color: #20794D;">'Strong'</span>, <span class="st" style="color: #20794D;">'Weak'</span>, <span class="st" style="color: #20794D;">'Strong'</span>],</span>
<span id="cb2-9">    <span class="st" style="color: #20794D;">'PlayTennis'</span>: [<span class="st" style="color: #20794D;">'No'</span>, <span class="st" style="color: #20794D;">'No'</span>, <span class="st" style="color: #20794D;">'Yes'</span>, <span class="st" style="color: #20794D;">'Yes'</span>, <span class="st" style="color: #20794D;">'Yes'</span>, <span class="st" style="color: #20794D;">'No'</span>, <span class="st" style="color: #20794D;">'Yes'</span>, <span class="st" style="color: #20794D;">'No'</span>, <span class="st" style="color: #20794D;">'Yes'</span>, <span class="st" style="color: #20794D;">'Yes'</span>, <span class="st" style="color: #20794D;">'Yes'</span>, <span class="st" style="color: #20794D;">'Yes'</span>, <span class="st" style="color: #20794D;">'Yes'</span>, <span class="st" style="color: #20794D;">'No'</span>]</span>
<span id="cb2-10">})</span></code></pre></div>
</div>
</section>
<section id="counting-values-of-outcome-variable-useful-for-calculating-entropy" class="level3">
<h3 class="anchored" data-anchor-id="counting-values-of-outcome-variable-useful-for-calculating-entropy">Counting values of outcome variable (useful for calculating entropy)</h3>
<div class="cell" data-execution_count="5">
<div class="sourceCode cell-code" id="cb3" style="background: #f1f3f5;"><pre class="sourceCode python code-with-copy"><code class="sourceCode python"><span id="cb3-1">ser <span class="op" style="color: #5E5E5E;">=</span> df[<span class="st" style="color: #20794D;">'PlayTennis'</span>].value_counts()</span>
<span id="cb3-2">ser</span></code></pre></div>
<div class="cell-output cell-output-display" data-execution_count="5">
<pre><code>Yes    9
No     5
Name: PlayTennis, dtype: int64</code></pre>
</div>
</div>
</section>
<section id="using-cross-tab-to-quickly-capture-the-relationship-between-two-variables" class="level3">
<h3 class="anchored" data-anchor-id="using-cross-tab-to-quickly-capture-the-relationship-between-two-variables">Using cross tab to quickly capture the relationship between two variables</h3>
<div class="cell" data-execution_count="9">
<div class="sourceCode cell-code" id="cb5" style="background: #f1f3f5;"><pre class="sourceCode python code-with-copy"><code class="sourceCode python"><span id="cb5-1">df_out <span class="op" style="color: #5E5E5E;">=</span> pd.crosstab(df[<span class="st" style="color: #20794D;">'Outlook'</span>], df[<span class="st" style="color: #20794D;">'PlayTennis'</span>])</span>
<span id="cb5-2">df_out</span></code></pre></div>
<div class="cell-output cell-output-display" data-execution_count="9">

<div>

<table class="dataframe table table-sm table-striped">
  <thead>
    <tr>
      <th>PlayTennis</th>
      <th>No</th>
      <th>Yes</th>
    </tr>
    <tr>
      <th>Outlook</th>
      <th></th>
      <th></th>
    </tr>
  </thead>
  <tbody>
    <tr>
      <th>Overcast</th>
      <td>0</td>
      <td>4</td>
    </tr>
    <tr>
      <th>Rain</th>
      <td>2</td>
      <td>3</td>
    </tr>
    <tr>
      <th>Sunny</th>
      <td>3</td>
      <td>2</td>
    </tr>
  </tbody>
</table>
</div>
</div>
</div>
<div class="cell" data-execution_count="7">
<div class="sourceCode cell-code" id="cb6" style="background: #f1f3f5;"><pre class="sourceCode python code-with-copy"><code class="sourceCode python"><span id="cb6-1">df_out.index, df_out.columns</span></code></pre></div>
<div class="cell-output cell-output-display" data-execution_count="7">
<pre><code>(Index(['Overcast', 'Rain', 'Sunny'], dtype='object', name='Outlook'),
 Index(['No', 'Yes'], dtype='object', name='PlayTennis'))</code></pre>
</div>
</div>
<div class="cell" data-execution_count="10">
<div class="sourceCode cell-code" id="cb8" style="background: #f1f3f5;"><pre class="sourceCode python code-with-copy"><code class="sourceCode python"><span id="cb8-1">e <span class="op" style="color: #5E5E5E;">=</span> df_out.<span class="bu" style="color: null;">sum</span>(axis<span class="op" style="color: #5E5E5E;">=</span><span class="dv" style="color: #AD0000;">1</span>)</span>
<span id="cb8-2">e</span></code></pre></div>
<div class="cell-output cell-output-display" data-execution_count="10">
<pre><code>Outlook
Overcast    4
Rain        5
Sunny       5
dtype: int64</code></pre>
</div>
</div>
<div class="cell" data-execution_count="11">
<div class="sourceCode cell-code" id="cb10" style="background: #f1f3f5;"><pre class="sourceCode python code-with-copy"><code class="sourceCode python"><span id="cb10-1"><span class="co" style="color: #5E5E5E;"># Find the fraction of each row that is a 'Yes' and 'No' for PlayTennis</span></span>
<span id="cb10-2">df_out[<span class="st" style="color: #20794D;">'Yes'</span>] <span class="op" style="color: #5E5E5E;">=</span> df_out[<span class="st" style="color: #20794D;">'Yes'</span>] <span class="op" style="color: #5E5E5E;">/</span> e</span>
<span id="cb10-3">df_out[<span class="st" style="color: #20794D;">'No'</span>] <span class="op" style="color: #5E5E5E;">=</span> df_out[<span class="st" style="color: #20794D;">'No'</span>] <span class="op" style="color: #5E5E5E;">/</span> e</span>
<span id="cb10-4">df_out</span></code></pre></div>
<div class="cell-output cell-output-display" data-execution_count="11">

<div>

<table class="dataframe table table-sm table-striped">
  <thead>
    <tr>
      <th>PlayTennis</th>
      <th>No</th>
      <th>Yes</th>
    </tr>
    <tr>
      <th>Outlook</th>
      <th></th>
      <th></th>
    </tr>
  </thead>
  <tbody>
    <tr>
      <th>Overcast</th>
      <td>0.0</td>
      <td>1.0</td>
    </tr>
    <tr>
      <th>Rain</th>
      <td>0.4</td>
      <td>0.6</td>
    </tr>
    <tr>
      <th>Sunny</th>
      <td>0.6</td>
      <td>0.4</td>
    </tr>
  </tbody>
</table>
</div>
</div>
</div>
</section>
<section id="more-efficient-cross-tabulation-using-normalize" class="level3">
<h3 class="anchored" data-anchor-id="more-efficient-cross-tabulation-using-normalize">More efficient cross tabulation (using normalize)</h3>
<div class="cell" data-execution_count="8">
<div class="sourceCode cell-code" id="cb11" style="background: #f1f3f5;"><pre class="sourceCode python code-with-copy"><code class="sourceCode python"><span id="cb11-1">pd.crosstab(df[<span class="st" style="color: #20794D;">'Outlook'</span>], df[<span class="st" style="color: #20794D;">'PlayTennis'</span>], normalize<span class="op" style="color: #5E5E5E;">=</span><span class="st" style="color: #20794D;">'index'</span>)</span></code></pre></div>
<div class="cell-output cell-output-display" data-execution_count="8">

<div>

<table class="dataframe table table-sm table-striped">
  <thead>
    <tr>
      <th>PlayTennis</th>
      <th>No</th>
      <th>Yes</th>
    </tr>
    <tr>
      <th>Outlook</th>
      <th></th>
      <th></th>
    </tr>
  </thead>
  <tbody>
    <tr>
      <th>Overcast</th>
      <td>0.0</td>
      <td>1.0</td>
    </tr>
    <tr>
      <th>Rain</th>
      <td>0.4</td>
      <td>0.6</td>
    </tr>
    <tr>
      <th>Sunny</th>
      <td>0.6</td>
      <td>0.4</td>
    </tr>
  </tbody>
</table>
</div>
</div>
</div>
</section>
<section id="using-pd.groupby" class="level3">
<h3 class="anchored" data-anchor-id="using-pd.groupby">Using pd.groupby()</h3>
<div class="cell" data-execution_count="13">
<div class="sourceCode cell-code" id="cb12" style="background: #f1f3f5;"><pre class="sourceCode python code-with-copy"><code class="sourceCode python"><span id="cb12-1">df.groupby([<span class="st" style="color: #20794D;">"Outlook"</span>]).groups</span></code></pre></div>
<div class="cell-output cell-output-display" data-execution_count="13">
<pre><code>{'Overcast': [2, 6, 11, 12], 'Rain': [3, 4, 5, 9, 13], 'Sunny': [0, 1, 7, 8, 10]}</code></pre>
</div>
</div>
<div class="cell" data-execution_count="14">
<div class="sourceCode cell-code" id="cb14" style="background: #f1f3f5;"><pre class="sourceCode python code-with-copy"><code class="sourceCode python"><span id="cb14-1">df.groupby([<span class="st" style="color: #20794D;">"Outlook"</span>]).get_group(<span class="st" style="color: #20794D;">"Sunny"</span>)</span></code></pre></div>
<div class="cell-output cell-output-display" data-execution_count="14">

<div>

<table class="dataframe table table-sm table-striped">
  <thead>
    <tr>
      <th></th>
      <th>Outlook</th>
      <th>Temperature</th>
      <th>Humidity</th>
      <th>Wind</th>
      <th>PlayTennis</th>
    </tr>
  </thead>
  <tbody>
    <tr>
      <th>0</th>
      <td>Sunny</td>
      <td>Hot</td>
      <td>High</td>
      <td>Weak</td>
      <td>No</td>
    </tr>
    <tr>
      <th>1</th>
      <td>Sunny</td>
      <td>Hot</td>
      <td>High</td>
      <td>Strong</td>
      <td>No</td>
    </tr>
    <tr>
      <th>7</th>
      <td>Sunny</td>
      <td>Mild</td>
      <td>High</td>
      <td>Weak</td>
      <td>No</td>
    </tr>
    <tr>
      <th>8</th>
      <td>Sunny</td>
      <td>Cool</td>
      <td>Normal</td>
      <td>Weak</td>
      <td>Yes</td>
    </tr>
    <tr>
      <th>10</th>
      <td>Sunny</td>
      <td>Mild</td>
      <td>Normal</td>
      <td>Strong</td>
      <td>Yes</td>
    </tr>
  </tbody>
</table>
</div>
</div>
</div>
<div class="cell" data-execution_count="15">
<div class="sourceCode cell-code" id="cb15" style="background: #f1f3f5;"><pre class="sourceCode python code-with-copy"><code class="sourceCode python"><span id="cb15-1">df.groupby([<span class="st" style="color: #20794D;">"Outlook"</span>]).get_group(<span class="st" style="color: #20794D;">"Sunny"</span>)[<span class="st" style="color: #20794D;">"PlayTennis"</span>]</span></code></pre></div>
<div class="cell-output cell-output-display" data-execution_count="15">
<pre><code>0      No
1      No
7      No
8     Yes
10    Yes
Name: PlayTennis, dtype: object</code></pre>
</div>
</div>
<div class="cell" data-execution_count="16">
<div class="sourceCode cell-code" id="cb17" style="background: #f1f3f5;"><pre class="sourceCode python code-with-copy"><code class="sourceCode python"><span id="cb17-1">df.groupby([<span class="st" style="color: #20794D;">"Outlook"</span>]).get_group(<span class="st" style="color: #20794D;">"Sunny"</span>)[<span class="st" style="color: #20794D;">"PlayTennis"</span>].value_counts()</span></code></pre></div>
<div class="cell-output cell-output-display" data-execution_count="16">
<pre><code>No     3
Yes    2
Name: PlayTennis, dtype: int64</code></pre>
</div>
</div>
<div class="cell" data-execution_count="18">
<div class="sourceCode cell-code" id="cb19" style="background: #f1f3f5;"><pre class="sourceCode python code-with-copy"><code class="sourceCode python"><span id="cb19-1">df.groupby([<span class="st" style="color: #20794D;">"Outlook"</span>, <span class="st" style="color: #20794D;">"PlayTennis"</span>]).groups</span></code></pre></div>
<div class="cell-output cell-output-display" data-execution_count="18">
<pre><code>{('Overcast', 'Yes'): [2, 6, 11, 12], ('Rain', 'No'): [5, 13], ('Rain', 'Yes'): [3, 4, 9], ('Sunny', 'No'): [0, 1, 7], ('Sunny', 'Yes'): [8, 10]}</code></pre>
</div>
</div>
<div class="cell" data-execution_count="19">
<div class="sourceCode cell-code" id="cb21" style="background: #f1f3f5;"><pre class="sourceCode python code-with-copy"><code class="sourceCode python"><span id="cb21-1">df.groupby([<span class="st" style="color: #20794D;">"Outlook"</span>, <span class="st" style="color: #20794D;">"PlayTennis"</span>]).get_group((<span class="st" style="color: #20794D;">"Sunny"</span>, <span class="st" style="color: #20794D;">"Yes"</span>))</span></code></pre></div>
<div class="cell-output cell-output-display" data-execution_count="19">

<div>

<table class="dataframe table table-sm table-striped">
  <thead>
    <tr>
      <th></th>
      <th>Outlook</th>
      <th>Temperature</th>
      <th>Humidity</th>
      <th>Wind</th>
      <th>PlayTennis</th>
    </tr>
  </thead>
  <tbody>
    <tr>
      <th>8</th>
      <td>Sunny</td>
      <td>Cool</td>
      <td>Normal</td>
      <td>Weak</td>
      <td>Yes</td>
    </tr>
    <tr>
      <th>10</th>
      <td>Sunny</td>
      <td>Mild</td>
      <td>Normal</td>
      <td>Strong</td>
      <td>Yes</td>
    </tr>
  </tbody>
</table>
</div>
</div>
</div>
<div class="cell" data-execution_count="20">
<div class="sourceCode cell-code" id="cb22" style="background: #f1f3f5;"><pre class="sourceCode python code-with-copy"><code class="sourceCode python"><span id="cb22-1">df.groupby([<span class="st" style="color: #20794D;">"Outlook"</span>, <span class="st" style="color: #20794D;">"PlayTennis"</span>]).size()</span></code></pre></div>
<div class="cell-output cell-output-display" data-execution_count="20">
<pre><code>Outlook   PlayTennis
Overcast  Yes           4
Rain      No            2
          Yes           3
Sunny     No            3
          Yes           2
dtype: int64</code></pre>
</div>
</div>
<div class="cell" data-execution_count="16">
<div class="sourceCode cell-code" id="cb24" style="background: #f1f3f5;"><pre class="sourceCode python code-with-copy"><code class="sourceCode python"><span id="cb24-1">df.groupby([<span class="st" style="color: #20794D;">"Outlook"</span>, <span class="st" style="color: #20794D;">"PlayTennis"</span>]).size().index</span></code></pre></div>
<div class="cell-output cell-output-display" data-execution_count="16">
<pre><code>MultiIndex([('Overcast', 'Yes'),
            (    'Rain',  'No'),
            (    'Rain', 'Yes'),
            (   'Sunny',  'No'),
            (   'Sunny', 'Yes')],
           names=['Outlook', 'PlayTennis'])</code></pre>
</div>
</div>
<div class="cell" data-execution_count="21">
<div class="sourceCode cell-code" id="cb26" style="background: #f1f3f5;"><pre class="sourceCode python code-with-copy"><code class="sourceCode python"><span id="cb26-1">df.groupby([<span class="st" style="color: #20794D;">"Outlook"</span>, <span class="st" style="color: #20794D;">"PlayTennis"</span>]).size().unstack()</span></code></pre></div>
<div class="cell-output cell-output-display" data-execution_count="21">

<div>

<table class="dataframe table table-sm table-striped">
  <thead>
    <tr>
      <th>PlayTennis</th>
      <th>No</th>
      <th>Yes</th>
    </tr>
    <tr>
      <th>Outlook</th>
      <th></th>
      <th></th>
    </tr>
  </thead>
  <tbody>
    <tr>
      <th>Overcast</th>
      <td>NaN</td>
      <td>4.0</td>
    </tr>
    <tr>
      <th>Rain</th>
      <td>2.0</td>
      <td>3.0</td>
    </tr>
    <tr>
      <th>Sunny</th>
      <td>3.0</td>
      <td>2.0</td>
    </tr>
  </tbody>
</table>
</div>
</div>
</div>
<div class="cell" data-execution_count="22">
<div class="sourceCode cell-code" id="cb27" style="background: #f1f3f5;"><pre class="sourceCode python code-with-copy"><code class="sourceCode python"><span id="cb27-1">df.groupby([<span class="st" style="color: #20794D;">"Outlook"</span>, <span class="st" style="color: #20794D;">"PlayTennis"</span>]).size().unstack(fill_value<span class="op" style="color: #5E5E5E;">=</span><span class="dv" style="color: #AD0000;">0</span>)</span></code></pre></div>
<div class="cell-output cell-output-display" data-execution_count="22">

<div>

<table class="dataframe table table-sm table-striped">
  <thead>
    <tr>
      <th>PlayTennis</th>
      <th>No</th>
      <th>Yes</th>
    </tr>
    <tr>
      <th>Outlook</th>
      <th></th>
      <th></th>
    </tr>
  </thead>
  <tbody>
    <tr>
      <th>Overcast</th>
      <td>0</td>
      <td>4</td>
    </tr>
    <tr>
      <th>Rain</th>
      <td>2</td>
      <td>3</td>
    </tr>
    <tr>
      <th>Sunny</th>
      <td>3</td>
      <td>2</td>
    </tr>
  </tbody>
</table>
</div>
</div>
</div>
</section>
<section id="using-pd.pivot_table" class="level3">
<h3 class="anchored" data-anchor-id="using-pd.pivot_table">Using pd.pivot_table</h3>
<div class="cell" data-execution_count="23">
<div class="sourceCode cell-code" id="cb28" style="background: #f1f3f5;"><pre class="sourceCode python code-with-copy"><code class="sourceCode python"><span id="cb28-1">pivot_table <span class="op" style="color: #5E5E5E;">=</span> df.pivot_table(index<span class="op" style="color: #5E5E5E;">=</span><span class="st" style="color: #20794D;">'Outlook'</span>, columns<span class="op" style="color: #5E5E5E;">=</span><span class="st" style="color: #20794D;">'PlayTennis'</span>, aggfunc<span class="op" style="color: #5E5E5E;">=</span><span class="st" style="color: #20794D;">'size'</span>, fill_value<span class="op" style="color: #5E5E5E;">=</span><span class="dv" style="color: #AD0000;">0</span>)</span>
<span id="cb28-2">pivot_table</span></code></pre></div>
<div class="cell-output cell-output-display" data-execution_count="23">

<div>

<table class="dataframe table table-sm table-striped">
  <thead>
    <tr>
      <th>PlayTennis</th>
      <th>No</th>
      <th>Yes</th>
    </tr>
    <tr>
      <th>Outlook</th>
      <th></th>
      <th></th>
    </tr>
  </thead>
  <tbody>
    <tr>
      <th>Overcast</th>
      <td>0</td>
      <td>4</td>
    </tr>
    <tr>
      <th>Rain</th>
      <td>2</td>
      <td>3</td>
    </tr>
    <tr>
      <th>Sunny</th>
      <td>3</td>
      <td>2</td>
    </tr>
  </tbody>
</table>
</div>
</div>
</div>
<div class="cell" data-execution_count="24">
<div class="sourceCode cell-code" id="cb29" style="background: #f1f3f5;"><pre class="sourceCode python code-with-copy"><code class="sourceCode python"><span id="cb29-1">df_out.plot(kind<span class="op" style="color: #5E5E5E;">=</span><span class="st" style="color: #20794D;">'bar'</span>, stacked<span class="op" style="color: #5E5E5E;">=</span><span class="va" style="color: #111111;">True</span>)</span></code></pre></div>
<div class="cell-output cell-output-display" data-execution_count="24">
<pre><code>&lt;AxesSubplot:xlabel='Outlook'&gt;</code></pre>
</div>
<div class="cell-output cell-output-display">
<p><img src="https://github.com/nipunbatra/ml2023/notebooks/posts/pivot-cross_files/figure-html/cell-21-output-2.png" class="img-fluid"></p>
</div>
</div>
<div class="cell" data-execution_count="25">
<div class="sourceCode cell-code" id="cb31" style="background: #f1f3f5;"><pre class="sourceCode python code-with-copy"><code class="sourceCode python"><span id="cb31-1">df_out.plot(kind<span class="op" style="color: #5E5E5E;">=</span><span class="st" style="color: #20794D;">'bar'</span>, stacked<span class="op" style="color: #5E5E5E;">=</span><span class="va" style="color: #111111;">False</span>)</span></code></pre></div>
<div class="cell-output cell-output-display" data-execution_count="25">
<pre><code>&lt;AxesSubplot:xlabel='Outlook'&gt;</code></pre>
</div>
<div class="cell-output cell-output-display">
<p><img src="https://github.com/nipunbatra/ml2023/notebooks/posts/pivot-cross_files/figure-html/cell-22-output-2.png" class="img-fluid"></p>
</div>
</div>


</section>

 ]]></description>
  <guid>https://github.com/nipunbatra/ml2023/notebooks/posts/pivot-cross.html</guid>
  <pubDate>Thu, 12 Jan 2023 00:00:00 GMT</pubDate>
</item>
<item>
  <title>Misc tips</title>
  <dc:creator>Nipun Batra</dc:creator>
  <link>https://github.com/nipunbatra/ml2023/notebooks/posts/split.html</link>
  <description><![CDATA[ 



<div class="cell" data-execution_count="1">
<div class="sourceCode cell-code" id="cb1" style="background: #f1f3f5;"><pre class="sourceCode python code-with-copy"><code class="sourceCode python"><span id="cb1-1"><span class="im" style="color: #00769E;">import</span> numpy <span class="im" style="color: #00769E;">as</span> np</span>
<span id="cb1-2"><span class="im" style="color: #00769E;">import</span> matplotlib.pyplot <span class="im" style="color: #00769E;">as</span> plt</span>
<span id="cb1-3"><span class="im" style="color: #00769E;">import</span> pandas <span class="im" style="color: #00769E;">as</span> pd</span>
<span id="cb1-4"></span>
<span id="cb1-5"><span class="op" style="color: #5E5E5E;">%</span>matplotlib inline</span>
<span id="cb1-6"><span class="op" style="color: #5E5E5E;">%</span>config InlineBackend.figure_format<span class="op" style="color: #5E5E5E;">=</span><span class="st" style="color: #20794D;">'retina'</span></span></code></pre></div>
</div>
<div class="cell" data-execution_count="4">
<div class="sourceCode cell-code" id="cb2" style="background: #f1f3f5;"><pre class="sourceCode python code-with-copy"><code class="sourceCode python"><span id="cb2-1"><span class="co" style="color: #5E5E5E;"># Create a dataset with 3 features and 1000 samples for a classification problem</span></span>
<span id="cb2-2"></span>
<span id="cb2-3">df <span class="op" style="color: #5E5E5E;">=</span> pd.DataFrame(np.random.randn(<span class="dv" style="color: #AD0000;">1000</span>, <span class="dv" style="color: #AD0000;">3</span>), columns<span class="op" style="color: #5E5E5E;">=</span>[<span class="st" style="color: #20794D;">'A'</span>, <span class="st" style="color: #20794D;">'B'</span>, <span class="st" style="color: #20794D;">'C'</span>])</span>
<span id="cb2-4">df[<span class="st" style="color: #20794D;">'D'</span>] <span class="op" style="color: #5E5E5E;">=</span> np.random.randint(<span class="dv" style="color: #AD0000;">0</span>, <span class="dv" style="color: #AD0000;">2</span>, <span class="dv" style="color: #AD0000;">1000</span>)</span>
<span id="cb2-5"></span>
<span id="cb2-6">df</span></code></pre></div>
<div class="cell-output cell-output-display" data-execution_count="4">

<div>

<table class="dataframe table table-sm table-striped">
  <thead>
    <tr>
      <th></th>
      <th>A</th>
      <th>B</th>
      <th>C</th>
      <th>D</th>
    </tr>
  </thead>
  <tbody>
    <tr>
      <th>0</th>
      <td>0.112981</td>
      <td>-0.033889</td>
      <td>0.348708</td>
      <td>1</td>
    </tr>
    <tr>
      <th>1</th>
      <td>1.821601</td>
      <td>1.267423</td>
      <td>0.274915</td>
      <td>1</td>
    </tr>
    <tr>
      <th>2</th>
      <td>0.148040</td>
      <td>-1.412712</td>
      <td>-0.271345</td>
      <td>1</td>
    </tr>
    <tr>
      <th>3</th>
      <td>0.004766</td>
      <td>-1.209944</td>
      <td>0.122512</td>
      <td>1</td>
    </tr>
    <tr>
      <th>4</th>
      <td>0.854442</td>
      <td>-0.559497</td>
      <td>-0.605376</td>
      <td>1</td>
    </tr>
    <tr>
      <th>...</th>
      <td>...</td>
      <td>...</td>
      <td>...</td>
      <td>...</td>
    </tr>
    <tr>
      <th>995</th>
      <td>0.161444</td>
      <td>-0.969567</td>
      <td>-2.079664</td>
      <td>0</td>
    </tr>
    <tr>
      <th>996</th>
      <td>1.615938</td>
      <td>0.219218</td>
      <td>-0.322223</td>
      <td>0</td>
    </tr>
    <tr>
      <th>997</th>
      <td>0.501970</td>
      <td>-0.874313</td>
      <td>1.571102</td>
      <td>1</td>
    </tr>
    <tr>
      <th>998</th>
      <td>0.386063</td>
      <td>-1.481215</td>
      <td>-1.974313</td>
      <td>1</td>
    </tr>
    <tr>
      <th>999</th>
      <td>0.468528</td>
      <td>1.060850</td>
      <td>0.612252</td>
      <td>1</td>
    </tr>
  </tbody>
</table>
<p>1000 rows × 4 columns</p>
</div>
</div>
</div>
<div class="cell" data-execution_count="5">
<div class="sourceCode cell-code" id="cb3" style="background: #f1f3f5;"><pre class="sourceCode python code-with-copy"><code class="sourceCode python"><span id="cb3-1">X, y <span class="op" style="color: #5E5E5E;">=</span> df[[<span class="st" style="color: #20794D;">'A'</span>, <span class="st" style="color: #20794D;">'B'</span>, <span class="st" style="color: #20794D;">'C'</span>]], df[<span class="st" style="color: #20794D;">'D'</span>]</span></code></pre></div>
</div>
<div class="cell" data-execution_count="6">
<div class="sourceCode cell-code" id="cb4" style="background: #f1f3f5;"><pre class="sourceCode python code-with-copy"><code class="sourceCode python"><span id="cb4-1">train_X, test_X <span class="op" style="color: #5E5E5E;">=</span> X[:<span class="dv" style="color: #AD0000;">800</span>], X[<span class="dv" style="color: #AD0000;">800</span>:]</span>
<span id="cb4-2">train_y, test_y <span class="op" style="color: #5E5E5E;">=</span> y[:<span class="dv" style="color: #AD0000;">800</span>], y[<span class="dv" style="color: #AD0000;">800</span>:]</span></code></pre></div>
</div>
<div class="cell" data-execution_count="12">
<div class="sourceCode cell-code" id="cb5" style="background: #f1f3f5;"><pre class="sourceCode python code-with-copy"><code class="sourceCode python"><span id="cb5-1"><span class="im" style="color: #00769E;">from</span> sklearn.tree <span class="im" style="color: #00769E;">import</span> DecisionTreeClassifier</span></code></pre></div>
</div>
<div class="cell" data-execution_count="15">
<div class="sourceCode cell-code" id="cb6" style="background: #f1f3f5;"><pre class="sourceCode python code-with-copy"><code class="sourceCode python"><span id="cb6-1">dt <span class="op" style="color: #5E5E5E;">=</span> DecisionTreeClassifier(max_depth<span class="op" style="color: #5E5E5E;">=</span><span class="dv" style="color: #AD0000;">2</span>)</span>
<span id="cb6-2">dt.fit(train_X, train_y)</span></code></pre></div>
<div class="cell-output cell-output-display" data-execution_count="15">
<style>#sk-container-id-2 {color: black;background-color: white;}#sk-container-id-2 pre{padding: 0;}#sk-container-id-2 div.sk-toggleable {background-color: white;}#sk-container-id-2 label.sk-toggleable__label {cursor: pointer;display: block;width: 100%;margin-bottom: 0;padding: 0.3em;box-sizing: border-box;text-align: center;}#sk-container-id-2 label.sk-toggleable__label-arrow:before {content: "▸";float: left;margin-right: 0.25em;color: #696969;}#sk-container-id-2 label.sk-toggleable__label-arrow:hover:before {color: black;}#sk-container-id-2 div.sk-estimator:hover label.sk-toggleable__label-arrow:before {color: black;}#sk-container-id-2 div.sk-toggleable__content {max-height: 0;max-width: 0;overflow: hidden;text-align: left;background-color: #f0f8ff;}#sk-container-id-2 div.sk-toggleable__content pre {margin: 0.2em;color: black;border-radius: 0.25em;background-color: #f0f8ff;}#sk-container-id-2 input.sk-toggleable__control:checked~div.sk-toggleable__content {max-height: 200px;max-width: 100%;overflow: auto;}#sk-container-id-2 input.sk-toggleable__control:checked~label.sk-toggleable__label-arrow:before {content: "▾";}#sk-container-id-2 div.sk-estimator input.sk-toggleable__control:checked~label.sk-toggleable__label {background-color: #d4ebff;}#sk-container-id-2 div.sk-label input.sk-toggleable__control:checked~label.sk-toggleable__label {background-color: #d4ebff;}#sk-container-id-2 input.sk-hidden--visually {border: 0;clip: rect(1px 1px 1px 1px);clip: rect(1px, 1px, 1px, 1px);height: 1px;margin: -1px;overflow: hidden;padding: 0;position: absolute;width: 1px;}#sk-container-id-2 div.sk-estimator {font-family: monospace;background-color: #f0f8ff;border: 1px dotted black;border-radius: 0.25em;box-sizing: border-box;margin-bottom: 0.5em;}#sk-container-id-2 div.sk-estimator:hover {background-color: #d4ebff;}#sk-container-id-2 div.sk-parallel-item::after {content: "";width: 100%;border-bottom: 1px solid gray;flex-grow: 1;}#sk-container-id-2 div.sk-label:hover label.sk-toggleable__label {background-color: #d4ebff;}#sk-container-id-2 div.sk-serial::before {content: "";position: absolute;border-left: 1px solid gray;box-sizing: border-box;top: 0;bottom: 0;left: 50%;z-index: 0;}#sk-container-id-2 div.sk-serial {display: flex;flex-direction: column;align-items: center;background-color: white;padding-right: 0.2em;padding-left: 0.2em;position: relative;}#sk-container-id-2 div.sk-item {position: relative;z-index: 1;}#sk-container-id-2 div.sk-parallel {display: flex;align-items: stretch;justify-content: center;background-color: white;position: relative;}#sk-container-id-2 div.sk-item::before, #sk-container-id-2 div.sk-parallel-item::before {content: "";position: absolute;border-left: 1px solid gray;box-sizing: border-box;top: 0;bottom: 0;left: 50%;z-index: -1;}#sk-container-id-2 div.sk-parallel-item {display: flex;flex-direction: column;z-index: 1;position: relative;background-color: white;}#sk-container-id-2 div.sk-parallel-item:first-child::after {align-self: flex-end;width: 50%;}#sk-container-id-2 div.sk-parallel-item:last-child::after {align-self: flex-start;width: 50%;}#sk-container-id-2 div.sk-parallel-item:only-child::after {width: 0;}#sk-container-id-2 div.sk-dashed-wrapped {border: 1px dashed gray;margin: 0 0.4em 0.5em 0.4em;box-sizing: border-box;padding-bottom: 0.4em;background-color: white;}#sk-container-id-2 div.sk-label label {font-family: monospace;font-weight: bold;display: inline-block;line-height: 1.2em;}#sk-container-id-2 div.sk-label-container {text-align: center;}#sk-container-id-2 div.sk-container {/* jupyter's `normalize.less` sets `[hidden] { display: none; }` but bootstrap.min.css set `[hidden] { display: none !important; }` so we also need the `!important` here to be able to override the default hidden behavior on the sphinx rendered scikit-learn.org. See: https://github.com/scikit-learn/scikit-learn/issues/21755 */display: inline-block !important;position: relative;}#sk-container-id-2 div.sk-text-repr-fallback {display: none;}</style><div id="sk-container-id-2" class="sk-top-container"><div class="sk-text-repr-fallback"><pre>DecisionTreeClassifier(max_depth=2)</pre><b>In a Jupyter environment, please rerun this cell to show the HTML representation or trust the notebook. <br>On GitHub, the HTML representation is unable to render, please try loading this page with nbviewer.org.</b></div><div class="sk-container" hidden=""><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="sk-estimator-id-2" type="checkbox" checked=""><label for="sk-estimator-id-2" class="sk-toggleable__label sk-toggleable__label-arrow">DecisionTreeClassifier</label><div class="sk-toggleable__content"><pre>DecisionTreeClassifier(max_depth=2)</pre></div></div></div></div></div>
</div>
</div>
<div class="cell" data-execution_count="16">
<div class="sourceCode cell-code" id="cb7" style="background: #f1f3f5;"><pre class="sourceCode python code-with-copy"><code class="sourceCode python"><span id="cb7-1"><span class="im" style="color: #00769E;">from</span> sklearn <span class="im" style="color: #00769E;">import</span> tree</span>
<span id="cb7-2">tree.plot_tree(dt)</span></code></pre></div>
<div class="cell-output cell-output-display" data-execution_count="16">
<pre><code>[Text(0.5, 0.8333333333333334, 'X[0] &lt;= -0.17\ngini = 0.5\nsamples = 800\nvalue = [400, 400]'),
 Text(0.25, 0.5, 'X[0] &lt;= -0.307\ngini = 0.495\nsamples = 348\nvalue = [157, 191]'),
 Text(0.125, 0.16666666666666666, 'gini = 0.499\nsamples = 316\nvalue = [153, 163]'),
 Text(0.375, 0.16666666666666666, 'gini = 0.219\nsamples = 32\nvalue = [4, 28]'),
 Text(0.75, 0.5, 'X[2] &lt;= 1.656\ngini = 0.497\nsamples = 452\nvalue = [243, 209]'),
 Text(0.625, 0.16666666666666666, 'gini = 0.495\nsamples = 434\nvalue = [239, 195]'),
 Text(0.875, 0.16666666666666666, 'gini = 0.346\nsamples = 18\nvalue = [4, 14]')]</code></pre>
</div>
<div class="cell-output cell-output-display">
<p><img src="https://github.com/nipunbatra/ml2023/notebooks/posts/split_files/figure-html/cell-8-output-2.png" class="img-fluid"></p>
</div>
</div>
<div class="cell" data-execution_count="20">
<div class="sourceCode cell-code" id="cb9" style="background: #f1f3f5;"><pre class="sourceCode python code-with-copy"><code class="sourceCode python"><span id="cb9-1">y_hat <span class="op" style="color: #5E5E5E;">=</span> dt.predict(test_X)</span>
<span id="cb9-2">pd.DataFrame({<span class="st" style="color: #20794D;">"y_true"</span>: test_y, <span class="st" style="color: #20794D;">"y_hat"</span>: y_hat})</span></code></pre></div>
<div class="cell-output cell-output-display" data-execution_count="20">

<div>

<table class="dataframe table table-sm table-striped">
  <thead>
    <tr>
      <th></th>
      <th>y_true</th>
      <th>y_hat</th>
    </tr>
  </thead>
  <tbody>
    <tr>
      <th>800</th>
      <td>0</td>
      <td>1</td>
    </tr>
    <tr>
      <th>801</th>
      <td>0</td>
      <td>0</td>
    </tr>
    <tr>
      <th>802</th>
      <td>1</td>
      <td>1</td>
    </tr>
    <tr>
      <th>803</th>
      <td>1</td>
      <td>1</td>
    </tr>
    <tr>
      <th>804</th>
      <td>0</td>
      <td>1</td>
    </tr>
    <tr>
      <th>...</th>
      <td>...</td>
      <td>...</td>
    </tr>
    <tr>
      <th>995</th>
      <td>0</td>
      <td>1</td>
    </tr>
    <tr>
      <th>996</th>
      <td>0</td>
      <td>0</td>
    </tr>
    <tr>
      <th>997</th>
      <td>1</td>
      <td>0</td>
    </tr>
    <tr>
      <th>998</th>
      <td>1</td>
      <td>1</td>
    </tr>
    <tr>
      <th>999</th>
      <td>1</td>
      <td>1</td>
    </tr>
  </tbody>
</table>
<p>200 rows × 2 columns</p>
</div>
</div>
</div>
<div class="cell" data-execution_count="17">
<div class="sourceCode cell-code" id="cb10" style="background: #f1f3f5;"><pre class="sourceCode python code-with-copy"><code class="sourceCode python"><span id="cb10-1"><span class="im" style="color: #00769E;">from</span> sklearn.tree <span class="im" style="color: #00769E;">import</span> DecisionTreeClassifier</span>
<span id="cb10-2"></span>
<span id="cb10-3">train_scores <span class="op" style="color: #5E5E5E;">=</span> {}</span>
<span id="cb10-4">test_scores <span class="op" style="color: #5E5E5E;">=</span> {}</span>
<span id="cb10-5"></span>
<span id="cb10-6"><span class="cf" style="color: #003B4F;">for</span> i <span class="kw" style="color: #003B4F;">in</span> <span class="bu" style="color: null;">range</span>(<span class="dv" style="color: #AD0000;">1</span>, <span class="dv" style="color: #AD0000;">20</span>):</span>
<span id="cb10-7">    dt <span class="op" style="color: #5E5E5E;">=</span> DecisionTreeClassifier(max_depth<span class="op" style="color: #5E5E5E;">=</span>i)</span>
<span id="cb10-8">    dt.fit(train_X, train_y)</span>
<span id="cb10-9">    train_scores[i] <span class="op" style="color: #5E5E5E;">=</span> dt.score(train_X, train_y)</span>
<span id="cb10-10">    </span>
<span id="cb10-11">    test_scores[i] <span class="op" style="color: #5E5E5E;">=</span> dt.score(test_X, test_y)</span></code></pre></div>
</div>
<div class="cell" data-execution_count="18">
<div class="sourceCode cell-code" id="cb11" style="background: #f1f3f5;"><pre class="sourceCode python code-with-copy"><code class="sourceCode python"><span id="cb11-1">scores_df <span class="op" style="color: #5E5E5E;">=</span> pd.DataFrame({<span class="st" style="color: #20794D;">'train'</span>: train_scores, <span class="st" style="color: #20794D;">'test'</span>: test_scores})</span>
<span id="cb11-2">scores_df.plot()</span></code></pre></div>
<div class="cell-output cell-output-display" data-execution_count="18">
<pre><code>&lt;AxesSubplot:&gt;</code></pre>
</div>
<div class="cell-output cell-output-display">
<p><img src="https://github.com/nipunbatra/ml2023/notebooks/posts/split_files/figure-html/cell-11-output-2.png" class="img-fluid"></p>
</div>
</div>
<div class="cell" data-execution_count="2">
<div class="sourceCode cell-code" id="cb13" style="background: #f1f3f5;"><pre class="sourceCode python code-with-copy"><code class="sourceCode python"><span id="cb13-1"></span>
<span id="cb13-2">df <span class="op" style="color: #5E5E5E;">=</span> pd.DataFrame(np.random.randn(<span class="dv" style="color: #AD0000;">50</span>, <span class="dv" style="color: #AD0000;">3</span>), columns<span class="op" style="color: #5E5E5E;">=</span>[<span class="st" style="color: #20794D;">'A'</span>, <span class="st" style="color: #20794D;">'B'</span>, <span class="st" style="color: #20794D;">'C'</span>])</span></code></pre></div>
</div>
<div class="cell" data-execution_count="3">
<div class="sourceCode cell-code" id="cb14" style="background: #f1f3f5;"><pre class="sourceCode python code-with-copy"><code class="sourceCode python"><span id="cb14-1">df</span></code></pre></div>
<div class="cell-output cell-output-display" data-execution_count="3">

<div>

<table class="dataframe table table-sm table-striped">
  <thead>
    <tr>
      <th></th>
      <th>A</th>
      <th>B</th>
      <th>C</th>
    </tr>
  </thead>
  <tbody>
    <tr>
      <th>0</th>
      <td>-0.606795</td>
      <td>0.603885</td>
      <td>-0.665010</td>
    </tr>
    <tr>
      <th>1</th>
      <td>0.590053</td>
      <td>0.412133</td>
      <td>-0.866187</td>
    </tr>
    <tr>
      <th>2</th>
      <td>-0.537821</td>
      <td>0.563512</td>
      <td>-0.496078</td>
    </tr>
    <tr>
      <th>3</th>
      <td>0.968567</td>
      <td>-0.664447</td>
      <td>0.511859</td>
    </tr>
    <tr>
      <th>4</th>
      <td>0.071371</td>
      <td>-1.117417</td>
      <td>-0.187521</td>
    </tr>
    <tr>
      <th>5</th>
      <td>1.022793</td>
      <td>0.623958</td>
      <td>0.938148</td>
    </tr>
    <tr>
      <th>6</th>
      <td>1.472920</td>
      <td>-0.118809</td>
      <td>0.983386</td>
    </tr>
    <tr>
      <th>7</th>
      <td>-1.376462</td>
      <td>-0.206712</td>
      <td>1.108670</td>
    </tr>
    <tr>
      <th>8</th>
      <td>0.840399</td>
      <td>1.171411</td>
      <td>0.410430</td>
    </tr>
    <tr>
      <th>9</th>
      <td>-0.299937</td>
      <td>-0.882552</td>
      <td>-0.860850</td>
    </tr>
    <tr>
      <th>10</th>
      <td>2.544334</td>
      <td>-0.301064</td>
      <td>0.115521</td>
    </tr>
    <tr>
      <th>11</th>
      <td>-2.316799</td>
      <td>-0.630088</td>
      <td>0.572983</td>
    </tr>
    <tr>
      <th>12</th>
      <td>0.025732</td>
      <td>-0.759950</td>
      <td>0.632044</td>
    </tr>
    <tr>
      <th>13</th>
      <td>-0.326920</td>
      <td>0.275182</td>
      <td>-0.554632</td>
    </tr>
    <tr>
      <th>14</th>
      <td>-1.165008</td>
      <td>-0.226062</td>
      <td>0.600481</td>
    </tr>
    <tr>
      <th>15</th>
      <td>0.002296</td>
      <td>1.438975</td>
      <td>-0.744245</td>
    </tr>
    <tr>
      <th>16</th>
      <td>-0.692646</td>
      <td>-0.669372</td>
      <td>-0.605073</td>
    </tr>
    <tr>
      <th>17</th>
      <td>-1.321740</td>
      <td>-0.444826</td>
      <td>-1.467668</td>
    </tr>
    <tr>
      <th>18</th>
      <td>2.250800</td>
      <td>0.726728</td>
      <td>-1.210004</td>
    </tr>
    <tr>
      <th>19</th>
      <td>0.650150</td>
      <td>2.088973</td>
      <td>-0.132469</td>
    </tr>
    <tr>
      <th>20</th>
      <td>0.871767</td>
      <td>1.061867</td>
      <td>0.893009</td>
    </tr>
    <tr>
      <th>21</th>
      <td>-1.111509</td>
      <td>0.943877</td>
      <td>0.107494</td>
    </tr>
    <tr>
      <th>22</th>
      <td>-1.307825</td>
      <td>-1.154533</td>
      <td>0.769019</td>
    </tr>
    <tr>
      <th>23</th>
      <td>0.662569</td>
      <td>1.301350</td>
      <td>2.730599</td>
    </tr>
    <tr>
      <th>24</th>
      <td>0.056357</td>
      <td>1.093952</td>
      <td>-2.472302</td>
    </tr>
    <tr>
      <th>25</th>
      <td>-0.510605</td>
      <td>2.275169</td>
      <td>0.790699</td>
    </tr>
    <tr>
      <th>26</th>
      <td>-0.665979</td>
      <td>0.263746</td>
      <td>0.427778</td>
    </tr>
    <tr>
      <th>27</th>
      <td>-0.229247</td>
      <td>-0.302009</td>
      <td>0.838662</td>
    </tr>
    <tr>
      <th>28</th>
      <td>-0.397009</td>
      <td>-0.384748</td>
      <td>1.110741</td>
    </tr>
    <tr>
      <th>29</th>
      <td>0.867817</td>
      <td>-0.061789</td>
      <td>0.698880</td>
    </tr>
    <tr>
      <th>30</th>
      <td>1.755470</td>
      <td>-0.924920</td>
      <td>1.280419</td>
    </tr>
    <tr>
      <th>31</th>
      <td>-1.404238</td>
      <td>-0.000453</td>
      <td>0.563271</td>
    </tr>
    <tr>
      <th>32</th>
      <td>0.982608</td>
      <td>-0.198800</td>
      <td>0.178124</td>
    </tr>
    <tr>
      <th>33</th>
      <td>0.859206</td>
      <td>0.689893</td>
      <td>-0.131601</td>
    </tr>
    <tr>
      <th>34</th>
      <td>0.987187</td>
      <td>-0.739007</td>
      <td>-1.186841</td>
    </tr>
    <tr>
      <th>35</th>
      <td>-0.535150</td>
      <td>-0.324964</td>
      <td>-0.457249</td>
    </tr>
    <tr>
      <th>36</th>
      <td>-1.315508</td>
      <td>-0.457650</td>
      <td>0.477115</td>
    </tr>
    <tr>
      <th>37</th>
      <td>-1.009071</td>
      <td>0.438258</td>
      <td>0.550145</td>
    </tr>
    <tr>
      <th>38</th>
      <td>1.682689</td>
      <td>0.918549</td>
      <td>1.608067</td>
    </tr>
    <tr>
      <th>39</th>
      <td>-0.395561</td>
      <td>0.273146</td>
      <td>-1.344895</td>
    </tr>
    <tr>
      <th>40</th>
      <td>1.066968</td>
      <td>1.422297</td>
      <td>-1.006022</td>
    </tr>
    <tr>
      <th>41</th>
      <td>-0.467694</td>
      <td>-1.390412</td>
      <td>-0.856720</td>
    </tr>
    <tr>
      <th>42</th>
      <td>0.295047</td>
      <td>2.054184</td>
      <td>0.726142</td>
    </tr>
    <tr>
      <th>43</th>
      <td>1.683840</td>
      <td>-2.310817</td>
      <td>-1.063813</td>
    </tr>
    <tr>
      <th>44</th>
      <td>0.749187</td>
      <td>0.717967</td>
      <td>1.761293</td>
    </tr>
    <tr>
      <th>45</th>
      <td>1.726590</td>
      <td>-0.943809</td>
      <td>0.987574</td>
    </tr>
    <tr>
      <th>46</th>
      <td>1.810616</td>
      <td>-0.665637</td>
      <td>-1.755620</td>
    </tr>
    <tr>
      <th>47</th>
      <td>-0.476114</td>
      <td>-1.251142</td>
      <td>-1.128895</td>
    </tr>
    <tr>
      <th>48</th>
      <td>-0.977472</td>
      <td>0.182898</td>
      <td>-1.632349</td>
    </tr>
    <tr>
      <th>49</th>
      <td>0.476070</td>
      <td>-1.063004</td>
      <td>0.593864</td>
    </tr>
  </tbody>
</table>
</div>
</div>
</div>
<div class="cell" data-execution_count="14">
<div class="sourceCode cell-code" id="cb15" style="background: #f1f3f5;"><pre class="sourceCode python code-with-copy"><code class="sourceCode python"><span id="cb15-1">n <span class="op" style="color: #5E5E5E;">=</span> <span class="dv" style="color: #AD0000;">100</span></span>
<span id="cb15-2">k <span class="op" style="color: #5E5E5E;">=</span> <span class="dv" style="color: #AD0000;">20</span></span>
<span id="cb15-3">m <span class="op" style="color: #5E5E5E;">=</span> <span class="dv" style="color: #AD0000;">50</span></span>
<span id="cb15-4"></span>
<span id="cb15-5">np.random.seed(<span class="dv" style="color: #AD0000;">0</span>)</span>
<span id="cb15-6">a <span class="op" style="color: #5E5E5E;">=</span> np.random.randn(n, k)</span>
<span id="cb15-7">b <span class="op" style="color: #5E5E5E;">=</span> np.random.randn(k, m)</span>
<span id="cb15-8">a.shape, b.shape</span></code></pre></div>
<div class="cell-output cell-output-display" data-execution_count="14">
<pre><code>((100, 20), (20, 50))</code></pre>
</div>
</div>
<div class="cell" data-execution_count="18">
<div class="sourceCode cell-code" id="cb17" style="background: #f1f3f5;"><pre class="sourceCode python code-with-copy"><code class="sourceCode python"><span id="cb17-1">a_list_of_list <span class="op" style="color: #5E5E5E;">=</span> a.tolist()</span>
<span id="cb17-2">a_list_of_list[<span class="dv" style="color: #AD0000;">0</span>]</span></code></pre></div>
<div class="cell-output cell-output-display" data-execution_count="18">
<pre><code>list</code></pre>
</div>
</div>
<div class="cell" data-execution_count="28">
<div class="sourceCode cell-code" id="cb19" style="background: #f1f3f5;"><pre class="sourceCode python code-with-copy"><code class="sourceCode python"><span id="cb19-1"><span class="co" style="color: #5E5E5E;">"list"</span> <span class="kw" style="color: #003B4F;">in</span> <span class="bu" style="color: null;">dir</span>(a)[:]</span></code></pre></div>
<div class="cell-output cell-output-display" data-execution_count="28">
<pre><code>False</code></pre>
</div>
</div>
<div class="cell" data-execution_count="38">
<div class="sourceCode cell-code" id="cb21" style="background: #f1f3f5;"><pre class="sourceCode python code-with-copy"><code class="sourceCode python"><span id="cb21-1"><span class="im" style="color: #00769E;">import</span> rich</span>
<span id="cb21-2">rich.inspect(a.tolist, methods<span class="op" style="color: #5E5E5E;">=</span><span class="va" style="color: #111111;">True</span>, <span class="bu" style="color: null;">all</span><span class="op" style="color: #5E5E5E;">=</span><span class="va" style="color: #111111;">True</span>)</span></code></pre></div>
<div class="cell-output cell-output-display">
<pre style="white-space:pre;overflow-x:auto;line-height:normal;font-family:Menlo,'DejaVu Sans Mono',consolas,'Courier New',monospace"><span style="color: #000080; text-decoration-color: #000080">╭──────────────────────── </span><span style="color: #000080; text-decoration-color: #000080; font-weight: bold">&lt;</span><span style="color: #ff00ff; text-decoration-color: #ff00ff; font-weight: bold">built-in</span><span style="color: #000000; text-decoration-color: #000000"> method tolist of numpy.ndarray object at </span><span style="color: #008080; text-decoration-color: #008080; font-weight: bold">0x164cbb8d0</span><span style="color: #000080; text-decoration-color: #000080; font-weight: bold">&gt;</span><span style="color: #000080; text-decoration-color: #000080"> ────────────────────────╮</span>
<span style="color: #000080; text-decoration-color: #000080">│</span> <span style="color: #00ffff; text-decoration-color: #00ffff; font-style: italic">def </span><span style="color: #800000; text-decoration-color: #800000; font-weight: bold">ndarray.tolist</span><span style="font-weight: bold">(</span><span style="color: #808000; text-decoration-color: #808000">...</span><span style="font-weight: bold">)</span>                                                                                         <span style="color: #000080; text-decoration-color: #000080">│</span>
<span style="color: #000080; text-decoration-color: #000080">│</span>                                                                                                                 <span style="color: #000080; text-decoration-color: #000080">│</span>
<span style="color: #000080; text-decoration-color: #000080">│</span> <span style="color: #800080; text-decoration-color: #800080; font-weight: bold">a.tolist</span><span style="color: #008080; text-decoration-color: #008080; font-weight: bold">()</span>                                                                                                      <span style="color: #000080; text-decoration-color: #000080">│</span>
<span style="color: #000080; text-decoration-color: #000080">│</span>                                                                                                                 <span style="color: #000080; text-decoration-color: #000080">│</span>
<span style="color: #000080; text-decoration-color: #000080">│</span>            <span style="color: #bfbf7f; text-decoration-color: #bfbf7f; font-style: italic">__doc__</span> = <span style="color: #008000; text-decoration-color: #008000">"a.tolist()\n\n    Return the array as an ``a.ndim``-levels deep nested list of Python </span>    <span style="color: #000080; text-decoration-color: #000080">│</span>
<span style="color: #000080; text-decoration-color: #000080">│</span>                      <span style="color: #008000; text-decoration-color: #008000">scalars.\n\n    Return a copy of the array data as a (nested) Python list.\n    Data items</span> <span style="color: #000080; text-decoration-color: #000080">│</span>
<span style="color: #000080; text-decoration-color: #000080">│</span>                      <span style="color: #008000; text-decoration-color: #008000">are converted to the nearest compatible builtin Python type, via\n    the </span>                 <span style="color: #000080; text-decoration-color: #000080">│</span>
<span style="color: #000080; text-decoration-color: #000080">│</span>                      <span style="color: #008000; text-decoration-color: #008000">`~numpy.ndarray.item` function.\n\n    If ``a.ndim`` is 0, then since the depth of the </span>    <span style="color: #000080; text-decoration-color: #000080">│</span>
<span style="color: #000080; text-decoration-color: #000080">│</span>                      <span style="color: #008000; text-decoration-color: #008000">nested list is 0, it will\n    not be a list at all, but a simple Python scalar.\n\n    </span>   <span style="color: #000080; text-decoration-color: #000080">│</span>
<span style="color: #000080; text-decoration-color: #000080">│</span>                      <span style="color: #008000; text-decoration-color: #008000">Parameters\n    ----------\n    none\n\n    Returns\n    -------\n    y : object, or list </span> <span style="color: #000080; text-decoration-color: #000080">│</span>
<span style="color: #000080; text-decoration-color: #000080">│</span>                      <span style="color: #008000; text-decoration-color: #008000">of object, or list of list of object, or ...\n        The possibly nested list of array </span>   <span style="color: #000080; text-decoration-color: #000080">│</span>
<span style="color: #000080; text-decoration-color: #000080">│</span>                      <span style="color: #008000; text-decoration-color: #008000">elements.\n\n    Notes\n    -----\n    The array may be recreated via ``a = </span>               <span style="color: #000080; text-decoration-color: #000080">│</span>
<span style="color: #000080; text-decoration-color: #000080">│</span>                      <span style="color: #008000; text-decoration-color: #008000">np.array(a.tolist())``, although this\n    may sometimes lose precision.\n\n    Examples\n</span> <span style="color: #000080; text-decoration-color: #000080">│</span>
<span style="color: #000080; text-decoration-color: #000080">│</span>                      <span style="color: #008000; text-decoration-color: #008000">--------\n    For a 1D array, ``a.tolist()`` is almost the same as ``list(a)``,\n    </span>      <span style="color: #000080; text-decoration-color: #000080">│</span>
<span style="color: #000080; text-decoration-color: #000080">│</span>                      <span style="color: #008000; text-decoration-color: #008000">except that ``tolist`` changes numpy scalars to Python scalars:\n\n    &gt;&gt;&gt; a = </span>            <span style="color: #000080; text-decoration-color: #000080">│</span>
<span style="color: #000080; text-decoration-color: #000080">│</span>                      <span style="color: #008000; text-decoration-color: #008000">np.uint32([1, 2])\n    &gt;&gt;&gt; a_list = list(a)\n    &gt;&gt;&gt; a_list\n    [1, 2]\n    &gt;&gt;&gt; </span>          <span style="color: #000080; text-decoration-color: #000080">│</span>
<span style="color: #000080; text-decoration-color: #000080">│</span>                      <span style="color: #008000; text-decoration-color: #008000">type(a_list[0])\n    &lt;class 'numpy.uint32'&gt;\n    &gt;&gt;&gt; a_tolist = a.tolist()\n    &gt;&gt;&gt; </span>       <span style="color: #000080; text-decoration-color: #000080">│</span>
<span style="color: #000080; text-decoration-color: #000080">│</span>                      <span style="color: #008000; text-decoration-color: #008000">a_tolist\n    [1, 2]\n    &gt;&gt;&gt; type(a_tolist[0])\n    &lt;class 'int'&gt;\n\n    Additionally, </span>   <span style="color: #000080; text-decoration-color: #000080">│</span>
<span style="color: #000080; text-decoration-color: #000080">│</span>                      <span style="color: #008000; text-decoration-color: #008000">for a 2D array, ``tolist`` applies recursively:\n\n    &gt;&gt;&gt; a = np.array([[1, 2], [3, </span>      <span style="color: #000080; text-decoration-color: #000080">│</span>
<span style="color: #000080; text-decoration-color: #000080">│</span>                      <span style="color: #008000; text-decoration-color: #008000">4]])\n    &gt;&gt;&gt; list(a)\n    [array([1, 2]), array([3, 4])]\n    &gt;&gt;&gt; a.tolist()\n    [[1, </span>   <span style="color: #000080; text-decoration-color: #000080">│</span>
<span style="color: #000080; text-decoration-color: #000080">│</span>                      <span style="color: #008000; text-decoration-color: #008000">2], [3, 4]]\n\n    The base case for this recursion is a 0D array:\n\n    &gt;&gt;&gt; a = </span>         <span style="color: #000080; text-decoration-color: #000080">│</span>
<span style="color: #000080; text-decoration-color: #000080">│</span>                      <span style="color: #008000; text-decoration-color: #008000">np.array(1)\n    &gt;&gt;&gt; list(a)\n    Traceback (most recent call last):\n      ...\n    </span>      <span style="color: #000080; text-decoration-color: #000080">│</span>
<span style="color: #000080; text-decoration-color: #000080">│</span>                      <span style="color: #008000; text-decoration-color: #008000">TypeError: iteration over a 0-d array\n    &gt;&gt;&gt; a.tolist()\n    1"</span>                          <span style="color: #000080; text-decoration-color: #000080">│</span>
<span style="color: #000080; text-decoration-color: #000080">│</span>         <span style="color: #bfbf7f; text-decoration-color: #bfbf7f; font-style: italic">__module__</span> = <span style="color: #800080; text-decoration-color: #800080; font-style: italic">None</span>                                                                                       <span style="color: #000080; text-decoration-color: #000080">│</span>
<span style="color: #000080; text-decoration-color: #000080">│</span>           <span style="color: #bfbf7f; text-decoration-color: #bfbf7f; font-style: italic">__name__</span> = <span style="color: #008000; text-decoration-color: #008000">'tolist'</span>                                                                                   <span style="color: #000080; text-decoration-color: #000080">│</span>
<span style="color: #000080; text-decoration-color: #000080">│</span>       <span style="color: #bfbf7f; text-decoration-color: #bfbf7f; font-style: italic">__qualname__</span> = <span style="color: #008000; text-decoration-color: #008000">'ndarray.tolist'</span>                                                                           <span style="color: #000080; text-decoration-color: #000080">│</span>
<span style="color: #000080; text-decoration-color: #000080">│</span>           <span style="color: #bfbf7f; text-decoration-color: #bfbf7f; font-style: italic">__self__</span> = <span style="color: #800080; text-decoration-color: #800080; font-weight: bold">array</span><span style="font-weight: bold">([[</span> <span style="color: #008080; text-decoration-color: #008080; font-weight: bold">1.76405235e+00</span>,  <span style="color: #008080; text-decoration-color: #008080; font-weight: bold">4.00157208e-01</span>,  <span style="color: #008080; text-decoration-color: #008080; font-weight: bold">9.78737984e-01</span>, <span style="color: #808000; text-decoration-color: #808000">...</span>,                            <span style="color: #000080; text-decoration-color: #000080">│</span>
<span style="color: #000080; text-decoration-color: #000080">│</span>                              <span style="color: #008080; text-decoration-color: #008080; font-weight: bold">-2.05158264e-01</span>,  <span style="color: #008080; text-decoration-color: #008080; font-weight: bold">3.13067702e-01</span>, <span style="color: #008080; text-decoration-color: #008080; font-weight: bold">-8.54095739e-01</span><span style="font-weight: bold">]</span>,                                <span style="color: #000080; text-decoration-color: #000080">│</span>
<span style="color: #000080; text-decoration-color: #000080">│</span>                             <span style="font-weight: bold">[</span><span style="color: #008080; text-decoration-color: #008080; font-weight: bold">-2.55298982e+00</span>,  <span style="color: #008080; text-decoration-color: #008080; font-weight: bold">6.53618595e-01</span>,  <span style="color: #008080; text-decoration-color: #008080; font-weight: bold">8.64436199e-01</span>, <span style="color: #808000; text-decoration-color: #808000">...</span>,                            <span style="color: #000080; text-decoration-color: #000080">│</span>
<span style="color: #000080; text-decoration-color: #000080">│</span>                               <span style="color: #008080; text-decoration-color: #008080; font-weight: bold">1.20237985e+00</span>, <span style="color: #008080; text-decoration-color: #008080; font-weight: bold">-3.87326817e-01</span>, <span style="color: #008080; text-decoration-color: #008080; font-weight: bold">-3.02302751e-01</span><span style="font-weight: bold">]</span>,                                <span style="color: #000080; text-decoration-color: #000080">│</span>
<span style="color: #000080; text-decoration-color: #000080">│</span>                             <span style="font-weight: bold">[</span><span style="color: #008080; text-decoration-color: #008080; font-weight: bold">-1.04855297e+00</span>, <span style="color: #008080; text-decoration-color: #008080; font-weight: bold">-1.42001794e+00</span>, <span style="color: #008080; text-decoration-color: #008080; font-weight: bold">-1.70627019e+00</span>, <span style="color: #808000; text-decoration-color: #808000">...</span>,                            <span style="color: #000080; text-decoration-color: #000080">│</span>
<span style="color: #000080; text-decoration-color: #000080">│</span>                               <span style="color: #008080; text-decoration-color: #008080; font-weight: bold">3.02471898e-01</span>, <span style="color: #008080; text-decoration-color: #008080; font-weight: bold">-6.34322094e-01</span>, <span style="color: #008080; text-decoration-color: #008080; font-weight: bold">-3.62741166e-01</span><span style="font-weight: bold">]</span>,                                <span style="color: #000080; text-decoration-color: #000080">│</span>
<span style="color: #000080; text-decoration-color: #000080">│</span>                             <span style="color: #808000; text-decoration-color: #808000">...</span>,                                                                                <span style="color: #000080; text-decoration-color: #000080">│</span>
<span style="color: #000080; text-decoration-color: #000080">│</span>                             <span style="font-weight: bold">[</span> <span style="color: #008080; text-decoration-color: #008080; font-weight: bold">8.73311836e-01</span>,  <span style="color: #008080; text-decoration-color: #008080; font-weight: bold">1.19973618e+00</span>,  <span style="color: #008080; text-decoration-color: #008080; font-weight: bold">4.56153036e-01</span>, <span style="color: #808000; text-decoration-color: #808000">...</span>,                            <span style="color: #000080; text-decoration-color: #000080">│</span>
<span style="color: #000080; text-decoration-color: #000080">│</span>                              <span style="color: #008080; text-decoration-color: #008080; font-weight: bold">-1.24021634e+00</span>,  <span style="color: #008080; text-decoration-color: #008080; font-weight: bold">9.00054243e-01</span>,  <span style="color: #008080; text-decoration-color: #008080; font-weight: bold">1.80224223e+00</span><span style="font-weight: bold">]</span>,                                <span style="color: #000080; text-decoration-color: #000080">│</span>
<span style="color: #000080; text-decoration-color: #000080">│</span>                             <span style="font-weight: bold">[</span><span style="color: #008080; text-decoration-color: #008080; font-weight: bold">-2.08285103e-01</span>,  <span style="color: #008080; text-decoration-color: #008080; font-weight: bold">1.57437124e+00</span>,  <span style="color: #008080; text-decoration-color: #008080; font-weight: bold">1.98989494e-01</span>, <span style="color: #808000; text-decoration-color: #808000">...</span>,                            <span style="color: #000080; text-decoration-color: #000080">│</span>
<span style="color: #000080; text-decoration-color: #000080">│</span>                               <span style="color: #008080; text-decoration-color: #008080; font-weight: bold">4.32837621e-01</span>, <span style="color: #008080; text-decoration-color: #008080; font-weight: bold">-8.08717532e-01</span>, <span style="color: #008080; text-decoration-color: #008080; font-weight: bold">-1.10412399e+00</span><span style="font-weight: bold">]</span>,                                <span style="color: #000080; text-decoration-color: #000080">│</span>
<span style="color: #000080; text-decoration-color: #000080">│</span>                             <span style="font-weight: bold">[</span><span style="color: #008080; text-decoration-color: #008080; font-weight: bold">-7.89102180e-01</span>,  <span style="color: #008080; text-decoration-color: #008080; font-weight: bold">1.24845579e-03</span>, <span style="color: #008080; text-decoration-color: #008080; font-weight: bold">-1.59939788e-01</span>, <span style="color: #808000; text-decoration-color: #808000">...</span>,                            <span style="color: #000080; text-decoration-color: #000080">│</span>
<span style="color: #000080; text-decoration-color: #000080">│</span>                               <span style="color: #008080; text-decoration-color: #008080; font-weight: bold">1.58433847e-01</span>, <span style="color: #008080; text-decoration-color: #008080; font-weight: bold">-1.14190142e+00</span>, <span style="color: #008080; text-decoration-color: #008080; font-weight: bold">-1.31097037e+00</span><span style="font-weight: bold">]])</span>                               <span style="color: #000080; text-decoration-color: #000080">│</span>
<span style="color: #000080; text-decoration-color: #000080">│</span> <span style="color: #bfbf7f; text-decoration-color: #bfbf7f; font-style: italic">__text_signature__</span> = <span style="color: #800080; text-decoration-color: #800080; font-style: italic">None</span>                                                                                       <span style="color: #000080; text-decoration-color: #000080">│</span>
<span style="color: #000080; text-decoration-color: #000080">│</span>           <span style="color: #bfbf7f; text-decoration-color: #bfbf7f; font-style: italic">__call__</span> = <span style="color: #00ffff; text-decoration-color: #00ffff; font-style: italic">def </span><span style="color: #800000; text-decoration-color: #800000; font-weight: bold">__call__</span><span style="font-weight: bold">(</span>*args, **kwargs<span style="font-weight: bold">)</span>: <span style="color: #7f7f7f; text-decoration-color: #7f7f7f">Call self as a function.</span>                                    <span style="color: #000080; text-decoration-color: #000080">│</span>
<span style="color: #000080; text-decoration-color: #000080">│</span>          <span style="color: #bfbf7f; text-decoration-color: #bfbf7f; font-style: italic">__class__</span> = <span style="color: #00ffff; text-decoration-color: #00ffff; font-style: italic">class </span><span style="color: #800000; text-decoration-color: #800000; font-weight: bold">__class__</span><span style="font-weight: bold">()</span>:                                                                         <span style="color: #000080; text-decoration-color: #000080">│</span>
<span style="color: #000080; text-decoration-color: #000080">│</span>        <span style="color: #bfbf7f; text-decoration-color: #bfbf7f; font-style: italic">__delattr__</span> = <span style="color: #00ffff; text-decoration-color: #00ffff; font-style: italic">def </span><span style="color: #800000; text-decoration-color: #800000; font-weight: bold">__delattr__</span><span style="font-weight: bold">(</span>name, <span style="color: #800080; text-decoration-color: #800080">/</span><span style="font-weight: bold">)</span>: <span style="color: #7f7f7f; text-decoration-color: #7f7f7f">Implement </span><span style="color: #bf7fbf; text-decoration-color: #bf7fbf; font-weight: bold">delattr</span><span style="color: #7f7f7f; text-decoration-color: #7f7f7f; font-weight: bold">(</span><span style="color: #7f7f7f; text-decoration-color: #7f7f7f">self, name</span><span style="color: #7f7f7f; text-decoration-color: #7f7f7f; font-weight: bold">)</span><span style="color: #7f7f7f; text-decoration-color: #7f7f7f">.</span>                                   <span style="color: #000080; text-decoration-color: #000080">│</span>
<span style="color: #000080; text-decoration-color: #000080">│</span>            <span style="color: #bfbf7f; text-decoration-color: #bfbf7f; font-style: italic">__dir__</span> = <span style="color: #00ffff; text-decoration-color: #00ffff; font-style: italic">def </span><span style="color: #800000; text-decoration-color: #800000; font-weight: bold">__dir__</span><span style="font-weight: bold">()</span>: <span style="color: #7f7f7f; text-decoration-color: #7f7f7f">Default </span><span style="color: #bf7fbf; text-decoration-color: #bf7fbf; font-weight: bold">dir</span><span style="color: #7f7f7f; text-decoration-color: #7f7f7f; font-weight: bold">()</span><span style="color: #7f7f7f; text-decoration-color: #7f7f7f"> implementation.</span>                                               <span style="color: #000080; text-decoration-color: #000080">│</span>
<span style="color: #000080; text-decoration-color: #000080">│</span>             <span style="color: #bfbf7f; text-decoration-color: #bfbf7f; font-style: italic">__eq__</span> = <span style="color: #00ffff; text-decoration-color: #00ffff; font-style: italic">def </span><span style="color: #800000; text-decoration-color: #800000; font-weight: bold">__eq__</span><span style="font-weight: bold">(</span>value, <span style="color: #800080; text-decoration-color: #800080">/</span><span style="font-weight: bold">)</span>: <span style="color: #7f7f7f; text-decoration-color: #7f7f7f">Return </span><span style="color: #bfbf7f; text-decoration-color: #bfbf7f">self</span><span style="color: #7f7f7f; text-decoration-color: #7f7f7f">==value.</span>                                                  <span style="color: #000080; text-decoration-color: #000080">│</span>
<span style="color: #000080; text-decoration-color: #000080">│</span>         <span style="color: #bfbf7f; text-decoration-color: #bfbf7f; font-style: italic">__format__</span> = <span style="color: #00ffff; text-decoration-color: #00ffff; font-style: italic">def </span><span style="color: #800000; text-decoration-color: #800000; font-weight: bold">__format__</span><span style="font-weight: bold">(</span>format_spec, <span style="color: #800080; text-decoration-color: #800080">/</span><span style="font-weight: bold">)</span>: <span style="color: #7f7f7f; text-decoration-color: #7f7f7f">Default object formatter.</span>                                  <span style="color: #000080; text-decoration-color: #000080">│</span>
<span style="color: #000080; text-decoration-color: #000080">│</span>             <span style="color: #bfbf7f; text-decoration-color: #bfbf7f; font-style: italic">__ge__</span> = <span style="color: #00ffff; text-decoration-color: #00ffff; font-style: italic">def </span><span style="color: #800000; text-decoration-color: #800000; font-weight: bold">__ge__</span><span style="font-weight: bold">(</span>value, <span style="color: #800080; text-decoration-color: #800080">/</span><span style="font-weight: bold">)</span>: <span style="color: #7f7f7f; text-decoration-color: #7f7f7f">Return self&gt;=value.</span>                                                  <span style="color: #000080; text-decoration-color: #000080">│</span>
<span style="color: #000080; text-decoration-color: #000080">│</span>   <span style="color: #bfbf7f; text-decoration-color: #bfbf7f; font-style: italic">__getattribute__</span> = <span style="color: #00ffff; text-decoration-color: #00ffff; font-style: italic">def </span><span style="color: #800000; text-decoration-color: #800000; font-weight: bold">__getattribute__</span><span style="font-weight: bold">(</span>name, <span style="color: #800080; text-decoration-color: #800080">/</span><span style="font-weight: bold">)</span>: <span style="color: #7f7f7f; text-decoration-color: #7f7f7f">Return </span><span style="color: #bf7fbf; text-decoration-color: #bf7fbf; font-weight: bold">getattr</span><span style="color: #7f7f7f; text-decoration-color: #7f7f7f; font-weight: bold">(</span><span style="color: #7f7f7f; text-decoration-color: #7f7f7f">self, name</span><span style="color: #7f7f7f; text-decoration-color: #7f7f7f; font-weight: bold">)</span><span style="color: #7f7f7f; text-decoration-color: #7f7f7f">.</span>                                 <span style="color: #000080; text-decoration-color: #000080">│</span>
<span style="color: #000080; text-decoration-color: #000080">│</span>             <span style="color: #bfbf7f; text-decoration-color: #bfbf7f; font-style: italic">__gt__</span> = <span style="color: #00ffff; text-decoration-color: #00ffff; font-style: italic">def </span><span style="color: #800000; text-decoration-color: #800000; font-weight: bold">__gt__</span><span style="font-weight: bold">(</span>value, <span style="color: #800080; text-decoration-color: #800080">/</span><span style="font-weight: bold">)</span>: <span style="color: #7f7f7f; text-decoration-color: #7f7f7f">Return self&gt;value.</span>                                                   <span style="color: #000080; text-decoration-color: #000080">│</span>
<span style="color: #000080; text-decoration-color: #000080">│</span>           <span style="color: #bfbf7f; text-decoration-color: #bfbf7f; font-style: italic">__hash__</span> = <span style="color: #00ffff; text-decoration-color: #00ffff; font-style: italic">def </span><span style="color: #800000; text-decoration-color: #800000; font-weight: bold">__hash__</span><span style="font-weight: bold">()</span>: <span style="color: #7f7f7f; text-decoration-color: #7f7f7f">Return </span><span style="color: #bf7fbf; text-decoration-color: #bf7fbf; font-weight: bold">hash</span><span style="color: #7f7f7f; text-decoration-color: #7f7f7f; font-weight: bold">(</span><span style="color: #7f7f7f; text-decoration-color: #7f7f7f">self</span><span style="color: #7f7f7f; text-decoration-color: #7f7f7f; font-weight: bold">)</span><span style="color: #7f7f7f; text-decoration-color: #7f7f7f">.</span>                                                         <span style="color: #000080; text-decoration-color: #000080">│</span>
<span style="color: #000080; text-decoration-color: #000080">│</span>           <span style="color: #bfbf7f; text-decoration-color: #bfbf7f; font-style: italic">__init__</span> = <span style="color: #00ffff; text-decoration-color: #00ffff; font-style: italic">def </span><span style="color: #800000; text-decoration-color: #800000; font-weight: bold">__init__</span><span style="font-weight: bold">(</span>*args, **kwargs<span style="font-weight: bold">)</span>: <span style="color: #7f7f7f; text-decoration-color: #7f7f7f">Initialize self.  See </span><span style="color: #bf7fbf; text-decoration-color: #bf7fbf; font-weight: bold">help</span><span style="color: #7f7f7f; text-decoration-color: #7f7f7f; font-weight: bold">(</span><span style="color: #bf7fbf; text-decoration-color: #bf7fbf; font-weight: bold">type</span><span style="color: #7f7f7f; text-decoration-color: #7f7f7f; font-weight: bold">(</span><span style="color: #7f7f7f; text-decoration-color: #7f7f7f">self</span><span style="color: #7f7f7f; text-decoration-color: #7f7f7f; font-weight: bold">))</span><span style="color: #7f7f7f; text-decoration-color: #7f7f7f"> for accurate </span>        <span style="color: #000080; text-decoration-color: #000080">│</span>
<span style="color: #000080; text-decoration-color: #000080">│</span>                      <span style="color: #7f7f7f; text-decoration-color: #7f7f7f">signature.</span>                                                                                 <span style="color: #000080; text-decoration-color: #000080">│</span>
<span style="color: #000080; text-decoration-color: #000080">│</span>  <span style="color: #bfbf7f; text-decoration-color: #bfbf7f; font-style: italic">__init_subclass__</span> = <span style="color: #00ffff; text-decoration-color: #00ffff; font-style: italic">def </span><span style="color: #800000; text-decoration-color: #800000; font-weight: bold">__init_subclass__</span><span style="font-weight: bold">(</span><span style="color: #808000; text-decoration-color: #808000">...</span><span style="font-weight: bold">)</span> <span style="color: #7f7f7f; text-decoration-color: #7f7f7f">This method is called when a class is subclassed.</span>               <span style="color: #000080; text-decoration-color: #000080">│</span>
<span style="color: #000080; text-decoration-color: #000080">│</span>             <span style="color: #bfbf7f; text-decoration-color: #bfbf7f; font-style: italic">__le__</span> = <span style="color: #00ffff; text-decoration-color: #00ffff; font-style: italic">def </span><span style="color: #800000; text-decoration-color: #800000; font-weight: bold">__le__</span><span style="font-weight: bold">(</span>value, <span style="color: #800080; text-decoration-color: #800080">/</span><span style="font-weight: bold">)</span>: <span style="color: #7f7f7f; text-decoration-color: #7f7f7f">Return self&lt;=value.</span>                                                  <span style="color: #000080; text-decoration-color: #000080">│</span>
<span style="color: #000080; text-decoration-color: #000080">│</span>             <span style="color: #bfbf7f; text-decoration-color: #bfbf7f; font-style: italic">__lt__</span> = <span style="color: #00ffff; text-decoration-color: #00ffff; font-style: italic">def </span><span style="color: #800000; text-decoration-color: #800000; font-weight: bold">__lt__</span><span style="font-weight: bold">(</span>value, <span style="color: #800080; text-decoration-color: #800080">/</span><span style="font-weight: bold">)</span>: <span style="color: #7f7f7f; text-decoration-color: #7f7f7f">Return self&lt;value.</span>                                                   <span style="color: #000080; text-decoration-color: #000080">│</span>
<span style="color: #000080; text-decoration-color: #000080">│</span>             <span style="color: #bfbf7f; text-decoration-color: #bfbf7f; font-style: italic">__ne__</span> = <span style="color: #00ffff; text-decoration-color: #00ffff; font-style: italic">def </span><span style="color: #800000; text-decoration-color: #800000; font-weight: bold">__ne__</span><span style="font-weight: bold">(</span>value, <span style="color: #800080; text-decoration-color: #800080">/</span><span style="font-weight: bold">)</span>: <span style="color: #7f7f7f; text-decoration-color: #7f7f7f">Return self!=value.</span>                                                  <span style="color: #000080; text-decoration-color: #000080">│</span>
<span style="color: #000080; text-decoration-color: #000080">│</span>            <span style="color: #bfbf7f; text-decoration-color: #bfbf7f; font-style: italic">__new__</span> = <span style="color: #00ffff; text-decoration-color: #00ffff; font-style: italic">def </span><span style="color: #800000; text-decoration-color: #800000; font-weight: bold">__new__</span><span style="font-weight: bold">(</span>*args, **kwargs<span style="font-weight: bold">)</span>: <span style="color: #7f7f7f; text-decoration-color: #7f7f7f">Create and return a new object.  See </span><span style="color: #bf7fbf; text-decoration-color: #bf7fbf; font-weight: bold">help</span><span style="color: #7f7f7f; text-decoration-color: #7f7f7f; font-weight: bold">(</span><span style="color: #7f7f7f; text-decoration-color: #7f7f7f">type</span><span style="color: #7f7f7f; text-decoration-color: #7f7f7f; font-weight: bold">)</span><span style="color: #7f7f7f; text-decoration-color: #7f7f7f"> for accurate</span> <span style="color: #000080; text-decoration-color: #000080">│</span>
<span style="color: #000080; text-decoration-color: #000080">│</span>                      <span style="color: #7f7f7f; text-decoration-color: #7f7f7f">signature.</span>                                                                                 <span style="color: #000080; text-decoration-color: #000080">│</span>
<span style="color: #000080; text-decoration-color: #000080">│</span>         <span style="color: #bfbf7f; text-decoration-color: #bfbf7f; font-style: italic">__reduce__</span> = <span style="color: #00ffff; text-decoration-color: #00ffff; font-style: italic">def </span><span style="color: #800000; text-decoration-color: #800000; font-weight: bold">__reduce__</span><span style="font-weight: bold">(</span><span style="color: #808000; text-decoration-color: #808000">...</span><span style="font-weight: bold">)</span> <span style="color: #7f7f7f; text-decoration-color: #7f7f7f">Helper for pickle.</span>                                                     <span style="color: #000080; text-decoration-color: #000080">│</span>
<span style="color: #000080; text-decoration-color: #000080">│</span>      <span style="color: #bfbf7f; text-decoration-color: #bfbf7f; font-style: italic">__reduce_ex__</span> = <span style="color: #00ffff; text-decoration-color: #00ffff; font-style: italic">def </span><span style="color: #800000; text-decoration-color: #800000; font-weight: bold">__reduce_ex__</span><span style="font-weight: bold">(</span>protocol, <span style="color: #800080; text-decoration-color: #800080">/</span><span style="font-weight: bold">)</span>: <span style="color: #7f7f7f; text-decoration-color: #7f7f7f">Helper for pickle.</span>                                         <span style="color: #000080; text-decoration-color: #000080">│</span>
<span style="color: #000080; text-decoration-color: #000080">│</span>           <span style="color: #bfbf7f; text-decoration-color: #bfbf7f; font-style: italic">__repr__</span> = <span style="color: #00ffff; text-decoration-color: #00ffff; font-style: italic">def </span><span style="color: #800000; text-decoration-color: #800000; font-weight: bold">__repr__</span><span style="font-weight: bold">()</span>: <span style="color: #7f7f7f; text-decoration-color: #7f7f7f">Return </span><span style="color: #bf7fbf; text-decoration-color: #bf7fbf; font-weight: bold">repr</span><span style="color: #7f7f7f; text-decoration-color: #7f7f7f; font-weight: bold">(</span><span style="color: #7f7f7f; text-decoration-color: #7f7f7f">self</span><span style="color: #7f7f7f; text-decoration-color: #7f7f7f; font-weight: bold">)</span><span style="color: #7f7f7f; text-decoration-color: #7f7f7f">.</span>                                                         <span style="color: #000080; text-decoration-color: #000080">│</span>
<span style="color: #000080; text-decoration-color: #000080">│</span>        <span style="color: #bfbf7f; text-decoration-color: #bfbf7f; font-style: italic">__setattr__</span> = <span style="color: #00ffff; text-decoration-color: #00ffff; font-style: italic">def </span><span style="color: #800000; text-decoration-color: #800000; font-weight: bold">__setattr__</span><span style="font-weight: bold">(</span>name, value, <span style="color: #800080; text-decoration-color: #800080">/</span><span style="font-weight: bold">)</span>: <span style="color: #7f7f7f; text-decoration-color: #7f7f7f">Implement </span><span style="color: #bf7fbf; text-decoration-color: #bf7fbf; font-weight: bold">setattr</span><span style="color: #7f7f7f; text-decoration-color: #7f7f7f; font-weight: bold">(</span><span style="color: #7f7f7f; text-decoration-color: #7f7f7f">self, name, value</span><span style="color: #7f7f7f; text-decoration-color: #7f7f7f; font-weight: bold">)</span><span style="color: #7f7f7f; text-decoration-color: #7f7f7f">.</span>                     <span style="color: #000080; text-decoration-color: #000080">│</span>
<span style="color: #000080; text-decoration-color: #000080">│</span>         <span style="color: #bfbf7f; text-decoration-color: #bfbf7f; font-style: italic">__sizeof__</span> = <span style="color: #00ffff; text-decoration-color: #00ffff; font-style: italic">def </span><span style="color: #800000; text-decoration-color: #800000; font-weight: bold">__sizeof__</span><span style="font-weight: bold">()</span>: <span style="color: #7f7f7f; text-decoration-color: #7f7f7f">Size of object in memory, in bytes.</span>                                      <span style="color: #000080; text-decoration-color: #000080">│</span>
<span style="color: #000080; text-decoration-color: #000080">│</span>            <span style="color: #bfbf7f; text-decoration-color: #bfbf7f; font-style: italic">__str__</span> = <span style="color: #00ffff; text-decoration-color: #00ffff; font-style: italic">def </span><span style="color: #800000; text-decoration-color: #800000; font-weight: bold">__str__</span><span style="font-weight: bold">()</span>: <span style="color: #7f7f7f; text-decoration-color: #7f7f7f">Return </span><span style="color: #bf7fbf; text-decoration-color: #bf7fbf; font-weight: bold">str</span><span style="color: #7f7f7f; text-decoration-color: #7f7f7f; font-weight: bold">(</span><span style="color: #7f7f7f; text-decoration-color: #7f7f7f">self</span><span style="color: #7f7f7f; text-decoration-color: #7f7f7f; font-weight: bold">)</span><span style="color: #7f7f7f; text-decoration-color: #7f7f7f">.</span>                                                           <span style="color: #000080; text-decoration-color: #000080">│</span>
<span style="color: #000080; text-decoration-color: #000080">│</span>   <span style="color: #bfbf7f; text-decoration-color: #bfbf7f; font-style: italic">__subclasshook__</span> = <span style="color: #00ffff; text-decoration-color: #00ffff; font-style: italic">def </span><span style="color: #800000; text-decoration-color: #800000; font-weight: bold">__subclasshook__</span><span style="font-weight: bold">(</span><span style="color: #808000; text-decoration-color: #808000">...</span><span style="font-weight: bold">)</span> <span style="color: #7f7f7f; text-decoration-color: #7f7f7f">Abstract classes can override this to customize </span><span style="color: #bf7fbf; text-decoration-color: #bf7fbf; font-weight: bold">issubclass</span><span style="color: #7f7f7f; text-decoration-color: #7f7f7f; font-weight: bold">()</span><span style="color: #7f7f7f; text-decoration-color: #7f7f7f">.</span>    <span style="color: #000080; text-decoration-color: #000080">│</span>
<span style="color: #000080; text-decoration-color: #000080">╰─────────────────────────────────────────────────────────────────────────────────────────────────────────────────╯</span>
</pre>
</div>
</div>
<div class="cell">
<div class="sourceCode cell-code" id="cb22" style="background: #f1f3f5;"><pre class="sourceCode python code-with-copy"><code class="sourceCode python"><span id="cb22-1"><span class="kw" style="color: #003B4F;">lambda</span> x: np.power(x, <span class="dv" style="color: #AD0000;">3</span>)</span>
<span id="cb22-2"></span>
<span id="cb22-3"></span>
<span id="cb22-4"><span class="kw" style="color: #003B4F;">def</span> f(x):</span>
<span id="cb22-5">    <span class="cf" style="color: #003B4F;">return</span> np.power(x, <span class="dv" style="color: #AD0000;">3</span>)</span></code></pre></div>
</div>
<div class="cell" data-execution_count="53">
<div class="sourceCode cell-code" id="cb23" style="background: #f1f3f5;"><pre class="sourceCode python code-with-copy"><code class="sourceCode python"><span id="cb23-1">d <span class="op" style="color: #5E5E5E;">=</span> {</span>
<span id="cb23-2">    <span class="vs" style="color: #20794D;">r"$\sin(x)$"</span>: np.sin,</span>
<span id="cb23-3">    <span class="vs" style="color: #20794D;">r"$\log(x)$"</span>: np.log,</span>
<span id="cb23-4">    <span class="vs" style="color: #20794D;">r"$\frac{sin(x)}</span><span class="sc" style="color: #5E5E5E;">{x}</span><span class="vs" style="color: #20794D;">$"</span>: <span class="kw" style="color: #003B4F;">lambda</span> x: np.sin(x) <span class="op" style="color: #5E5E5E;">/</span> x,</span>
<span id="cb23-5">    <span class="vs" style="color: #20794D;">r"$x^3$"</span>: <span class="kw" style="color: #003B4F;">lambda</span> x: np.power(x, <span class="dv" style="color: #AD0000;">3</span>),</span>
<span id="cb23-6">}</span></code></pre></div>
</div>
<div class="cell" data-execution_count="54">
<div class="sourceCode cell-code" id="cb24" style="background: #f1f3f5;"><pre class="sourceCode python code-with-copy"><code class="sourceCode python"><span id="cb24-1">d</span></code></pre></div>
<div class="cell-output cell-output-display" data-execution_count="54">
<pre><code>{'$\\sin(x)$': &lt;ufunc 'sin'&gt;,
 '$\\log(x)$': &lt;ufunc 'log'&gt;,
 '$\\frac{sin(x)}{x}$': &lt;function __main__.&lt;lambda&gt;(x)&gt;,
 '$x^3$': &lt;function __main__.&lt;lambda&gt;(x)&gt;}</code></pre>
</div>
</div>
<div class="cell" data-execution_count="55">
<div class="sourceCode cell-code" id="cb26" style="background: #f1f3f5;"><pre class="sourceCode python code-with-copy"><code class="sourceCode python"><span id="cb26-1">x <span class="op" style="color: #5E5E5E;">=</span> np.arange(<span class="fl" style="color: #AD0000;">0.005</span>, <span class="fl" style="color: #AD0000;">10.0</span>, <span class="fl" style="color: #AD0000;">0.005</span>)</span></code></pre></div>
</div>
<div class="cell" data-execution_count="56">
<div class="sourceCode cell-code" id="cb27" style="background: #f1f3f5;"><pre class="sourceCode python code-with-copy"><code class="sourceCode python"><span id="cb27-1">e <span class="op" style="color: #5E5E5E;">=</span> {k: v(x) <span class="cf" style="color: #003B4F;">for</span> k, v <span class="kw" style="color: #003B4F;">in</span> d.items()}</span></code></pre></div>
</div>
<div class="cell" data-execution_count="57">
<div class="sourceCode cell-code" id="cb28" style="background: #f1f3f5;"><pre class="sourceCode python code-with-copy"><code class="sourceCode python"><span id="cb28-1">e</span></code></pre></div>
<div class="cell-output cell-output-display" data-execution_count="57">
<pre><code>{'$\\sin(x)$': array([ 0.00499998,  0.00999983,  0.01499944, ..., -0.53137431,
        -0.53560333, -0.53981897]),
 '$\\log(x)$': array([-5.29831737, -4.60517019, -4.19970508, ...,  2.30108397,
         2.30158459,  2.30208497]),
 '$\\frac{sin(x)}{x}$': array([ 0.99999583,  0.99998333,  0.9999625 , ..., -0.05321726,
        -0.05361395, -0.0540089 ]),
 '$x^3$': array([1.25000000e-07, 1.00000000e-06, 3.37500000e-06, ...,
        9.95506747e+02, 9.97002999e+02, 9.98500750e+02])}</code></pre>
</div>
</div>
<div class="cell" data-execution_count="58">
<div class="sourceCode cell-code" id="cb30" style="background: #f1f3f5;"><pre class="sourceCode python code-with-copy"><code class="sourceCode python"><span id="cb30-1">df <span class="op" style="color: #5E5E5E;">=</span> pd.DataFrame(e, index<span class="op" style="color: #5E5E5E;">=</span>x)</span></code></pre></div>
</div>
<div class="cell" data-execution_count="59">
<div class="sourceCode cell-code" id="cb31" style="background: #f1f3f5;"><pre class="sourceCode python code-with-copy"><code class="sourceCode python"><span id="cb31-1">df</span></code></pre></div>
<div class="cell-output cell-output-display" data-execution_count="59">

<div>

<table class="dataframe table table-sm table-striped">
  <thead>
    <tr>
      <th></th>
      <th>$\sin(x)$</th>
      <th>$\log(x)$</th>
      <th>$\frac{sin(x)}{x}$</th>
      <th>$x^3$</th>
    </tr>
  </thead>
  <tbody>
    <tr>
      <th>0.005</th>
      <td>0.005000</td>
      <td>-5.298317</td>
      <td>0.999996</td>
      <td>1.250000e-07</td>
    </tr>
    <tr>
      <th>0.010</th>
      <td>0.010000</td>
      <td>-4.605170</td>
      <td>0.999983</td>
      <td>1.000000e-06</td>
    </tr>
    <tr>
      <th>0.015</th>
      <td>0.014999</td>
      <td>-4.199705</td>
      <td>0.999963</td>
      <td>3.375000e-06</td>
    </tr>
    <tr>
      <th>0.020</th>
      <td>0.019999</td>
      <td>-3.912023</td>
      <td>0.999933</td>
      <td>8.000000e-06</td>
    </tr>
    <tr>
      <th>0.025</th>
      <td>0.024997</td>
      <td>-3.688879</td>
      <td>0.999896</td>
      <td>1.562500e-05</td>
    </tr>
    <tr>
      <th>...</th>
      <td>...</td>
      <td>...</td>
      <td>...</td>
      <td>...</td>
    </tr>
    <tr>
      <th>9.975</th>
      <td>-0.522877</td>
      <td>2.300082</td>
      <td>-0.052419</td>
      <td>9.925187e+02</td>
    </tr>
    <tr>
      <th>9.980</th>
      <td>-0.527132</td>
      <td>2.300583</td>
      <td>-0.052819</td>
      <td>9.940120e+02</td>
    </tr>
    <tr>
      <th>9.985</th>
      <td>-0.531374</td>
      <td>2.301084</td>
      <td>-0.053217</td>
      <td>9.955067e+02</td>
    </tr>
    <tr>
      <th>9.990</th>
      <td>-0.535603</td>
      <td>2.301585</td>
      <td>-0.053614</td>
      <td>9.970030e+02</td>
    </tr>
    <tr>
      <th>9.995</th>
      <td>-0.539819</td>
      <td>2.302085</td>
      <td>-0.054009</td>
      <td>9.985007e+02</td>
    </tr>
  </tbody>
</table>
<p>1999 rows × 4 columns</p>
</div>
</div>
</div>
<div class="cell" data-execution_count="64">
<div class="sourceCode cell-code" id="cb32" style="background: #f1f3f5;"><pre class="sourceCode python code-with-copy"><code class="sourceCode python"><span id="cb32-1">df.plot()</span></code></pre></div>
<div class="cell-output cell-output-display" data-execution_count="64">
<pre><code>&lt;AxesSubplot:&gt;</code></pre>
</div>
<div class="cell-output cell-output-display">
<p><img src="https://github.com/nipunbatra/ml2023/notebooks/posts/split_files/figure-html/cell-27-output-2.png" class="img-fluid"></p>
</div>
</div>
<div class="cell" data-execution_count="63">
<div class="sourceCode cell-code" id="cb34" style="background: #f1f3f5;"><pre class="sourceCode python code-with-copy"><code class="sourceCode python"><span id="cb34-1">df.plot(subplots<span class="op" style="color: #5E5E5E;">=</span><span class="va" style="color: #111111;">True</span>)</span></code></pre></div>
<div class="cell-output cell-output-display" data-execution_count="63">
<pre><code>array([&lt;AxesSubplot:&gt;, &lt;AxesSubplot:&gt;, &lt;AxesSubplot:&gt;, &lt;AxesSubplot:&gt;],
      dtype=object)</code></pre>
</div>
<div class="cell-output cell-output-display">
<p><img src="https://github.com/nipunbatra/ml2023/notebooks/posts/split_files/figure-html/cell-28-output-2.png" class="img-fluid"></p>
</div>
</div>
<div class="cell" data-execution_count="46">
<div class="sourceCode cell-code" id="cb36" style="background: #f1f3f5;"><pre class="sourceCode python code-with-copy"><code class="sourceCode python"><span id="cb36-1">df</span></code></pre></div>
<div class="cell-output cell-output-display" data-execution_count="46">

<div>

<table class="dataframe table table-sm table-striped">
  <thead>
    <tr>
      <th></th>
      <th>$\sin$</th>
      <th>log</th>
      <th>$\frac{sin(x)}{x}$</th>
      <th>x^3</th>
    </tr>
  </thead>
  <tbody>
    <tr>
      <th>0.005</th>
      <td>0.005000</td>
      <td>-5.298317</td>
      <td>0.999996</td>
      <td>1.250000e-07</td>
    </tr>
    <tr>
      <th>0.010</th>
      <td>0.010000</td>
      <td>-4.605170</td>
      <td>0.999983</td>
      <td>1.000000e-06</td>
    </tr>
    <tr>
      <th>0.015</th>
      <td>0.014999</td>
      <td>-4.199705</td>
      <td>0.999963</td>
      <td>3.375000e-06</td>
    </tr>
    <tr>
      <th>0.020</th>
      <td>0.019999</td>
      <td>-3.912023</td>
      <td>0.999933</td>
      <td>8.000000e-06</td>
    </tr>
    <tr>
      <th>0.025</th>
      <td>0.024997</td>
      <td>-3.688879</td>
      <td>0.999896</td>
      <td>1.562500e-05</td>
    </tr>
    <tr>
      <th>...</th>
      <td>...</td>
      <td>...</td>
      <td>...</td>
      <td>...</td>
    </tr>
    <tr>
      <th>9.975</th>
      <td>-0.522877</td>
      <td>2.300082</td>
      <td>-0.052419</td>
      <td>9.925187e+02</td>
    </tr>
    <tr>
      <th>9.980</th>
      <td>-0.527132</td>
      <td>2.300583</td>
      <td>-0.052819</td>
      <td>9.940120e+02</td>
    </tr>
    <tr>
      <th>9.985</th>
      <td>-0.531374</td>
      <td>2.301084</td>
      <td>-0.053217</td>
      <td>9.955067e+02</td>
    </tr>
    <tr>
      <th>9.990</th>
      <td>-0.535603</td>
      <td>2.301585</td>
      <td>-0.053614</td>
      <td>9.970030e+02</td>
    </tr>
    <tr>
      <th>9.995</th>
      <td>-0.539819</td>
      <td>2.302085</td>
      <td>-0.054009</td>
      <td>9.985007e+02</td>
    </tr>
  </tbody>
</table>
<p>1999 rows × 4 columns</p>
</div>
</div>
</div>
<div class="cell" data-execution_count="65">
<div class="sourceCode cell-code" id="cb37" style="background: #f1f3f5;"><pre class="sourceCode python code-with-copy"><code class="sourceCode python"><span id="cb37-1">((df <span class="op" style="color: #5E5E5E;">-</span> df.<span class="bu" style="color: null;">min</span>(axis<span class="op" style="color: #5E5E5E;">=</span><span class="dv" style="color: #AD0000;">0</span>)) <span class="op" style="color: #5E5E5E;">/</span> (df.<span class="bu" style="color: null;">max</span>(axis<span class="op" style="color: #5E5E5E;">=</span><span class="dv" style="color: #AD0000;">0</span>) <span class="op" style="color: #5E5E5E;">-</span> df.<span class="bu" style="color: null;">min</span>(axis<span class="op" style="color: #5E5E5E;">=</span><span class="dv" style="color: #AD0000;">0</span>))).plot()</span></code></pre></div>
<div class="cell-output cell-output-display" data-execution_count="65">
<pre><code>&lt;AxesSubplot:&gt;</code></pre>
</div>
<div class="cell-output cell-output-display">
<p><img src="https://github.com/nipunbatra/ml2023/notebooks/posts/split_files/figure-html/cell-30-output-2.png" class="img-fluid"></p>
</div>
</div>
<div class="cell" data-execution_count="66">
<div class="sourceCode cell-code" id="cb39" style="background: #f1f3f5;"><pre class="sourceCode python code-with-copy"><code class="sourceCode python"><span id="cb39-1">df <span class="op" style="color: #5E5E5E;">=</span> pd.DataFrame(np.random.randn(<span class="dv" style="color: #AD0000;">1000</span>, <span class="dv" style="color: #AD0000;">5</span>),</span>
<span id="cb39-2">                  columns<span class="op" style="color: #5E5E5E;">=</span><span class="st" style="color: #20794D;">"a,b,c,d,e"</span>.split(<span class="st" style="color: #20794D;">","</span>))</span>
<span id="cb39-3">df</span></code></pre></div>
<div class="cell-output cell-output-display" data-execution_count="66">

<div>

<table class="dataframe table table-sm table-striped">
  <thead>
    <tr>
      <th></th>
      <th>a</th>
      <th>b</th>
      <th>c</th>
      <th>d</th>
      <th>e</th>
    </tr>
  </thead>
  <tbody>
    <tr>
      <th>0</th>
      <td>1.593274</td>
      <td>0.568722</td>
      <td>-0.114487</td>
      <td>0.251630</td>
      <td>-1.210856</td>
    </tr>
    <tr>
      <th>1</th>
      <td>-0.393734</td>
      <td>0.085253</td>
      <td>0.099422</td>
      <td>-1.530616</td>
      <td>0.327623</td>
    </tr>
    <tr>
      <th>2</th>
      <td>0.279196</td>
      <td>-0.377051</td>
      <td>0.004175</td>
      <td>-1.483492</td>
      <td>-1.479796</td>
    </tr>
    <tr>
      <th>3</th>
      <td>0.134687</td>
      <td>-0.667723</td>
      <td>-0.011556</td>
      <td>0.839491</td>
      <td>-0.173930</td>
    </tr>
    <tr>
      <th>4</th>
      <td>-2.810668</td>
      <td>-0.150654</td>
      <td>-0.481044</td>
      <td>-0.234694</td>
      <td>0.899731</td>
    </tr>
    <tr>
      <th>...</th>
      <td>...</td>
      <td>...</td>
      <td>...</td>
      <td>...</td>
      <td>...</td>
    </tr>
    <tr>
      <th>995</th>
      <td>-0.837658</td>
      <td>1.315288</td>
      <td>-0.364523</td>
      <td>1.993571</td>
      <td>1.584878</td>
    </tr>
    <tr>
      <th>996</th>
      <td>-2.104663</td>
      <td>-2.553118</td>
      <td>-1.242666</td>
      <td>0.201987</td>
      <td>-0.305332</td>
    </tr>
    <tr>
      <th>997</th>
      <td>-1.195587</td>
      <td>-1.577903</td>
      <td>0.849912</td>
      <td>0.327590</td>
      <td>-0.001670</td>
    </tr>
    <tr>
      <th>998</th>
      <td>-0.035563</td>
      <td>-0.489252</td>
      <td>1.930498</td>
      <td>-0.262645</td>
      <td>0.825932</td>
    </tr>
    <tr>
      <th>999</th>
      <td>-0.643267</td>
      <td>-0.828981</td>
      <td>-0.202735</td>
      <td>-0.257866</td>
      <td>0.070815</td>
    </tr>
  </tbody>
</table>
<p>1000 rows × 5 columns</p>
</div>
</div>
</div>
<div class="cell" data-execution_count="67">
<div class="sourceCode cell-code" id="cb40" style="background: #f1f3f5;"><pre class="sourceCode python code-with-copy"><code class="sourceCode python"><span id="cb40-1">df <span class="op" style="color: #5E5E5E;">=</span> df.assign(f<span class="op" style="color: #5E5E5E;">=</span>df.<span class="bu" style="color: null;">sum</span>(axis<span class="op" style="color: #5E5E5E;">=</span><span class="dv" style="color: #AD0000;">1</span>))</span></code></pre></div>
</div>
<div class="cell" data-execution_count="68">
<div class="sourceCode cell-code" id="cb41" style="background: #f1f3f5;"><pre class="sourceCode python code-with-copy"><code class="sourceCode python"><span id="cb41-1">df</span></code></pre></div>
<div class="cell-output cell-output-display" data-execution_count="68">

<div>

<table class="dataframe table table-sm table-striped">
  <thead>
    <tr>
      <th></th>
      <th>a</th>
      <th>b</th>
      <th>c</th>
      <th>d</th>
      <th>e</th>
      <th>f</th>
    </tr>
  </thead>
  <tbody>
    <tr>
      <th>0</th>
      <td>1.593274</td>
      <td>0.568722</td>
      <td>-0.114487</td>
      <td>0.251630</td>
      <td>-1.210856</td>
      <td>1.088284</td>
    </tr>
    <tr>
      <th>1</th>
      <td>-0.393734</td>
      <td>0.085253</td>
      <td>0.099422</td>
      <td>-1.530616</td>
      <td>0.327623</td>
      <td>-1.412052</td>
    </tr>
    <tr>
      <th>2</th>
      <td>0.279196</td>
      <td>-0.377051</td>
      <td>0.004175</td>
      <td>-1.483492</td>
      <td>-1.479796</td>
      <td>-3.056967</td>
    </tr>
    <tr>
      <th>3</th>
      <td>0.134687</td>
      <td>-0.667723</td>
      <td>-0.011556</td>
      <td>0.839491</td>
      <td>-0.173930</td>
      <td>0.120969</td>
    </tr>
    <tr>
      <th>4</th>
      <td>-2.810668</td>
      <td>-0.150654</td>
      <td>-0.481044</td>
      <td>-0.234694</td>
      <td>0.899731</td>
      <td>-2.777329</td>
    </tr>
    <tr>
      <th>...</th>
      <td>...</td>
      <td>...</td>
      <td>...</td>
      <td>...</td>
      <td>...</td>
      <td>...</td>
    </tr>
    <tr>
      <th>995</th>
      <td>-0.837658</td>
      <td>1.315288</td>
      <td>-0.364523</td>
      <td>1.993571</td>
      <td>1.584878</td>
      <td>3.691555</td>
    </tr>
    <tr>
      <th>996</th>
      <td>-2.104663</td>
      <td>-2.553118</td>
      <td>-1.242666</td>
      <td>0.201987</td>
      <td>-0.305332</td>
      <td>-6.003792</td>
    </tr>
    <tr>
      <th>997</th>
      <td>-1.195587</td>
      <td>-1.577903</td>
      <td>0.849912</td>
      <td>0.327590</td>
      <td>-0.001670</td>
      <td>-1.597657</td>
    </tr>
    <tr>
      <th>998</th>
      <td>-0.035563</td>
      <td>-0.489252</td>
      <td>1.930498</td>
      <td>-0.262645</td>
      <td>0.825932</td>
      <td>1.968971</td>
    </tr>
    <tr>
      <th>999</th>
      <td>-0.643267</td>
      <td>-0.828981</td>
      <td>-0.202735</td>
      <td>-0.257866</td>
      <td>0.070815</td>
      <td>-1.862035</td>
    </tr>
  </tbody>
</table>
<p>1000 rows × 6 columns</p>
</div>
</div>
</div>
<div class="cell" data-execution_count="66">
<div class="sourceCode cell-code" id="cb42" style="background: #f1f3f5;"><pre class="sourceCode python code-with-copy"><code class="sourceCode python"><span id="cb42-1">df.query(<span class="st" style="color: #20794D;">"f &gt; 5"</span>)[<span class="st" style="color: #20794D;">"f"</span>].std()</span></code></pre></div>
<div class="cell-output cell-output-display" data-execution_count="66">
<pre><code>0.6609257763922614</code></pre>
</div>
</div>
<div class="cell" data-execution_count="67">
<div class="sourceCode cell-code" id="cb44" style="background: #f1f3f5;"><pre class="sourceCode python code-with-copy"><code class="sourceCode python"><span id="cb44-1">df.query(<span class="st" style="color: #20794D;">"f &lt;= 5"</span>)[<span class="st" style="color: #20794D;">"f"</span>].std()</span></code></pre></div>
<div class="cell-output cell-output-display" data-execution_count="67">
<pre><code>2.1891090850524444</code></pre>
</div>
</div>
<div class="cell" data-execution_count="71">
<div class="sourceCode cell-code" id="cb46" style="background: #f1f3f5;"><pre class="sourceCode python code-with-copy"><code class="sourceCode python"><span id="cb46-1"><span class="co" style="color: #5E5E5E;">"tolist"</span> <span class="kw" style="color: #003B4F;">in</span> <span class="bu" style="color: null;">dir</span>(df)</span></code></pre></div>
<div class="cell-output cell-output-display" data-execution_count="71">
<pre><code>False</code></pre>
</div>
</div>
<div class="cell" data-execution_count="29">
<div class="sourceCode cell-code" id="cb48" style="background: #f1f3f5;"><pre class="sourceCode python code-with-copy"><code class="sourceCode python"><span id="cb48-1"><span class="kw" style="color: #003B4F;">def</span> search(obj, query):</span>
<span id="cb48-2">    <span class="im" style="color: #00769E;">import</span> re</span>
<span id="cb48-3"></span>
<span id="cb48-4">    <span class="cf" style="color: #003B4F;">return</span> <span class="bu" style="color: null;">list</span>(<span class="bu" style="color: null;">filter</span>(<span class="kw" style="color: #003B4F;">lambda</span> x: re.search(query, x), <span class="bu" style="color: null;">dir</span>(obj)))</span></code></pre></div>
</div>
<div class="cell" data-execution_count="34">
<div class="sourceCode cell-code" id="cb49" style="background: #f1f3f5;"><pre class="sourceCode python code-with-copy"><code class="sourceCode python"><span id="cb49-1">search(a, <span class="st" style="color: #20794D;">"lis"</span>)</span></code></pre></div>
<div class="cell-output cell-output-display" data-execution_count="34">
<pre><code>['tolist']</code></pre>
</div>
</div>
<div class="cell" data-execution_count="1">
<div class="sourceCode cell-code" id="cb51" style="background: #f1f3f5;"><pre class="sourceCode python code-with-copy"><code class="sourceCode python"><span id="cb51-1"><span class="im" style="color: #00769E;">import</span> numpy <span class="im" style="color: #00769E;">as</span> np</span>
<span id="cb51-2"><span class="im" style="color: #00769E;">import</span> pandas <span class="im" style="color: #00769E;">as</span> pd</span></code></pre></div>
</div>
<div class="cell" data-execution_count="98">
<div class="sourceCode cell-code" id="cb52" style="background: #f1f3f5;"><pre class="sourceCode python code-with-copy"><code class="sourceCode python"><span id="cb52-1"><span class="kw" style="color: #003B4F;">def</span> search(obj, query):</span>
<span id="cb52-2">    <span class="im" style="color: #00769E;">import</span> re</span>
<span id="cb52-3">    <span class="im" style="color: #00769E;">from</span> rich <span class="im" style="color: #00769E;">import</span> inspect</span>
<span id="cb52-4">    <span class="im" style="color: #00769E;">from</span> rich.pretty <span class="im" style="color: #00769E;">import</span> Pretty</span>
<span id="cb52-5">    <span class="im" style="color: #00769E;">from</span> rich.panel <span class="im" style="color: #00769E;">import</span> Panel</span>
<span id="cb52-6"></span>
<span id="cb52-7">    z <span class="op" style="color: #5E5E5E;">=</span> <span class="bu" style="color: null;">list</span>(<span class="bu" style="color: null;">filter</span>(<span class="kw" style="color: #003B4F;">lambda</span> x: re.search(query, x), <span class="bu" style="color: null;">dir</span>(obj)))</span>
<span id="cb52-8">    p <span class="op" style="color: #5E5E5E;">=</span> Panel(Pretty(<span class="st" style="color: #20794D;">"a"</span>), title<span class="op" style="color: #5E5E5E;">=</span><span class="ss" style="color: #20794D;">f"Searching for `</span><span class="sc" style="color: #5E5E5E;">{</span>query<span class="sc" style="color: #5E5E5E;">}</span><span class="ss" style="color: #20794D;">`"</span>)</span>
<span id="cb52-9">    <span class="co" style="color: #5E5E5E;"># return p</span></span>
<span id="cb52-10">    ps <span class="op" style="color: #5E5E5E;">=</span> []</span>
<span id="cb52-11">    <span class="cf" style="color: #003B4F;">for</span> q <span class="kw" style="color: #003B4F;">in</span> z:</span>
<span id="cb52-12">        ps.append(Panel(Pretty(inspect(<span class="bu" style="color: null;">getattr</span>(obj, q), methods<span class="op" style="color: #5E5E5E;">=</span><span class="va" style="color: #111111;">True</span>, docs<span class="op" style="color: #5E5E5E;">=</span><span class="va" style="color: #111111;">True</span>))))</span></code></pre></div>
</div>
<div class="cell" data-execution_count="99">
<div class="sourceCode cell-code" id="cb53" style="background: #f1f3f5;"><pre class="sourceCode python code-with-copy"><code class="sourceCode python"><span id="cb53-1">search(np.random, <span class="st" style="color: #20794D;">"normal"</span>)</span></code></pre></div>
<div class="cell-output cell-output-display">
<pre style="white-space:pre;overflow-x:auto;line-height:normal;font-family:Menlo,'DejaVu Sans Mono',consolas,'Courier New',monospace"><span style="color: #000080; text-decoration-color: #000080">╭─ </span><span style="color: #000080; text-decoration-color: #000080; font-weight: bold">&lt;</span><span style="color: #ff00ff; text-decoration-color: #ff00ff; font-weight: bold">built-in</span><span style="color: #000000; text-decoration-color: #000000"> method lognormal of numpy.random.mtrand.RandomState object at </span><span style="color: #008080; text-decoration-color: #008080; font-weight: bold">0x10c627840</span><span style="color: #000080; text-decoration-color: #000080; font-weight: bold">&gt;</span><span style="color: #000080; text-decoration-color: #000080"> ─╮</span>
<span style="color: #000080; text-decoration-color: #000080">│</span> <span style="color: #00ffff; text-decoration-color: #00ffff; font-style: italic">def </span><span style="color: #800000; text-decoration-color: #800000; font-weight: bold">RandomState.lognormal</span><span style="font-weight: bold">(</span><span style="color: #808000; text-decoration-color: #808000">...</span><span style="font-weight: bold">)</span>                                                         <span style="color: #000080; text-decoration-color: #000080">│</span>
<span style="color: #000080; text-decoration-color: #000080">│</span>                                                                                        <span style="color: #000080; text-decoration-color: #000080">│</span>
<span style="color: #000080; text-decoration-color: #000080">│</span> <span style="color: #800080; text-decoration-color: #800080; font-weight: bold">lognormal</span><span style="color: #008080; text-decoration-color: #008080; font-weight: bold">(</span><span style="color: #808000; text-decoration-color: #808000">mean</span><span style="color: #008080; text-decoration-color: #008080">=</span><span style="color: #008080; text-decoration-color: #008080; font-weight: bold">0.0</span><span style="color: #008080; text-decoration-color: #008080">, </span><span style="color: #808000; text-decoration-color: #808000">sigma</span><span style="color: #008080; text-decoration-color: #008080">=</span><span style="color: #008080; text-decoration-color: #008080; font-weight: bold">1.0</span><span style="color: #008080; text-decoration-color: #008080">, </span><span style="color: #808000; text-decoration-color: #808000">size</span><span style="color: #008080; text-decoration-color: #008080">=</span><span style="color: #800080; text-decoration-color: #800080; font-style: italic">None</span><span style="color: #008080; text-decoration-color: #008080; font-weight: bold">)</span>                                              <span style="color: #000080; text-decoration-color: #000080">│</span>
<span style="color: #000080; text-decoration-color: #000080">│</span>                                                                                        <span style="color: #000080; text-decoration-color: #000080">│</span>
<span style="color: #000080; text-decoration-color: #000080">│</span> <span style="color: #008080; text-decoration-color: #008080; font-weight: bold">29</span><span style="font-style: italic"> attribute(s) not shown.</span> Run <span style="color: #800080; text-decoration-color: #800080; font-weight: bold">inspect</span><span style="font-weight: bold">(</span>inspect<span style="font-weight: bold">)</span> for options.                           <span style="color: #000080; text-decoration-color: #000080">│</span>
<span style="color: #000080; text-decoration-color: #000080">╰────────────────────────────────────────────────────────────────────────────────────────╯</span>
</pre>
</div>
<div class="cell-output cell-output-display">
<pre style="white-space:pre;overflow-x:auto;line-height:normal;font-family:Menlo,'DejaVu Sans Mono',consolas,'Courier New',monospace"><span style="color: #000080; text-decoration-color: #000080">╭─ </span><span style="color: #000080; text-decoration-color: #000080; font-weight: bold">&lt;</span><span style="color: #ff00ff; text-decoration-color: #ff00ff; font-weight: bold">built-in</span><span style="color: #000000; text-decoration-color: #000000"> method multivariate_normal of numpy.random.mtrand.RandomState object at </span><span style="color: #008080; text-decoration-color: #008080; font-weight: bold">0x10c627840</span><span style="color: #000080; text-decoration-color: #000080; font-weight: bold">&gt;</span><span style="color: #000080; text-decoration-color: #000080"> ─╮</span>
<span style="color: #000080; text-decoration-color: #000080">│</span> <span style="color: #00ffff; text-decoration-color: #00ffff; font-style: italic">def </span><span style="color: #800000; text-decoration-color: #800000; font-weight: bold">RandomState.multivariate_normal</span><span style="font-weight: bold">(</span><span style="color: #808000; text-decoration-color: #808000">...</span><span style="font-weight: bold">)</span>                                                         <span style="color: #000080; text-decoration-color: #000080">│</span>
<span style="color: #000080; text-decoration-color: #000080">│</span>                                                                                                  <span style="color: #000080; text-decoration-color: #000080">│</span>
<span style="color: #000080; text-decoration-color: #000080">│</span> <span style="color: #800080; text-decoration-color: #800080; font-weight: bold">multivariate_normal</span><span style="color: #008080; text-decoration-color: #008080; font-weight: bold">(</span><span style="color: #008080; text-decoration-color: #008080">mean, cov, </span><span style="color: #808000; text-decoration-color: #808000">size</span><span style="color: #008080; text-decoration-color: #008080">=</span><span style="color: #800080; text-decoration-color: #800080; font-style: italic">None</span><span style="color: #008080; text-decoration-color: #008080">, </span><span style="color: #808000; text-decoration-color: #808000">check_valid</span><span style="color: #008080; text-decoration-color: #008080">=</span><span style="color: #008000; text-decoration-color: #008000">'warn'</span><span style="color: #008080; text-decoration-color: #008080">, </span><span style="color: #808000; text-decoration-color: #808000">tol</span><span style="color: #008080; text-decoration-color: #008080">=</span><span style="color: #008080; text-decoration-color: #008080; font-weight: bold">1e-8</span><span style="color: #008080; text-decoration-color: #008080; font-weight: bold">)</span>                          <span style="color: #000080; text-decoration-color: #000080">│</span>
<span style="color: #000080; text-decoration-color: #000080">│</span>                                                                                                  <span style="color: #000080; text-decoration-color: #000080">│</span>
<span style="color: #000080; text-decoration-color: #000080">│</span> <span style="color: #008080; text-decoration-color: #008080; font-weight: bold">29</span><span style="font-style: italic"> attribute(s) not shown.</span> Run <span style="color: #800080; text-decoration-color: #800080; font-weight: bold">inspect</span><span style="font-weight: bold">(</span>inspect<span style="font-weight: bold">)</span> for options.                                     <span style="color: #000080; text-decoration-color: #000080">│</span>
<span style="color: #000080; text-decoration-color: #000080">╰──────────────────────────────────────────────────────────────────────────────────────────────────╯</span>
</pre>
</div>
<div class="cell-output cell-output-display">
<pre style="white-space:pre;overflow-x:auto;line-height:normal;font-family:Menlo,'DejaVu Sans Mono',consolas,'Courier New',monospace"><span style="color: #000080; text-decoration-color: #000080">╭─ </span><span style="color: #000080; text-decoration-color: #000080; font-weight: bold">&lt;</span><span style="color: #ff00ff; text-decoration-color: #ff00ff; font-weight: bold">built-in</span><span style="color: #000000; text-decoration-color: #000000"> method normal of numpy.random.mtrand.RandomState object at </span><span style="color: #008080; text-decoration-color: #008080; font-weight: bold">0x10c627840</span><span style="color: #000080; text-decoration-color: #000080; font-weight: bold">&gt;</span><span style="color: #000080; text-decoration-color: #000080"> ─╮</span>
<span style="color: #000080; text-decoration-color: #000080">│</span> <span style="color: #00ffff; text-decoration-color: #00ffff; font-style: italic">def </span><span style="color: #800000; text-decoration-color: #800000; font-weight: bold">RandomState.normal</span><span style="font-weight: bold">(</span><span style="color: #808000; text-decoration-color: #808000">...</span><span style="font-weight: bold">)</span>                                                         <span style="color: #000080; text-decoration-color: #000080">│</span>
<span style="color: #000080; text-decoration-color: #000080">│</span>                                                                                     <span style="color: #000080; text-decoration-color: #000080">│</span>
<span style="color: #000080; text-decoration-color: #000080">│</span> <span style="color: #800080; text-decoration-color: #800080; font-weight: bold">normal</span><span style="color: #008080; text-decoration-color: #008080; font-weight: bold">(</span><span style="color: #808000; text-decoration-color: #808000">loc</span><span style="color: #008080; text-decoration-color: #008080">=</span><span style="color: #008080; text-decoration-color: #008080; font-weight: bold">0.0</span><span style="color: #008080; text-decoration-color: #008080">, </span><span style="color: #808000; text-decoration-color: #808000">scale</span><span style="color: #008080; text-decoration-color: #008080">=</span><span style="color: #008080; text-decoration-color: #008080; font-weight: bold">1.0</span><span style="color: #008080; text-decoration-color: #008080">, </span><span style="color: #808000; text-decoration-color: #808000">size</span><span style="color: #008080; text-decoration-color: #008080">=</span><span style="color: #800080; text-decoration-color: #800080; font-style: italic">None</span><span style="color: #008080; text-decoration-color: #008080; font-weight: bold">)</span>                                               <span style="color: #000080; text-decoration-color: #000080">│</span>
<span style="color: #000080; text-decoration-color: #000080">│</span>                                                                                     <span style="color: #000080; text-decoration-color: #000080">│</span>
<span style="color: #000080; text-decoration-color: #000080">│</span> <span style="color: #008080; text-decoration-color: #008080; font-weight: bold">29</span><span style="font-style: italic"> attribute(s) not shown.</span> Run <span style="color: #800080; text-decoration-color: #800080; font-weight: bold">inspect</span><span style="font-weight: bold">(</span>inspect<span style="font-weight: bold">)</span> for options.                        <span style="color: #000080; text-decoration-color: #000080">│</span>
<span style="color: #000080; text-decoration-color: #000080">╰─────────────────────────────────────────────────────────────────────────────────────╯</span>
</pre>
</div>
<div class="cell-output cell-output-display">
<pre style="white-space:pre;overflow-x:auto;line-height:normal;font-family:Menlo,'DejaVu Sans Mono',consolas,'Courier New',monospace"><span style="color: #000080; text-decoration-color: #000080">╭─ </span><span style="color: #000080; text-decoration-color: #000080; font-weight: bold">&lt;</span><span style="color: #ff00ff; text-decoration-color: #ff00ff; font-weight: bold">built-in</span><span style="color: #000000; text-decoration-color: #000000"> method standard_normal of numpy.random.mtrand.RandomState object at </span><span style="color: #008080; text-decoration-color: #008080; font-weight: bold">0x10c627840</span><span style="color: #000080; text-decoration-color: #000080; font-weight: bold">&gt;</span><span style="color: #000080; text-decoration-color: #000080"> ─╮</span>
<span style="color: #000080; text-decoration-color: #000080">│</span> <span style="color: #00ffff; text-decoration-color: #00ffff; font-style: italic">def </span><span style="color: #800000; text-decoration-color: #800000; font-weight: bold">RandomState.standard_normal</span><span style="font-weight: bold">(</span><span style="color: #808000; text-decoration-color: #808000">...</span><span style="font-weight: bold">)</span>                                                         <span style="color: #000080; text-decoration-color: #000080">│</span>
<span style="color: #000080; text-decoration-color: #000080">│</span>                                                                                              <span style="color: #000080; text-decoration-color: #000080">│</span>
<span style="color: #000080; text-decoration-color: #000080">│</span> <span style="color: #800080; text-decoration-color: #800080; font-weight: bold">standard_normal</span><span style="color: #008080; text-decoration-color: #008080; font-weight: bold">(</span><span style="color: #808000; text-decoration-color: #808000">size</span><span style="color: #008080; text-decoration-color: #008080">=</span><span style="color: #800080; text-decoration-color: #800080; font-style: italic">None</span><span style="color: #008080; text-decoration-color: #008080; font-weight: bold">)</span>                                                                   <span style="color: #000080; text-decoration-color: #000080">│</span>
<span style="color: #000080; text-decoration-color: #000080">│</span>                                                                                              <span style="color: #000080; text-decoration-color: #000080">│</span>
<span style="color: #000080; text-decoration-color: #000080">│</span> <span style="color: #008080; text-decoration-color: #008080; font-weight: bold">29</span><span style="font-style: italic"> attribute(s) not shown.</span> Run <span style="color: #800080; text-decoration-color: #800080; font-weight: bold">inspect</span><span style="font-weight: bold">(</span>inspect<span style="font-weight: bold">)</span> for options.                                 <span style="color: #000080; text-decoration-color: #000080">│</span>
<span style="color: #000080; text-decoration-color: #000080">╰──────────────────────────────────────────────────────────────────────────────────────────────╯</span>
</pre>
</div>
</div>
<div class="cell" data-execution_count="73">
<div class="sourceCode cell-code" id="cb54" style="background: #f1f3f5;"><pre class="sourceCode python code-with-copy"><code class="sourceCode python"><span id="cb54-1"><span class="bu" style="color: null;">getattr</span>(pd.DataFrame().values, <span class="st" style="color: #20794D;">"tolist"</span>)</span></code></pre></div>
<div class="cell-output cell-output-display" data-execution_count="73">
<pre><code>&lt;function ndarray.tolist&gt;</code></pre>
</div>
</div>
<div class="cell" data-execution_count="70">
<div class="sourceCode cell-code" id="cb56" style="background: #f1f3f5;"><pre class="sourceCode python code-with-copy"><code class="sourceCode python"><span id="cb56-1">pd.DataFrame.to</span></code></pre></div>
<div class="cell-output cell-output-display" data-execution_count="70">

<div>

<table class="dataframe table table-sm table-striped">
  <thead>
    <tr>
      <th></th>
    </tr>
  </thead>
  <tbody>
  </tbody>
</table>
</div>
</div>
</div>
<div class="cell" data-execution_count="14">
<div class="sourceCode cell-code" id="cb57" style="background: #f1f3f5;"><pre class="sourceCode python code-with-copy"><code class="sourceCode python"><span id="cb57-1">df <span class="op" style="color: #5E5E5E;">=</span> pd.DataFrame()</span>
<span id="cb57-2">search(df.values, <span class="st" style="color: #20794D;">"list"</span>)</span></code></pre></div>
<div class="cell-output cell-output-display" data-execution_count="14">
<pre style="white-space:pre;overflow-x:auto;line-height:normal;font-family:Menlo,'DejaVu Sans Mono',consolas,'Courier New',monospace">╭───────────────────────────────────────────── Searching for {query} ─────────────────────────────────────────────╮
│ <span style="font-weight: bold">[</span><span style="color: #008000; text-decoration-color: #008000">'tolist'</span><span style="font-weight: bold">]</span>                                                                                                      │
╰─────────────────────────────────────────────────────────────────────────────────────────────────────────────────╯
</pre>
</div>
</div>
<div class="cell" data-execution_count="11">
<div class="sourceCode cell-code" id="cb58" style="background: #f1f3f5;"><pre class="sourceCode python code-with-copy"><code class="sourceCode python"><span id="cb58-1">search(pd.DataFrame, <span class="st" style="color: #20794D;">"to"</span>)</span></code></pre></div>
<div class="cell-output cell-output-display" data-execution_count="11">
<pre style="white-space:pre;overflow-x:auto;line-height:normal;font-family:Menlo,'DejaVu Sans Mono',consolas,'Courier New',monospace">╭─────────────────────────────────────────────────────────────────────────────────────────────────────────────────╮
│ <span style="font-weight: bold">[</span>                                                                                                               │
│     <span style="color: #008000; text-decoration-color: #008000">'_constructor'</span>,                                                                                             │
│     <span style="color: #008000; text-decoration-color: #008000">'_constructor_sliced'</span>,                                                                                      │
│     <span style="color: #008000; text-decoration-color: #008000">'_to_dict_of_blocks'</span>,                                                                                       │
│     <span style="color: #008000; text-decoration-color: #008000">'kurtosis'</span>,                                                                                                 │
│     <span style="color: #008000; text-decoration-color: #008000">'to_clipboard'</span>,                                                                                             │
│     <span style="color: #008000; text-decoration-color: #008000">'to_csv'</span>,                                                                                                   │
│     <span style="color: #008000; text-decoration-color: #008000">'to_dict'</span>,                                                                                                  │
│     <span style="color: #008000; text-decoration-color: #008000">'to_excel'</span>,                                                                                                 │
│     <span style="color: #008000; text-decoration-color: #008000">'to_feather'</span>,                                                                                               │
│     <span style="color: #008000; text-decoration-color: #008000">'to_gbq'</span>,                                                                                                   │
│     <span style="color: #008000; text-decoration-color: #008000">'to_hdf'</span>,                                                                                                   │
│     <span style="color: #008000; text-decoration-color: #008000">'to_html'</span>,                                                                                                  │
│     <span style="color: #008000; text-decoration-color: #008000">'to_json'</span>,                                                                                                  │
│     <span style="color: #008000; text-decoration-color: #008000">'to_latex'</span>,                                                                                                 │
│     <span style="color: #008000; text-decoration-color: #008000">'to_markdown'</span>,                                                                                              │
│     <span style="color: #008000; text-decoration-color: #008000">'to_numpy'</span>,                                                                                                 │
│     <span style="color: #008000; text-decoration-color: #008000">'to_orc'</span>,                                                                                                   │
│     <span style="color: #008000; text-decoration-color: #008000">'to_parquet'</span>,                                                                                               │
│     <span style="color: #008000; text-decoration-color: #008000">'to_period'</span>,                                                                                                │
│     <span style="color: #008000; text-decoration-color: #008000">'to_pickle'</span>,                                                                                                │
│     <span style="color: #008000; text-decoration-color: #008000">'to_records'</span>,                                                                                               │
│     <span style="color: #008000; text-decoration-color: #008000">'to_sql'</span>,                                                                                                   │
│     <span style="color: #008000; text-decoration-color: #008000">'to_stata'</span>,                                                                                                 │
│     <span style="color: #008000; text-decoration-color: #008000">'to_string'</span>,                                                                                                │
│     <span style="color: #008000; text-decoration-color: #008000">'to_timestamp'</span>,                                                                                             │
│     <span style="color: #008000; text-decoration-color: #008000">'to_xarray'</span>,                                                                                                │
│     <span style="color: #008000; text-decoration-color: #008000">'to_xml'</span>                                                                                                    │
│ <span style="font-weight: bold">]</span>                                                                                                               │
╰─────────────────────────────────────────────────────────────────────────────────────────────────────────────────╯
</pre>
</div>
</div>
<div class="cell" data-execution_count="47">
<div class="sourceCode cell-code" id="cb59" style="background: #f1f3f5;"><pre class="sourceCode python code-with-copy"><code class="sourceCode python"><span id="cb59-1">q <span class="op" style="color: #5E5E5E;">=</span> <span class="st" style="color: #20794D;">"normal"</span></span></code></pre></div>
</div>
<div class="cell" data-execution_count="55">
<div class="sourceCode cell-code" id="cb60" style="background: #f1f3f5;"><pre class="sourceCode python code-with-copy"><code class="sourceCode python"><span id="cb60-1">np.random.normal</span></code></pre></div>
<div class="cell-output cell-output-display" data-execution_count="55">
<pre><code>&lt;function RandomState.normal&gt;</code></pre>
</div>
</div>
<div class="cell" data-execution_count="65">
<div class="sourceCode cell-code" id="cb62" style="background: #f1f3f5;"><pre class="sourceCode python code-with-copy"><code class="sourceCode python"><span id="cb62-1"><span class="im" style="color: #00769E;">from</span> rich <span class="im" style="color: #00769E;">import</span> inspect</span>
<span id="cb62-2"></span>
<span id="cb62-3">inspect(<span class="bu" style="color: null;">eval</span>(<span class="ss" style="color: #20794D;">f"np.random.</span><span class="sc" style="color: #5E5E5E;">{</span>q<span class="sc" style="color: #5E5E5E;">}</span><span class="ss" style="color: #20794D;">"</span>), methods<span class="op" style="color: #5E5E5E;">=</span><span class="va" style="color: #111111;">True</span>, <span class="bu" style="color: null;">all</span><span class="op" style="color: #5E5E5E;">=</span><span class="va" style="color: #111111;">True</span>)</span></code></pre></div>
<div class="cell-output cell-output-display">
<pre style="white-space:pre;overflow-x:auto;line-height:normal;font-family:Menlo,'DejaVu Sans Mono',consolas,'Courier New',monospace"><span style="color: #000080; text-decoration-color: #000080">╭─────────────── </span><span style="color: #000080; text-decoration-color: #000080; font-weight: bold">&lt;</span><span style="color: #ff00ff; text-decoration-color: #ff00ff; font-weight: bold">built-in</span><span style="color: #000000; text-decoration-color: #000000"> method normal of numpy.random.mtrand.RandomState object at </span><span style="color: #008080; text-decoration-color: #008080; font-weight: bold">0x10c627840</span><span style="color: #000080; text-decoration-color: #000080; font-weight: bold">&gt;</span><span style="color: #000080; text-decoration-color: #000080"> ───────────────╮</span>
<span style="color: #000080; text-decoration-color: #000080">│</span> <span style="color: #00ffff; text-decoration-color: #00ffff; font-style: italic">def </span><span style="color: #800000; text-decoration-color: #800000; font-weight: bold">RandomState.normal</span><span style="font-weight: bold">(</span><span style="color: #808000; text-decoration-color: #808000">...</span><span style="font-weight: bold">)</span>                                                                                     <span style="color: #000080; text-decoration-color: #000080">│</span>
<span style="color: #000080; text-decoration-color: #000080">│</span>                                                                                                                 <span style="color: #000080; text-decoration-color: #000080">│</span>
<span style="color: #000080; text-decoration-color: #000080">│</span> <span style="color: #800080; text-decoration-color: #800080; font-weight: bold">normal</span><span style="color: #008080; text-decoration-color: #008080; font-weight: bold">(</span><span style="color: #808000; text-decoration-color: #808000">loc</span><span style="color: #008080; text-decoration-color: #008080">=</span><span style="color: #008080; text-decoration-color: #008080; font-weight: bold">0.0</span><span style="color: #008080; text-decoration-color: #008080">, </span><span style="color: #808000; text-decoration-color: #808000">scale</span><span style="color: #008080; text-decoration-color: #008080">=</span><span style="color: #008080; text-decoration-color: #008080; font-weight: bold">1.0</span><span style="color: #008080; text-decoration-color: #008080">, </span><span style="color: #808000; text-decoration-color: #808000">size</span><span style="color: #008080; text-decoration-color: #008080">=</span><span style="color: #800080; text-decoration-color: #800080; font-style: italic">None</span><span style="color: #008080; text-decoration-color: #008080; font-weight: bold">)</span>                                                                           <span style="color: #000080; text-decoration-color: #000080">│</span>
<span style="color: #000080; text-decoration-color: #000080">│</span>                                                                                                                 <span style="color: #000080; text-decoration-color: #000080">│</span>
<span style="color: #000080; text-decoration-color: #000080">│</span>            <span style="color: #bfbf7f; text-decoration-color: #bfbf7f; font-style: italic">__doc__</span> = <span style="color: #008000; text-decoration-color: #008000">'\n        normal(loc=0.0, scale=1.0, size=None)\n\n        Draw random samples from a </span>    <span style="color: #000080; text-decoration-color: #000080">│</span>
<span style="color: #000080; text-decoration-color: #000080">│</span>                      <span style="color: #008000; text-decoration-color: #008000">normal (Gaussian) distribution.\n\n        The probability density function of the normal </span> <span style="color: #000080; text-decoration-color: #000080">│</span>
<span style="color: #000080; text-decoration-color: #000080">│</span>                      <span style="color: #008000; text-decoration-color: #008000">distribution, first\n        derived by De Moivre and 200 years later by both Gauss and </span>   <span style="color: #000080; text-decoration-color: #000080">│</span>
<span style="color: #000080; text-decoration-color: #000080">│</span>                      <span style="color: #008000; text-decoration-color: #008000">Laplace\n        independently [2]_, is often called the bell curve because of\n        </span>   <span style="color: #000080; text-decoration-color: #000080">│</span>
<span style="color: #000080; text-decoration-color: #000080">│</span>                      <span style="color: #008000; text-decoration-color: #008000">its characteristic shape (see the example below).\n\n        The normal distributions </span>     <span style="color: #000080; text-decoration-color: #000080">│</span>
<span style="color: #000080; text-decoration-color: #000080">│</span>                      <span style="color: #008000; text-decoration-color: #008000">occurs often in nature.  For example, it\n        describes the commonly occurring </span>        <span style="color: #000080; text-decoration-color: #000080">│</span>
<span style="color: #000080; text-decoration-color: #000080">│</span>                      <span style="color: #008000; text-decoration-color: #008000">distribution of samples influenced\n        by a large number of tiny, random </span>             <span style="color: #000080; text-decoration-color: #000080">│</span>
<span style="color: #000080; text-decoration-color: #000080">│</span>                      <span style="color: #008000; text-decoration-color: #008000">disturbances, each with its own\n        unique distribution [2]_.\n\n        .. note::\n </span> <span style="color: #000080; text-decoration-color: #000080">│</span>
<span style="color: #000080; text-decoration-color: #000080">│</span>                      <span style="color: #008000; text-decoration-color: #008000">New code should use the ``normal`` method of a ``default_rng()``\n            instance </span>    <span style="color: #000080; text-decoration-color: #000080">│</span>
<span style="color: #000080; text-decoration-color: #000080">│</span>                      <span style="color: #008000; text-decoration-color: #008000">instead; please see the :ref:`random-quick-start`.\n\n        Parameters\n        </span>         <span style="color: #000080; text-decoration-color: #000080">│</span>
<span style="color: #000080; text-decoration-color: #000080">│</span>                      <span style="color: #008000; text-decoration-color: #008000">----------\n        loc : float or array_like of floats\n            Mean ("centre") of </span>   <span style="color: #000080; text-decoration-color: #000080">│</span>
<span style="color: #000080; text-decoration-color: #000080">│</span>                      <span style="color: #008000; text-decoration-color: #008000">the distribution.\n        scale : float or array_like of floats\n            Standard </span>    <span style="color: #000080; text-decoration-color: #000080">│</span>
<span style="color: #000080; text-decoration-color: #000080">│</span>                      <span style="color: #008000; text-decoration-color: #008000">deviation (spread or "width") of the distribution. Must be\n            non-negative.\n   </span> <span style="color: #000080; text-decoration-color: #000080">│</span>
<span style="color: #000080; text-decoration-color: #000080">│</span>                      <span style="color: #008000; text-decoration-color: #008000">size : int or tuple of ints, optional\n            Output shape.  If the given shape is, </span>  <span style="color: #000080; text-decoration-color: #000080">│</span>
<span style="color: #000080; text-decoration-color: #000080">│</span>                      <span style="color: #008000; text-decoration-color: #008000">e.g., ``(m, n, k)``, then\n            ``m * n * k`` samples are drawn.  If size is </span>       <span style="color: #000080; text-decoration-color: #000080">│</span>
<span style="color: #000080; text-decoration-color: #000080">│</span>                      <span style="color: #008000; text-decoration-color: #008000">``None`` (default),\n            a single value is returned if ``loc`` and ``scale`` are </span>  <span style="color: #000080; text-decoration-color: #000080">│</span>
<span style="color: #000080; text-decoration-color: #000080">│</span>                      <span style="color: #008000; text-decoration-color: #008000">both scalars.\n            Otherwise, ``np.broadcast(loc, scale).size`` samples are </span>       <span style="color: #000080; text-decoration-color: #000080">│</span>
<span style="color: #000080; text-decoration-color: #000080">│</span>                      <span style="color: #008000; text-decoration-color: #008000">drawn.\n\n        Returns\n        -------\n        out : ndarray or scalar\n            </span>  <span style="color: #000080; text-decoration-color: #000080">│</span>
<span style="color: #000080; text-decoration-color: #000080">│</span>                      <span style="color: #008000; text-decoration-color: #008000">Drawn samples from the parameterized normal distribution.\n\n        See Also\n        </span>    <span style="color: #000080; text-decoration-color: #000080">│</span>
<span style="color: #000080; text-decoration-color: #000080">│</span>                      <span style="color: #008000; text-decoration-color: #008000">--------\n        scipy.stats.norm : probability density function, distribution or\n      </span> <span style="color: #000080; text-decoration-color: #000080">│</span>
<span style="color: #000080; text-decoration-color: #000080">│</span>                      <span style="color: #008000; text-decoration-color: #008000">cumulative density function, etc.\n        random.Generator.normal: which should be used </span>  <span style="color: #000080; text-decoration-color: #000080">│</span>
<span style="color: #000080; text-decoration-color: #000080">│</span>                      <span style="color: #008000; text-decoration-color: #008000">for new code.\n\n        Notes\n        -----\n        The probability density for the </span>    <span style="color: #000080; text-decoration-color: #000080">│</span>
<span style="color: #000080; text-decoration-color: #000080">│</span>                      <span style="color: #008000; text-decoration-color: #008000">Gaussian distribution is\n\n        .. math:: p(x) = \\frac{1}{\\sqrt{ 2 \\pi \\sigma^2 </span>   <span style="color: #000080; text-decoration-color: #000080">│</span>
<span style="color: #000080; text-decoration-color: #000080">│</span>                      <span style="color: #008000; text-decoration-color: #008000">}}\n                         e^{ - \\frac{ (x - \\mu)^2 } {2 \\sigma^2} },\n\n        </span>     <span style="color: #000080; text-decoration-color: #000080">│</span>
<span style="color: #000080; text-decoration-color: #000080">│</span>                      <span style="color: #008000; text-decoration-color: #008000">where :math:`\\mu` is the mean and :math:`\\sigma` the standard\n        deviation. The </span>   <span style="color: #000080; text-decoration-color: #000080">│</span>
<span style="color: #000080; text-decoration-color: #000080">│</span>                      <span style="color: #008000; text-decoration-color: #008000">square of the standard deviation, :math:`\\sigma^2`,\n        is called the variance.\n\n </span> <span style="color: #000080; text-decoration-color: #000080">│</span>
<span style="color: #000080; text-decoration-color: #000080">│</span>                      <span style="color: #008000; text-decoration-color: #008000">The function has its peak at the mean, and its "spread" increases with\n        the </span>       <span style="color: #000080; text-decoration-color: #000080">│</span>
<span style="color: #000080; text-decoration-color: #000080">│</span>                      <span style="color: #008000; text-decoration-color: #008000">standard deviation (the function reaches 0.607 times its maximum at\n        :math:`x + </span>   <span style="color: #000080; text-decoration-color: #000080">│</span>
<span style="color: #000080; text-decoration-color: #000080">│</span>                      <span style="color: #008000; text-decoration-color: #008000">\\sigma` and :math:`x - \\sigma` [2]_).  This implies that\n        normal is more likely </span> <span style="color: #000080; text-decoration-color: #000080">│</span>
<span style="color: #000080; text-decoration-color: #000080">│</span>                      <span style="color: #008000; text-decoration-color: #008000">to return samples lying close to the mean, rather\n        than those far away.\n\n       </span> <span style="color: #000080; text-decoration-color: #000080">│</span>
<span style="color: #000080; text-decoration-color: #000080">│</span>                      <span style="color: #008000; text-decoration-color: #008000">References\n        ----------\n        .. [1] Wikipedia, "Normal distribution",\n        </span> <span style="color: #000080; text-decoration-color: #000080">│</span>
<span style="color: #000080; text-decoration-color: #000080">│</span>                      <span style="color: #008000; text-decoration-color: #008000">https://en.wikipedia.org/wiki/Normal_distribution\n        .. [2] P. R. Peebles Jr., </span>      <span style="color: #000080; text-decoration-color: #000080">│</span>
<span style="color: #000080; text-decoration-color: #000080">│</span>                      <span style="color: #008000; text-decoration-color: #008000">"Central Limit Theorem" in "Probability,\n               Random Variables and Random </span>      <span style="color: #000080; text-decoration-color: #000080">│</span>
<span style="color: #000080; text-decoration-color: #000080">│</span>                      <span style="color: #008000; text-decoration-color: #008000">Signal Principles", 4th ed., 2001,\n               pp. 51, 51, 125.\n\n        Examples\n </span> <span style="color: #000080; text-decoration-color: #000080">│</span>
<span style="color: #000080; text-decoration-color: #000080">│</span>                      <span style="color: #008000; text-decoration-color: #008000">--------\n        Draw samples from the distribution:\n\n        &gt;&gt;&gt; mu, sigma = 0, 0.1 # </span> <span style="color: #000080; text-decoration-color: #000080">│</span>
<span style="color: #000080; text-decoration-color: #000080">│</span>                      <span style="color: #008000; text-decoration-color: #008000">mean and standard deviation\n        &gt;&gt;&gt; s = np.random.normal(mu, sigma, 1000)\n\n        </span> <span style="color: #000080; text-decoration-color: #000080">│</span>
<span style="color: #000080; text-decoration-color: #000080">│</span>                      <span style="color: #008000; text-decoration-color: #008000">Verify the mean and the variance:\n\n        &gt;&gt;&gt; abs(mu - np.mean(s))\n        0.0  # may </span> <span style="color: #000080; text-decoration-color: #000080">│</span>
<span style="color: #000080; text-decoration-color: #000080">│</span>                      <span style="color: #008000; text-decoration-color: #008000">vary\n\n        &gt;&gt;&gt; abs(sigma - np.std(s, ddof=1))\n        0.1  # may vary\n\n        </span>    <span style="color: #000080; text-decoration-color: #000080">│</span>
<span style="color: #000080; text-decoration-color: #000080">│</span>                      <span style="color: #008000; text-decoration-color: #008000">Display the histogram of the samples, along with\n        the probability density </span>         <span style="color: #000080; text-decoration-color: #000080">│</span>
<span style="color: #000080; text-decoration-color: #000080">│</span>                      <span style="color: #008000; text-decoration-color: #008000">function:\n\n        &gt;&gt;&gt; import matplotlib.pyplot as plt\n        &gt;&gt;&gt; count, bins, ignored</span> <span style="color: #000080; text-decoration-color: #000080">│</span>
<span style="color: #000080; text-decoration-color: #000080">│</span>                      <span style="color: #008000; text-decoration-color: #008000">= plt.hist(s, 30, density=True)\n        &gt;&gt;&gt; plt.plot(bins, 1/(sigma * np.sqrt(2 * np.pi))</span> <span style="color: #000080; text-decoration-color: #000080">│</span>
<span style="color: #000080; text-decoration-color: #000080">│</span>                      <span style="color: #008000; text-decoration-color: #008000">*\n        ...                np.exp( - (bins - mu)**2 / (2 * sigma**2) ),\n        ...   </span> <span style="color: #000080; text-decoration-color: #000080">│</span>
<span style="color: #000080; text-decoration-color: #000080">│</span>                      <span style="color: #008000; text-decoration-color: #008000">linewidth=2, color=\'r\')\n        &gt;&gt;&gt; plt.show()\n\n        Two-by-four array of samples </span> <span style="color: #000080; text-decoration-color: #000080">│</span>
<span style="color: #000080; text-decoration-color: #000080">│</span>                      <span style="color: #008000; text-decoration-color: #008000">from N(3, 6.25):\n\n        &gt;&gt;&gt; np.random.normal(3, 2.5, size=(2, 4))\n        </span>            <span style="color: #000080; text-decoration-color: #000080">│</span>
<span style="color: #000080; text-decoration-color: #000080">│</span>                      <span style="color: #008000; text-decoration-color: #008000">array([[-4.49401501,  4.00950034, -1.81814867,  7.29718677],   # random\n               [ </span> <span style="color: #000080; text-decoration-color: #000080">│</span>
<span style="color: #000080; text-decoration-color: #000080">│</span>                      <span style="color: #008000; text-decoration-color: #008000">0.39924804,  4.68456316,  4.99394529,  4.84057254]])  # random\n\n        '</span>                <span style="color: #000080; text-decoration-color: #000080">│</span>
<span style="color: #000080; text-decoration-color: #000080">│</span>         <span style="color: #bfbf7f; text-decoration-color: #bfbf7f; font-style: italic">__module__</span> = <span style="color: #800080; text-decoration-color: #800080; font-style: italic">None</span>                                                                                       <span style="color: #000080; text-decoration-color: #000080">│</span>
<span style="color: #000080; text-decoration-color: #000080">│</span>           <span style="color: #bfbf7f; text-decoration-color: #bfbf7f; font-style: italic">__name__</span> = <span style="color: #008000; text-decoration-color: #008000">'normal'</span>                                                                                   <span style="color: #000080; text-decoration-color: #000080">│</span>
<span style="color: #000080; text-decoration-color: #000080">│</span>       <span style="color: #bfbf7f; text-decoration-color: #bfbf7f; font-style: italic">__qualname__</span> = <span style="color: #008000; text-decoration-color: #008000">'RandomState.normal'</span>                                                                       <span style="color: #000080; text-decoration-color: #000080">│</span>
<span style="color: #000080; text-decoration-color: #000080">│</span>           <span style="color: #bfbf7f; text-decoration-color: #bfbf7f; font-style: italic">__self__</span> = <span style="color: #800080; text-decoration-color: #800080; font-weight: bold">RandomState</span><span style="font-weight: bold">(</span>MT19937<span style="font-weight: bold">)</span> at <span style="color: #008080; text-decoration-color: #008080; font-weight: bold">0x10C627840</span>                                                        <span style="color: #000080; text-decoration-color: #000080">│</span>
<span style="color: #000080; text-decoration-color: #000080">│</span> <span style="color: #bfbf7f; text-decoration-color: #bfbf7f; font-style: italic">__text_signature__</span> = <span style="color: #800080; text-decoration-color: #800080; font-style: italic">None</span>                                                                                       <span style="color: #000080; text-decoration-color: #000080">│</span>
<span style="color: #000080; text-decoration-color: #000080">│</span>           <span style="color: #bfbf7f; text-decoration-color: #bfbf7f; font-style: italic">__call__</span> = <span style="color: #00ffff; text-decoration-color: #00ffff; font-style: italic">def </span><span style="color: #800000; text-decoration-color: #800000; font-weight: bold">__call__</span><span style="font-weight: bold">(</span>*args, **kwargs<span style="font-weight: bold">)</span>: <span style="color: #7f7f7f; text-decoration-color: #7f7f7f">Call self as a function.</span>                                    <span style="color: #000080; text-decoration-color: #000080">│</span>
<span style="color: #000080; text-decoration-color: #000080">│</span>          <span style="color: #bfbf7f; text-decoration-color: #bfbf7f; font-style: italic">__class__</span> = <span style="color: #00ffff; text-decoration-color: #00ffff; font-style: italic">class </span><span style="color: #800000; text-decoration-color: #800000; font-weight: bold">__class__</span><span style="font-weight: bold">()</span>:                                                                         <span style="color: #000080; text-decoration-color: #000080">│</span>
<span style="color: #000080; text-decoration-color: #000080">│</span>        <span style="color: #bfbf7f; text-decoration-color: #bfbf7f; font-style: italic">__delattr__</span> = <span style="color: #00ffff; text-decoration-color: #00ffff; font-style: italic">def </span><span style="color: #800000; text-decoration-color: #800000; font-weight: bold">__delattr__</span><span style="font-weight: bold">(</span>name, <span style="color: #800080; text-decoration-color: #800080">/</span><span style="font-weight: bold">)</span>: <span style="color: #7f7f7f; text-decoration-color: #7f7f7f">Implement </span><span style="color: #bf7fbf; text-decoration-color: #bf7fbf; font-weight: bold">delattr</span><span style="color: #7f7f7f; text-decoration-color: #7f7f7f; font-weight: bold">(</span><span style="color: #7f7f7f; text-decoration-color: #7f7f7f">self, name</span><span style="color: #7f7f7f; text-decoration-color: #7f7f7f; font-weight: bold">)</span><span style="color: #7f7f7f; text-decoration-color: #7f7f7f">.</span>                                   <span style="color: #000080; text-decoration-color: #000080">│</span>
<span style="color: #000080; text-decoration-color: #000080">│</span>            <span style="color: #bfbf7f; text-decoration-color: #bfbf7f; font-style: italic">__dir__</span> = <span style="color: #00ffff; text-decoration-color: #00ffff; font-style: italic">def </span><span style="color: #800000; text-decoration-color: #800000; font-weight: bold">__dir__</span><span style="font-weight: bold">()</span>: <span style="color: #7f7f7f; text-decoration-color: #7f7f7f">Default </span><span style="color: #bf7fbf; text-decoration-color: #bf7fbf; font-weight: bold">dir</span><span style="color: #7f7f7f; text-decoration-color: #7f7f7f; font-weight: bold">()</span><span style="color: #7f7f7f; text-decoration-color: #7f7f7f"> implementation.</span>                                               <span style="color: #000080; text-decoration-color: #000080">│</span>
<span style="color: #000080; text-decoration-color: #000080">│</span>             <span style="color: #bfbf7f; text-decoration-color: #bfbf7f; font-style: italic">__eq__</span> = <span style="color: #00ffff; text-decoration-color: #00ffff; font-style: italic">def </span><span style="color: #800000; text-decoration-color: #800000; font-weight: bold">__eq__</span><span style="font-weight: bold">(</span>value, <span style="color: #800080; text-decoration-color: #800080">/</span><span style="font-weight: bold">)</span>: <span style="color: #7f7f7f; text-decoration-color: #7f7f7f">Return </span><span style="color: #bfbf7f; text-decoration-color: #bfbf7f">self</span><span style="color: #7f7f7f; text-decoration-color: #7f7f7f">==value.</span>                                                  <span style="color: #000080; text-decoration-color: #000080">│</span>
<span style="color: #000080; text-decoration-color: #000080">│</span>         <span style="color: #bfbf7f; text-decoration-color: #bfbf7f; font-style: italic">__format__</span> = <span style="color: #00ffff; text-decoration-color: #00ffff; font-style: italic">def </span><span style="color: #800000; text-decoration-color: #800000; font-weight: bold">__format__</span><span style="font-weight: bold">(</span>format_spec, <span style="color: #800080; text-decoration-color: #800080">/</span><span style="font-weight: bold">)</span>: <span style="color: #7f7f7f; text-decoration-color: #7f7f7f">Default object formatter.</span>                                  <span style="color: #000080; text-decoration-color: #000080">│</span>
<span style="color: #000080; text-decoration-color: #000080">│</span>             <span style="color: #bfbf7f; text-decoration-color: #bfbf7f; font-style: italic">__ge__</span> = <span style="color: #00ffff; text-decoration-color: #00ffff; font-style: italic">def </span><span style="color: #800000; text-decoration-color: #800000; font-weight: bold">__ge__</span><span style="font-weight: bold">(</span>value, <span style="color: #800080; text-decoration-color: #800080">/</span><span style="font-weight: bold">)</span>: <span style="color: #7f7f7f; text-decoration-color: #7f7f7f">Return self&gt;=value.</span>                                                  <span style="color: #000080; text-decoration-color: #000080">│</span>
<span style="color: #000080; text-decoration-color: #000080">│</span>   <span style="color: #bfbf7f; text-decoration-color: #bfbf7f; font-style: italic">__getattribute__</span> = <span style="color: #00ffff; text-decoration-color: #00ffff; font-style: italic">def </span><span style="color: #800000; text-decoration-color: #800000; font-weight: bold">__getattribute__</span><span style="font-weight: bold">(</span>name, <span style="color: #800080; text-decoration-color: #800080">/</span><span style="font-weight: bold">)</span>: <span style="color: #7f7f7f; text-decoration-color: #7f7f7f">Return </span><span style="color: #bf7fbf; text-decoration-color: #bf7fbf; font-weight: bold">getattr</span><span style="color: #7f7f7f; text-decoration-color: #7f7f7f; font-weight: bold">(</span><span style="color: #7f7f7f; text-decoration-color: #7f7f7f">self, name</span><span style="color: #7f7f7f; text-decoration-color: #7f7f7f; font-weight: bold">)</span><span style="color: #7f7f7f; text-decoration-color: #7f7f7f">.</span>                                 <span style="color: #000080; text-decoration-color: #000080">│</span>
<span style="color: #000080; text-decoration-color: #000080">│</span>             <span style="color: #bfbf7f; text-decoration-color: #bfbf7f; font-style: italic">__gt__</span> = <span style="color: #00ffff; text-decoration-color: #00ffff; font-style: italic">def </span><span style="color: #800000; text-decoration-color: #800000; font-weight: bold">__gt__</span><span style="font-weight: bold">(</span>value, <span style="color: #800080; text-decoration-color: #800080">/</span><span style="font-weight: bold">)</span>: <span style="color: #7f7f7f; text-decoration-color: #7f7f7f">Return self&gt;value.</span>                                                   <span style="color: #000080; text-decoration-color: #000080">│</span>
<span style="color: #000080; text-decoration-color: #000080">│</span>           <span style="color: #bfbf7f; text-decoration-color: #bfbf7f; font-style: italic">__hash__</span> = <span style="color: #00ffff; text-decoration-color: #00ffff; font-style: italic">def </span><span style="color: #800000; text-decoration-color: #800000; font-weight: bold">__hash__</span><span style="font-weight: bold">()</span>: <span style="color: #7f7f7f; text-decoration-color: #7f7f7f">Return </span><span style="color: #bf7fbf; text-decoration-color: #bf7fbf; font-weight: bold">hash</span><span style="color: #7f7f7f; text-decoration-color: #7f7f7f; font-weight: bold">(</span><span style="color: #7f7f7f; text-decoration-color: #7f7f7f">self</span><span style="color: #7f7f7f; text-decoration-color: #7f7f7f; font-weight: bold">)</span><span style="color: #7f7f7f; text-decoration-color: #7f7f7f">.</span>                                                         <span style="color: #000080; text-decoration-color: #000080">│</span>
<span style="color: #000080; text-decoration-color: #000080">│</span>           <span style="color: #bfbf7f; text-decoration-color: #bfbf7f; font-style: italic">__init__</span> = <span style="color: #00ffff; text-decoration-color: #00ffff; font-style: italic">def </span><span style="color: #800000; text-decoration-color: #800000; font-weight: bold">__init__</span><span style="font-weight: bold">(</span>*args, **kwargs<span style="font-weight: bold">)</span>: <span style="color: #7f7f7f; text-decoration-color: #7f7f7f">Initialize self.  See </span><span style="color: #bf7fbf; text-decoration-color: #bf7fbf; font-weight: bold">help</span><span style="color: #7f7f7f; text-decoration-color: #7f7f7f; font-weight: bold">(</span><span style="color: #bf7fbf; text-decoration-color: #bf7fbf; font-weight: bold">type</span><span style="color: #7f7f7f; text-decoration-color: #7f7f7f; font-weight: bold">(</span><span style="color: #7f7f7f; text-decoration-color: #7f7f7f">self</span><span style="color: #7f7f7f; text-decoration-color: #7f7f7f; font-weight: bold">))</span><span style="color: #7f7f7f; text-decoration-color: #7f7f7f"> for accurate </span>        <span style="color: #000080; text-decoration-color: #000080">│</span>
<span style="color: #000080; text-decoration-color: #000080">│</span>                      <span style="color: #7f7f7f; text-decoration-color: #7f7f7f">signature.</span>                                                                                 <span style="color: #000080; text-decoration-color: #000080">│</span>
<span style="color: #000080; text-decoration-color: #000080">│</span>  <span style="color: #bfbf7f; text-decoration-color: #bfbf7f; font-style: italic">__init_subclass__</span> = <span style="color: #00ffff; text-decoration-color: #00ffff; font-style: italic">def </span><span style="color: #800000; text-decoration-color: #800000; font-weight: bold">__init_subclass__</span><span style="font-weight: bold">(</span><span style="color: #808000; text-decoration-color: #808000">...</span><span style="font-weight: bold">)</span> <span style="color: #7f7f7f; text-decoration-color: #7f7f7f">This method is called when a class is subclassed.</span>               <span style="color: #000080; text-decoration-color: #000080">│</span>
<span style="color: #000080; text-decoration-color: #000080">│</span>             <span style="color: #bfbf7f; text-decoration-color: #bfbf7f; font-style: italic">__le__</span> = <span style="color: #00ffff; text-decoration-color: #00ffff; font-style: italic">def </span><span style="color: #800000; text-decoration-color: #800000; font-weight: bold">__le__</span><span style="font-weight: bold">(</span>value, <span style="color: #800080; text-decoration-color: #800080">/</span><span style="font-weight: bold">)</span>: <span style="color: #7f7f7f; text-decoration-color: #7f7f7f">Return self&lt;=value.</span>                                                  <span style="color: #000080; text-decoration-color: #000080">│</span>
<span style="color: #000080; text-decoration-color: #000080">│</span>             <span style="color: #bfbf7f; text-decoration-color: #bfbf7f; font-style: italic">__lt__</span> = <span style="color: #00ffff; text-decoration-color: #00ffff; font-style: italic">def </span><span style="color: #800000; text-decoration-color: #800000; font-weight: bold">__lt__</span><span style="font-weight: bold">(</span>value, <span style="color: #800080; text-decoration-color: #800080">/</span><span style="font-weight: bold">)</span>: <span style="color: #7f7f7f; text-decoration-color: #7f7f7f">Return self&lt;value.</span>                                                   <span style="color: #000080; text-decoration-color: #000080">│</span>
<span style="color: #000080; text-decoration-color: #000080">│</span>             <span style="color: #bfbf7f; text-decoration-color: #bfbf7f; font-style: italic">__ne__</span> = <span style="color: #00ffff; text-decoration-color: #00ffff; font-style: italic">def </span><span style="color: #800000; text-decoration-color: #800000; font-weight: bold">__ne__</span><span style="font-weight: bold">(</span>value, <span style="color: #800080; text-decoration-color: #800080">/</span><span style="font-weight: bold">)</span>: <span style="color: #7f7f7f; text-decoration-color: #7f7f7f">Return self!=value.</span>                                                  <span style="color: #000080; text-decoration-color: #000080">│</span>
<span style="color: #000080; text-decoration-color: #000080">│</span>            <span style="color: #bfbf7f; text-decoration-color: #bfbf7f; font-style: italic">__new__</span> = <span style="color: #00ffff; text-decoration-color: #00ffff; font-style: italic">def </span><span style="color: #800000; text-decoration-color: #800000; font-weight: bold">__new__</span><span style="font-weight: bold">(</span>*args, **kwargs<span style="font-weight: bold">)</span>: <span style="color: #7f7f7f; text-decoration-color: #7f7f7f">Create and return a new object.  See </span><span style="color: #bf7fbf; text-decoration-color: #bf7fbf; font-weight: bold">help</span><span style="color: #7f7f7f; text-decoration-color: #7f7f7f; font-weight: bold">(</span><span style="color: #7f7f7f; text-decoration-color: #7f7f7f">type</span><span style="color: #7f7f7f; text-decoration-color: #7f7f7f; font-weight: bold">)</span><span style="color: #7f7f7f; text-decoration-color: #7f7f7f"> for accurate</span> <span style="color: #000080; text-decoration-color: #000080">│</span>
<span style="color: #000080; text-decoration-color: #000080">│</span>                      <span style="color: #7f7f7f; text-decoration-color: #7f7f7f">signature.</span>                                                                                 <span style="color: #000080; text-decoration-color: #000080">│</span>
<span style="color: #000080; text-decoration-color: #000080">│</span>         <span style="color: #bfbf7f; text-decoration-color: #bfbf7f; font-style: italic">__reduce__</span> = <span style="color: #00ffff; text-decoration-color: #00ffff; font-style: italic">def </span><span style="color: #800000; text-decoration-color: #800000; font-weight: bold">__reduce__</span><span style="font-weight: bold">(</span><span style="color: #808000; text-decoration-color: #808000">...</span><span style="font-weight: bold">)</span> <span style="color: #7f7f7f; text-decoration-color: #7f7f7f">Helper for pickle.</span>                                                     <span style="color: #000080; text-decoration-color: #000080">│</span>
<span style="color: #000080; text-decoration-color: #000080">│</span>      <span style="color: #bfbf7f; text-decoration-color: #bfbf7f; font-style: italic">__reduce_ex__</span> = <span style="color: #00ffff; text-decoration-color: #00ffff; font-style: italic">def </span><span style="color: #800000; text-decoration-color: #800000; font-weight: bold">__reduce_ex__</span><span style="font-weight: bold">(</span>protocol, <span style="color: #800080; text-decoration-color: #800080">/</span><span style="font-weight: bold">)</span>: <span style="color: #7f7f7f; text-decoration-color: #7f7f7f">Helper for pickle.</span>                                         <span style="color: #000080; text-decoration-color: #000080">│</span>
<span style="color: #000080; text-decoration-color: #000080">│</span>           <span style="color: #bfbf7f; text-decoration-color: #bfbf7f; font-style: italic">__repr__</span> = <span style="color: #00ffff; text-decoration-color: #00ffff; font-style: italic">def </span><span style="color: #800000; text-decoration-color: #800000; font-weight: bold">__repr__</span><span style="font-weight: bold">()</span>: <span style="color: #7f7f7f; text-decoration-color: #7f7f7f">Return </span><span style="color: #bf7fbf; text-decoration-color: #bf7fbf; font-weight: bold">repr</span><span style="color: #7f7f7f; text-decoration-color: #7f7f7f; font-weight: bold">(</span><span style="color: #7f7f7f; text-decoration-color: #7f7f7f">self</span><span style="color: #7f7f7f; text-decoration-color: #7f7f7f; font-weight: bold">)</span><span style="color: #7f7f7f; text-decoration-color: #7f7f7f">.</span>                                                         <span style="color: #000080; text-decoration-color: #000080">│</span>
<span style="color: #000080; text-decoration-color: #000080">│</span>        <span style="color: #bfbf7f; text-decoration-color: #bfbf7f; font-style: italic">__setattr__</span> = <span style="color: #00ffff; text-decoration-color: #00ffff; font-style: italic">def </span><span style="color: #800000; text-decoration-color: #800000; font-weight: bold">__setattr__</span><span style="font-weight: bold">(</span>name, value, <span style="color: #800080; text-decoration-color: #800080">/</span><span style="font-weight: bold">)</span>: <span style="color: #7f7f7f; text-decoration-color: #7f7f7f">Implement </span><span style="color: #bf7fbf; text-decoration-color: #bf7fbf; font-weight: bold">setattr</span><span style="color: #7f7f7f; text-decoration-color: #7f7f7f; font-weight: bold">(</span><span style="color: #7f7f7f; text-decoration-color: #7f7f7f">self, name, value</span><span style="color: #7f7f7f; text-decoration-color: #7f7f7f; font-weight: bold">)</span><span style="color: #7f7f7f; text-decoration-color: #7f7f7f">.</span>                     <span style="color: #000080; text-decoration-color: #000080">│</span>
<span style="color: #000080; text-decoration-color: #000080">│</span>         <span style="color: #bfbf7f; text-decoration-color: #bfbf7f; font-style: italic">__sizeof__</span> = <span style="color: #00ffff; text-decoration-color: #00ffff; font-style: italic">def </span><span style="color: #800000; text-decoration-color: #800000; font-weight: bold">__sizeof__</span><span style="font-weight: bold">()</span>: <span style="color: #7f7f7f; text-decoration-color: #7f7f7f">Size of object in memory, in bytes.</span>                                      <span style="color: #000080; text-decoration-color: #000080">│</span>
<span style="color: #000080; text-decoration-color: #000080">│</span>            <span style="color: #bfbf7f; text-decoration-color: #bfbf7f; font-style: italic">__str__</span> = <span style="color: #00ffff; text-decoration-color: #00ffff; font-style: italic">def </span><span style="color: #800000; text-decoration-color: #800000; font-weight: bold">__str__</span><span style="font-weight: bold">()</span>: <span style="color: #7f7f7f; text-decoration-color: #7f7f7f">Return </span><span style="color: #bf7fbf; text-decoration-color: #bf7fbf; font-weight: bold">str</span><span style="color: #7f7f7f; text-decoration-color: #7f7f7f; font-weight: bold">(</span><span style="color: #7f7f7f; text-decoration-color: #7f7f7f">self</span><span style="color: #7f7f7f; text-decoration-color: #7f7f7f; font-weight: bold">)</span><span style="color: #7f7f7f; text-decoration-color: #7f7f7f">.</span>                                                           <span style="color: #000080; text-decoration-color: #000080">│</span>
<span style="color: #000080; text-decoration-color: #000080">│</span>   <span style="color: #bfbf7f; text-decoration-color: #bfbf7f; font-style: italic">__subclasshook__</span> = <span style="color: #00ffff; text-decoration-color: #00ffff; font-style: italic">def </span><span style="color: #800000; text-decoration-color: #800000; font-weight: bold">__subclasshook__</span><span style="font-weight: bold">(</span><span style="color: #808000; text-decoration-color: #808000">...</span><span style="font-weight: bold">)</span> <span style="color: #7f7f7f; text-decoration-color: #7f7f7f">Abstract classes can override this to customize </span><span style="color: #bf7fbf; text-decoration-color: #bf7fbf; font-weight: bold">issubclass</span><span style="color: #7f7f7f; text-decoration-color: #7f7f7f; font-weight: bold">()</span><span style="color: #7f7f7f; text-decoration-color: #7f7f7f">.</span>    <span style="color: #000080; text-decoration-color: #000080">│</span>
<span style="color: #000080; text-decoration-color: #000080">╰─────────────────────────────────────────────────────────────────────────────────────────────────────────────────╯</span>
</pre>
</div>
</div>
<div class="cell" data-execution_count="63">
<div class="sourceCode cell-code" id="cb63" style="background: #f1f3f5;"><pre class="sourceCode python code-with-copy"><code class="sourceCode python"><span id="cb63-1">inspect(inspect)</span></code></pre></div>
<div class="cell-output cell-output-display">
<pre style="white-space:pre;overflow-x:auto;line-height:normal;font-family:Menlo,'DejaVu Sans Mono',consolas,'Courier New',monospace"><span style="color: #000080; text-decoration-color: #000080">╭─────────────────────────────────────── </span><span style="color: #000080; text-decoration-color: #000080; font-weight: bold">&lt;</span><span style="color: #ff00ff; text-decoration-color: #ff00ff; font-weight: bold">function</span><span style="color: #000000; text-decoration-color: #000000"> inspect at </span><span style="color: #008080; text-decoration-color: #008080; font-weight: bold">0x10f3fc550</span><span style="color: #000080; text-decoration-color: #000080; font-weight: bold">&gt;</span><span style="color: #000080; text-decoration-color: #000080"> ───────────────────────────────────────╮</span>
<span style="color: #000080; text-decoration-color: #000080">│</span> <span style="color: #00ffff; text-decoration-color: #00ffff; font-style: italic">def </span><span style="color: #800000; text-decoration-color: #800000; font-weight: bold">inspect</span><span style="font-weight: bold">(</span>obj: Any, *, console: Optional<span style="font-weight: bold">[</span><span style="color: #800080; text-decoration-color: #800080; font-weight: bold">ForwardRef</span><span style="font-weight: bold">(</span><span style="color: #008000; text-decoration-color: #008000">'Console'</span><span style="font-weight: bold">)]</span> = <span style="color: #800080; text-decoration-color: #800080; font-style: italic">None</span>, title: Optional<span style="font-weight: bold">[</span>str<span style="font-weight: bold">]</span> = <span style="color: #800080; text-decoration-color: #800080; font-style: italic">None</span>, help:    <span style="color: #000080; text-decoration-color: #000080">│</span>
<span style="color: #000080; text-decoration-color: #000080">│</span> bool = <span style="color: #ff0000; text-decoration-color: #ff0000; font-style: italic">False</span>, methods: bool = <span style="color: #ff0000; text-decoration-color: #ff0000; font-style: italic">False</span>, docs: bool = <span style="color: #00ff00; text-decoration-color: #00ff00; font-style: italic">True</span>, private: bool = <span style="color: #ff0000; text-decoration-color: #ff0000; font-style: italic">False</span>, dunder: bool = <span style="color: #ff0000; text-decoration-color: #ff0000; font-style: italic">False</span>, sort: bool <span style="color: #000080; text-decoration-color: #000080">│</span>
<span style="color: #000080; text-decoration-color: #000080">│</span> = <span style="color: #00ff00; text-decoration-color: #00ff00; font-style: italic">True</span>, all: bool = <span style="color: #ff0000; text-decoration-color: #ff0000; font-style: italic">False</span>, value: bool = <span style="color: #00ff00; text-decoration-color: #00ff00; font-style: italic">True</span><span style="font-weight: bold">)</span> -&gt; <span style="color: #800080; text-decoration-color: #800080; font-style: italic">None</span>:                                                         <span style="color: #000080; text-decoration-color: #000080">│</span>
<span style="color: #000080; text-decoration-color: #000080">│</span>                                                                                                                 <span style="color: #000080; text-decoration-color: #000080">│</span>
<span style="color: #000080; text-decoration-color: #000080">│</span> <span style="color: #008080; text-decoration-color: #008080">Inspect any Python object.</span>                                                                                      <span style="color: #000080; text-decoration-color: #000080">│</span>
<span style="color: #000080; text-decoration-color: #000080">│</span>                                                                                                                 <span style="color: #000080; text-decoration-color: #000080">│</span>
<span style="color: #000080; text-decoration-color: #000080">│</span> <span style="color: #008080; text-decoration-color: #008080">* </span><span style="color: #800080; text-decoration-color: #800080; font-weight: bold">inspect</span><span style="color: #008080; text-decoration-color: #008080; font-weight: bold">(&lt;</span><span style="color: #ff00ff; text-decoration-color: #ff00ff; font-weight: bold">OBJECT</span><span style="color: #008080; text-decoration-color: #008080; font-weight: bold">&gt;)</span><span style="color: #008080; text-decoration-color: #008080"> to see summarized info.</span>                                                                     <span style="color: #000080; text-decoration-color: #000080">│</span>
<span style="color: #000080; text-decoration-color: #000080">│</span> <span style="color: #008080; text-decoration-color: #008080">* </span><span style="color: #800080; text-decoration-color: #800080; font-weight: bold">inspect</span><span style="color: #008080; text-decoration-color: #008080; font-weight: bold">(&lt;</span><span style="color: #ff00ff; text-decoration-color: #ff00ff; font-weight: bold">OBJECT</span><span style="color: #008080; text-decoration-color: #008080; font-weight: bold">&gt;</span><span style="color: #008080; text-decoration-color: #008080">, </span><span style="color: #808000; text-decoration-color: #808000">methods</span><span style="color: #008080; text-decoration-color: #008080">=</span><span style="color: #00ff00; text-decoration-color: #00ff00; font-style: italic">True</span><span style="color: #008080; text-decoration-color: #008080; font-weight: bold">)</span><span style="color: #008080; text-decoration-color: #008080"> to see methods.</span>                                                               <span style="color: #000080; text-decoration-color: #000080">│</span>
<span style="color: #000080; text-decoration-color: #000080">│</span> <span style="color: #008080; text-decoration-color: #008080">* </span><span style="color: #800080; text-decoration-color: #800080; font-weight: bold">inspect</span><span style="color: #008080; text-decoration-color: #008080; font-weight: bold">(&lt;</span><span style="color: #ff00ff; text-decoration-color: #ff00ff; font-weight: bold">OBJECT</span><span style="color: #008080; text-decoration-color: #008080; font-weight: bold">&gt;</span><span style="color: #008080; text-decoration-color: #008080">, </span><span style="color: #808000; text-decoration-color: #808000">help</span><span style="color: #008080; text-decoration-color: #008080">=</span><span style="color: #00ff00; text-decoration-color: #00ff00; font-style: italic">True</span><span style="color: #008080; text-decoration-color: #008080; font-weight: bold">)</span><span style="color: #008080; text-decoration-color: #008080"> to see full </span><span style="color: #008080; text-decoration-color: #008080; font-weight: bold">(</span><span style="color: #008080; text-decoration-color: #008080">non-abbreviated</span><span style="color: #008080; text-decoration-color: #008080; font-weight: bold">)</span><span style="color: #008080; text-decoration-color: #008080"> help.</span>                                              <span style="color: #000080; text-decoration-color: #000080">│</span>
<span style="color: #000080; text-decoration-color: #000080">│</span> <span style="color: #008080; text-decoration-color: #008080">* </span><span style="color: #800080; text-decoration-color: #800080; font-weight: bold">inspect</span><span style="color: #008080; text-decoration-color: #008080; font-weight: bold">(&lt;</span><span style="color: #ff00ff; text-decoration-color: #ff00ff; font-weight: bold">OBJECT</span><span style="color: #008080; text-decoration-color: #008080; font-weight: bold">&gt;</span><span style="color: #008080; text-decoration-color: #008080">, </span><span style="color: #808000; text-decoration-color: #808000">private</span><span style="color: #008080; text-decoration-color: #008080">=</span><span style="color: #00ff00; text-decoration-color: #00ff00; font-style: italic">True</span><span style="color: #008080; text-decoration-color: #008080; font-weight: bold">)</span><span style="color: #008080; text-decoration-color: #008080"> to see private attributes </span><span style="color: #008080; text-decoration-color: #008080; font-weight: bold">(</span><span style="color: #008080; text-decoration-color: #008080">single underscore</span><span style="color: #008080; text-decoration-color: #008080; font-weight: bold">)</span><span style="color: #008080; text-decoration-color: #008080">.</span>                                <span style="color: #000080; text-decoration-color: #000080">│</span>
<span style="color: #000080; text-decoration-color: #000080">│</span> <span style="color: #008080; text-decoration-color: #008080">* </span><span style="color: #800080; text-decoration-color: #800080; font-weight: bold">inspect</span><span style="color: #008080; text-decoration-color: #008080; font-weight: bold">(&lt;</span><span style="color: #ff00ff; text-decoration-color: #ff00ff; font-weight: bold">OBJECT</span><span style="color: #008080; text-decoration-color: #008080; font-weight: bold">&gt;</span><span style="color: #008080; text-decoration-color: #008080">, </span><span style="color: #808000; text-decoration-color: #808000">dunder</span><span style="color: #008080; text-decoration-color: #008080">=</span><span style="color: #00ff00; text-decoration-color: #00ff00; font-style: italic">True</span><span style="color: #008080; text-decoration-color: #008080; font-weight: bold">)</span><span style="color: #008080; text-decoration-color: #008080"> to see attributes beginning with double underscore.</span>                            <span style="color: #000080; text-decoration-color: #000080">│</span>
<span style="color: #000080; text-decoration-color: #000080">│</span> <span style="color: #008080; text-decoration-color: #008080">* </span><span style="color: #800080; text-decoration-color: #800080; font-weight: bold">inspect</span><span style="color: #008080; text-decoration-color: #008080; font-weight: bold">(&lt;</span><span style="color: #ff00ff; text-decoration-color: #ff00ff; font-weight: bold">OBJECT</span><span style="color: #008080; text-decoration-color: #008080; font-weight: bold">&gt;</span><span style="color: #008080; text-decoration-color: #008080">, </span><span style="color: #808000; text-decoration-color: #808000">all</span><span style="color: #008080; text-decoration-color: #008080">=</span><span style="color: #00ff00; text-decoration-color: #00ff00; font-style: italic">True</span><span style="color: #008080; text-decoration-color: #008080; font-weight: bold">)</span><span style="color: #008080; text-decoration-color: #008080"> to see all attributes.</span>                                                            <span style="color: #000080; text-decoration-color: #000080">│</span>
<span style="color: #000080; text-decoration-color: #000080">│</span>                                                                                                                 <span style="color: #000080; text-decoration-color: #000080">│</span>
<span style="color: #000080; text-decoration-color: #000080">│</span> <span style="color: #008080; text-decoration-color: #008080">Args:</span>                                                                                                           <span style="color: #000080; text-decoration-color: #000080">│</span>
<span style="color: #000080; text-decoration-color: #000080">│</span> <span style="color: #008080; text-decoration-color: #008080">    obj </span><span style="color: #008080; text-decoration-color: #008080; font-weight: bold">(</span><span style="color: #008080; text-decoration-color: #008080">Any</span><span style="color: #008080; text-decoration-color: #008080; font-weight: bold">)</span><span style="color: #008080; text-decoration-color: #008080">: An object to inspect.</span>                                                                            <span style="color: #000080; text-decoration-color: #000080">│</span>
<span style="color: #000080; text-decoration-color: #000080">│</span> <span style="color: #008080; text-decoration-color: #008080">    title </span><span style="color: #008080; text-decoration-color: #008080; font-weight: bold">(</span><span style="color: #008080; text-decoration-color: #008080">str, optional</span><span style="color: #008080; text-decoration-color: #008080; font-weight: bold">)</span><span style="color: #008080; text-decoration-color: #008080">: Title to display over inspect result, or </span><span style="color: #800080; text-decoration-color: #800080; font-style: italic">None</span><span style="color: #008080; text-decoration-color: #008080"> use type. Defaults to </span><span style="color: #800080; text-decoration-color: #800080; font-style: italic">None</span><span style="color: #008080; text-decoration-color: #008080">.</span>            <span style="color: #000080; text-decoration-color: #000080">│</span>
<span style="color: #000080; text-decoration-color: #000080">│</span> <span style="color: #008080; text-decoration-color: #008080">    help </span><span style="color: #008080; text-decoration-color: #008080; font-weight: bold">(</span><span style="color: #008080; text-decoration-color: #008080">bool, optional</span><span style="color: #008080; text-decoration-color: #008080; font-weight: bold">)</span><span style="color: #008080; text-decoration-color: #008080">: Show full help text rather than just first paragraph. Defaults to </span><span style="color: #ff0000; text-decoration-color: #ff0000; font-style: italic">False</span><span style="color: #008080; text-decoration-color: #008080">.</span>             <span style="color: #000080; text-decoration-color: #000080">│</span>
<span style="color: #000080; text-decoration-color: #000080">│</span> <span style="color: #008080; text-decoration-color: #008080">    methods </span><span style="color: #008080; text-decoration-color: #008080; font-weight: bold">(</span><span style="color: #008080; text-decoration-color: #008080">bool, optional</span><span style="color: #008080; text-decoration-color: #008080; font-weight: bold">)</span><span style="color: #008080; text-decoration-color: #008080">: Enable inspection of callables. Defaults to </span><span style="color: #ff0000; text-decoration-color: #ff0000; font-style: italic">False</span><span style="color: #008080; text-decoration-color: #008080">.</span>                                <span style="color: #000080; text-decoration-color: #000080">│</span>
<span style="color: #000080; text-decoration-color: #000080">│</span> <span style="color: #008080; text-decoration-color: #008080">    docs </span><span style="color: #008080; text-decoration-color: #008080; font-weight: bold">(</span><span style="color: #008080; text-decoration-color: #008080">bool, optional</span><span style="color: #008080; text-decoration-color: #008080; font-weight: bold">)</span><span style="color: #008080; text-decoration-color: #008080">: Also render doc strings. Defaults to </span><span style="color: #00ff00; text-decoration-color: #00ff00; font-style: italic">True</span><span style="color: #008080; text-decoration-color: #008080">.</span>                                           <span style="color: #000080; text-decoration-color: #000080">│</span>
<span style="color: #000080; text-decoration-color: #000080">│</span> <span style="color: #008080; text-decoration-color: #008080">    private </span><span style="color: #008080; text-decoration-color: #008080; font-weight: bold">(</span><span style="color: #008080; text-decoration-color: #008080">bool, optional</span><span style="color: #008080; text-decoration-color: #008080; font-weight: bold">)</span><span style="color: #008080; text-decoration-color: #008080">: Show private attributes </span><span style="color: #008080; text-decoration-color: #008080; font-weight: bold">(</span><span style="color: #008080; text-decoration-color: #008080">beginning with underscore</span><span style="color: #008080; text-decoration-color: #008080; font-weight: bold">)</span><span style="color: #008080; text-decoration-color: #008080">. Defaults to </span><span style="color: #ff0000; text-decoration-color: #ff0000; font-style: italic">False</span><span style="color: #008080; text-decoration-color: #008080">.</span>           <span style="color: #000080; text-decoration-color: #000080">│</span>
<span style="color: #000080; text-decoration-color: #000080">│</span> <span style="color: #008080; text-decoration-color: #008080">    dunder </span><span style="color: #008080; text-decoration-color: #008080; font-weight: bold">(</span><span style="color: #008080; text-decoration-color: #008080">bool, optional</span><span style="color: #008080; text-decoration-color: #008080; font-weight: bold">)</span><span style="color: #008080; text-decoration-color: #008080">: Show attributes starting with double underscore. Defaults to </span><span style="color: #ff0000; text-decoration-color: #ff0000; font-style: italic">False</span><span style="color: #008080; text-decoration-color: #008080">.</span>                <span style="color: #000080; text-decoration-color: #000080">│</span>
<span style="color: #000080; text-decoration-color: #000080">│</span> <span style="color: #008080; text-decoration-color: #008080">    sort </span><span style="color: #008080; text-decoration-color: #008080; font-weight: bold">(</span><span style="color: #008080; text-decoration-color: #008080">bool, optional</span><span style="color: #008080; text-decoration-color: #008080; font-weight: bold">)</span><span style="color: #008080; text-decoration-color: #008080">: Sort attributes alphabetically. Defaults to </span><span style="color: #00ff00; text-decoration-color: #00ff00; font-style: italic">True</span><span style="color: #008080; text-decoration-color: #008080">.</span>                                    <span style="color: #000080; text-decoration-color: #000080">│</span>
<span style="color: #000080; text-decoration-color: #000080">│</span> <span style="color: #008080; text-decoration-color: #008080">    all </span><span style="color: #008080; text-decoration-color: #008080; font-weight: bold">(</span><span style="color: #008080; text-decoration-color: #008080">bool, optional</span><span style="color: #008080; text-decoration-color: #008080; font-weight: bold">)</span><span style="color: #008080; text-decoration-color: #008080">: Show all attributes. Defaults to </span><span style="color: #ff0000; text-decoration-color: #ff0000; font-style: italic">False</span><span style="color: #008080; text-decoration-color: #008080">.</span>                                               <span style="color: #000080; text-decoration-color: #000080">│</span>
<span style="color: #000080; text-decoration-color: #000080">│</span> <span style="color: #008080; text-decoration-color: #008080">    value </span><span style="color: #008080; text-decoration-color: #008080; font-weight: bold">(</span><span style="color: #008080; text-decoration-color: #008080">bool, optional</span><span style="color: #008080; text-decoration-color: #008080; font-weight: bold">)</span><span style="color: #008080; text-decoration-color: #008080">: Pretty print value. Defaults to </span><span style="color: #00ff00; text-decoration-color: #00ff00; font-style: italic">True</span><span style="color: #008080; text-decoration-color: #008080">.</span>                                               <span style="color: #000080; text-decoration-color: #000080">│</span>
<span style="color: #000080; text-decoration-color: #000080">│</span>                                                                                                                 <span style="color: #000080; text-decoration-color: #000080">│</span>
<span style="color: #000080; text-decoration-color: #000080">│</span> <span style="color: #008080; text-decoration-color: #008080; font-weight: bold">35</span><span style="font-style: italic"> attribute(s) not shown.</span> Run <span style="color: #800080; text-decoration-color: #800080; font-weight: bold">inspect</span><span style="font-weight: bold">(</span>inspect<span style="font-weight: bold">)</span> for options.                                                    <span style="color: #000080; text-decoration-color: #000080">│</span>
<span style="color: #000080; text-decoration-color: #000080">╰─────────────────────────────────────────────────────────────────────────────────────────────────────────────────╯</span>
</pre>
</div>
</div>
<div class="cell" data-execution_count="74">
<div class="sourceCode cell-code" id="cb64" style="background: #f1f3f5;"><pre class="sourceCode python code-with-copy"><code class="sourceCode python"><span id="cb64-1"><span class="im" style="color: #00769E;">from</span> dataclasses <span class="im" style="color: #00769E;">import</span> dataclass</span>
<span id="cb64-2"></span>
<span id="cb64-3"></span>
<span id="cb64-4"><span class="at" style="color: #657422;">@dataclass</span></span>
<span id="cb64-5"><span class="kw" style="color: #003B4F;">class</span> InventoryItem:</span>
<span id="cb64-6">    <span class="co" style="color: #5E5E5E;">"""Class for keeping track of an item in inventory."""</span></span>
<span id="cb64-7"></span>
<span id="cb64-8">    name: <span class="bu" style="color: null;">str</span></span>
<span id="cb64-9">    unit_price: <span class="bu" style="color: null;">float</span></span>
<span id="cb64-10">    quantity_on_hand: <span class="bu" style="color: null;">int</span> <span class="op" style="color: #5E5E5E;">=</span> <span class="dv" style="color: #AD0000;">0</span></span></code></pre></div>
</div>
<div class="cell" data-execution_count="75">
<div class="sourceCode cell-code" id="cb65" style="background: #f1f3f5;"><pre class="sourceCode python code-with-copy"><code class="sourceCode python"><span id="cb65-1">c <span class="op" style="color: #5E5E5E;">=</span> InventoryItem(<span class="st" style="color: #20794D;">"A"</span>, <span class="dv" style="color: #AD0000;">20</span>)</span></code></pre></div>
</div>
<div class="cell" data-execution_count="76">
<div class="sourceCode cell-code" id="cb66" style="background: #f1f3f5;"><pre class="sourceCode python code-with-copy"><code class="sourceCode python"><span id="cb66-1">c</span></code></pre></div>
<div class="cell-output cell-output-display" data-execution_count="76">
<pre><code>InventoryItem(name='A', unit_price=20, quantity_on_hand=0)</code></pre>
</div>
</div>
<div class="cell" data-execution_count="69">
<div class="sourceCode cell-code" id="cb68" style="background: #f1f3f5;"><pre class="sourceCode python code-with-copy"><code class="sourceCode python"><span id="cb68-1"><span class="kw" style="color: #003B4F;">class</span> InventoryItemOld:</span>
<span id="cb68-2">    <span class="kw" style="color: #003B4F;">def</span> <span class="fu" style="color: #4758AB;">__init__</span>(<span class="va" style="color: #111111;">self</span>, name: <span class="bu" style="color: null;">str</span>, unit_price: <span class="bu" style="color: null;">float</span>, </span>
<span id="cb68-3">                 quantity_on_hand: <span class="bu" style="color: null;">int</span> <span class="op" style="color: #5E5E5E;">=</span> <span class="dv" style="color: #AD0000;">0</span>):</span>
<span id="cb68-4">        <span class="va" style="color: #111111;">self</span>.name <span class="op" style="color: #5E5E5E;">=</span> name</span>
<span id="cb68-5">        <span class="va" style="color: #111111;">self</span>.unit_price <span class="op" style="color: #5E5E5E;">=</span> unit_price</span>
<span id="cb68-6">        <span class="va" style="color: #111111;">self</span>.quantity_on_hand <span class="op" style="color: #5E5E5E;">=</span> quantity_on_hand</span></code></pre></div>
</div>
<div class="cell" data-execution_count="73">
<div class="sourceCode cell-code" id="cb69" style="background: #f1f3f5;"><pre class="sourceCode python code-with-copy"><code class="sourceCode python"><span id="cb69-1">d <span class="op" style="color: #5E5E5E;">=</span> InventoryItemOld(<span class="st" style="color: #20794D;">"A"</span>, <span class="dv" style="color: #AD0000;">2</span>)</span>
<span id="cb69-2">d</span></code></pre></div>
<div class="cell-output cell-output-display" data-execution_count="73">
<pre><code>&lt;__main__.InventoryItemOld at 0x166340430&gt;</code></pre>
</div>
</div>
<div class="cell" data-execution_count="70">
<div class="sourceCode cell-code" id="cb71" style="background: #f1f3f5;"><pre class="sourceCode python code-with-copy"><code class="sourceCode python"><span id="cb71-1"><span class="kw" style="color: #003B4F;">def</span> greeting(name: <span class="bu" style="color: null;">str</span>) <span class="op" style="color: #5E5E5E;">-&gt;</span> <span class="bu" style="color: null;">str</span>:</span>
<span id="cb71-2">    <span class="cf" style="color: #003B4F;">return</span> <span class="st" style="color: #20794D;">'Hello '</span> <span class="op" style="color: #5E5E5E;">+</span> name</span></code></pre></div>
</div>
<div class="cell" data-execution_count="71">
<div class="sourceCode cell-code" id="cb72" style="background: #f1f3f5;"><pre class="sourceCode python code-with-copy"><code class="sourceCode python"><span id="cb72-1">greeting(<span class="st" style="color: #20794D;">"Abc"</span>)</span></code></pre></div>
<div class="cell-output cell-output-display" data-execution_count="71">
<pre><code>'Hello Abc'</code></pre>
</div>
</div>
<div class="cell" data-execution_count="72">
<div class="sourceCode cell-code" id="cb74" style="background: #f1f3f5;"><pre class="sourceCode python code-with-copy"><code class="sourceCode python"><span id="cb74-1">greeting(<span class="dv" style="color: #AD0000;">10</span>)</span></code></pre></div>
<div class="cell-output cell-output-error">
<pre><code>TypeError: can only concatenate str (not "int") to str</code></pre>
</div>
</div>



 ]]></description>
  <guid>https://github.com/nipunbatra/ml2023/notebooks/posts/split.html</guid>
  <pubDate>Tue, 10 Jan 2023 00:00:00 GMT</pubDate>
</item>
<item>
  <title>Misc tips</title>
  <dc:creator>Nipun Batra</dc:creator>
  <link>https://github.com/nipunbatra/ml2023/notebooks/posts/tips.html</link>
  <description><![CDATA[ 



<section id="miscelleneous-tips" class="level3">
<h3 class="anchored" data-anchor-id="miscelleneous-tips">Miscelleneous tips</h3>
<ul>
<li>Tab Complete</li>
<li>a.b?</li>
<li>Black format</li>
<li>rich
<ul>
<li>table</li>
<li>inspect</li>
</ul></li>
<li>dir()</li>
<li>timing</li>
<li>timing with sort?!</li>
<li>timeit object</li>
<li>plotting timing</li>
<li>array .tolist()</li>
<li>Dataclasses</li>
<li>Annotation</li>
<li>Plotting with pandas (sin, log, question …)</li>
</ul>
<div class="cell" data-execution_count="62">
<div class="sourceCode cell-code" id="cb1" style="background: #f1f3f5;"><pre class="sourceCode python code-with-copy"><code class="sourceCode python"><span id="cb1-1"><span class="im" style="color: #00769E;">import</span> numpy <span class="im" style="color: #00769E;">as</span> np</span>
<span id="cb1-2"><span class="im" style="color: #00769E;">import</span> matplotlib.pyplot <span class="im" style="color: #00769E;">as</span> plt</span>
<span id="cb1-3"><span class="im" style="color: #00769E;">import</span> pandas <span class="im" style="color: #00769E;">as</span> pd</span>
<span id="cb1-4"></span>
<span id="cb1-5"><span class="op" style="color: #5E5E5E;">%</span>matplotlib inline</span>
<span id="cb1-6"><span class="op" style="color: #5E5E5E;">%</span>config InlineBackend.figure_format<span class="op" style="color: #5E5E5E;">=</span><span class="st" style="color: #20794D;">'retina'</span></span></code></pre></div>
</div>
<div class="cell" data-execution_count="14">
<div class="sourceCode cell-code" id="cb2" style="background: #f1f3f5;"><pre class="sourceCode python code-with-copy"><code class="sourceCode python"><span id="cb2-1">n <span class="op" style="color: #5E5E5E;">=</span> <span class="dv" style="color: #AD0000;">100</span></span>
<span id="cb2-2">k <span class="op" style="color: #5E5E5E;">=</span> <span class="dv" style="color: #AD0000;">20</span></span>
<span id="cb2-3">m <span class="op" style="color: #5E5E5E;">=</span> <span class="dv" style="color: #AD0000;">50</span></span>
<span id="cb2-4"></span>
<span id="cb2-5">np.random.seed(<span class="dv" style="color: #AD0000;">0</span>)</span>
<span id="cb2-6">a <span class="op" style="color: #5E5E5E;">=</span> np.random.randn(n, k)</span>
<span id="cb2-7">b <span class="op" style="color: #5E5E5E;">=</span> np.random.randn(k, m)</span>
<span id="cb2-8">a.shape, b.shape</span></code></pre></div>
<div class="cell-output cell-output-display" data-execution_count="14">
<pre><code>((100, 20), (20, 50))</code></pre>
</div>
</div>
<div class="cell" data-execution_count="18">
<div class="sourceCode cell-code" id="cb4" style="background: #f1f3f5;"><pre class="sourceCode python code-with-copy"><code class="sourceCode python"><span id="cb4-1">a_list_of_list <span class="op" style="color: #5E5E5E;">=</span> a.tolist()</span>
<span id="cb4-2">a_list_of_list[<span class="dv" style="color: #AD0000;">0</span>]</span></code></pre></div>
<div class="cell-output cell-output-display" data-execution_count="18">
<pre><code>list</code></pre>
</div>
</div>
<div class="cell" data-execution_count="28">
<div class="sourceCode cell-code" id="cb6" style="background: #f1f3f5;"><pre class="sourceCode python code-with-copy"><code class="sourceCode python"><span id="cb6-1"><span class="co" style="color: #5E5E5E;">"list"</span> <span class="kw" style="color: #003B4F;">in</span> <span class="bu" style="color: null;">dir</span>(a)[:]</span></code></pre></div>
<div class="cell-output cell-output-display" data-execution_count="28">
<pre><code>False</code></pre>
</div>
</div>
<div class="cell" data-execution_count="38">
<div class="sourceCode cell-code" id="cb8" style="background: #f1f3f5;"><pre class="sourceCode python code-with-copy"><code class="sourceCode python"><span id="cb8-1"><span class="im" style="color: #00769E;">import</span> rich</span>
<span id="cb8-2">rich.inspect(a.tolist, methods<span class="op" style="color: #5E5E5E;">=</span><span class="va" style="color: #111111;">True</span>, <span class="bu" style="color: null;">all</span><span class="op" style="color: #5E5E5E;">=</span><span class="va" style="color: #111111;">True</span>)</span></code></pre></div>
<div class="cell-output cell-output-display">
<pre style="white-space:pre;overflow-x:auto;line-height:normal;font-family:Menlo,'DejaVu Sans Mono',consolas,'Courier New',monospace"><span style="color: #000080; text-decoration-color: #000080">╭──────────────────────── </span><span style="color: #000080; text-decoration-color: #000080; font-weight: bold">&lt;</span><span style="color: #ff00ff; text-decoration-color: #ff00ff; font-weight: bold">built-in</span><span style="color: #000000; text-decoration-color: #000000"> method tolist of numpy.ndarray object at </span><span style="color: #008080; text-decoration-color: #008080; font-weight: bold">0x164cbb8d0</span><span style="color: #000080; text-decoration-color: #000080; font-weight: bold">&gt;</span><span style="color: #000080; text-decoration-color: #000080"> ────────────────────────╮</span>
<span style="color: #000080; text-decoration-color: #000080">│</span> <span style="color: #00ffff; text-decoration-color: #00ffff; font-style: italic">def </span><span style="color: #800000; text-decoration-color: #800000; font-weight: bold">ndarray.tolist</span><span style="font-weight: bold">(</span><span style="color: #808000; text-decoration-color: #808000">...</span><span style="font-weight: bold">)</span>                                                                                         <span style="color: #000080; text-decoration-color: #000080">│</span>
<span style="color: #000080; text-decoration-color: #000080">│</span>                                                                                                                 <span style="color: #000080; text-decoration-color: #000080">│</span>
<span style="color: #000080; text-decoration-color: #000080">│</span> <span style="color: #800080; text-decoration-color: #800080; font-weight: bold">a.tolist</span><span style="color: #008080; text-decoration-color: #008080; font-weight: bold">()</span>                                                                                                      <span style="color: #000080; text-decoration-color: #000080">│</span>
<span style="color: #000080; text-decoration-color: #000080">│</span>                                                                                                                 <span style="color: #000080; text-decoration-color: #000080">│</span>
<span style="color: #000080; text-decoration-color: #000080">│</span>            <span style="color: #bfbf7f; text-decoration-color: #bfbf7f; font-style: italic">__doc__</span> = <span style="color: #008000; text-decoration-color: #008000">"a.tolist()\n\n    Return the array as an ``a.ndim``-levels deep nested list of Python </span>    <span style="color: #000080; text-decoration-color: #000080">│</span>
<span style="color: #000080; text-decoration-color: #000080">│</span>                      <span style="color: #008000; text-decoration-color: #008000">scalars.\n\n    Return a copy of the array data as a (nested) Python list.\n    Data items</span> <span style="color: #000080; text-decoration-color: #000080">│</span>
<span style="color: #000080; text-decoration-color: #000080">│</span>                      <span style="color: #008000; text-decoration-color: #008000">are converted to the nearest compatible builtin Python type, via\n    the </span>                 <span style="color: #000080; text-decoration-color: #000080">│</span>
<span style="color: #000080; text-decoration-color: #000080">│</span>                      <span style="color: #008000; text-decoration-color: #008000">`~numpy.ndarray.item` function.\n\n    If ``a.ndim`` is 0, then since the depth of the </span>    <span style="color: #000080; text-decoration-color: #000080">│</span>
<span style="color: #000080; text-decoration-color: #000080">│</span>                      <span style="color: #008000; text-decoration-color: #008000">nested list is 0, it will\n    not be a list at all, but a simple Python scalar.\n\n    </span>   <span style="color: #000080; text-decoration-color: #000080">│</span>
<span style="color: #000080; text-decoration-color: #000080">│</span>                      <span style="color: #008000; text-decoration-color: #008000">Parameters\n    ----------\n    none\n\n    Returns\n    -------\n    y : object, or list </span> <span style="color: #000080; text-decoration-color: #000080">│</span>
<span style="color: #000080; text-decoration-color: #000080">│</span>                      <span style="color: #008000; text-decoration-color: #008000">of object, or list of list of object, or ...\n        The possibly nested list of array </span>   <span style="color: #000080; text-decoration-color: #000080">│</span>
<span style="color: #000080; text-decoration-color: #000080">│</span>                      <span style="color: #008000; text-decoration-color: #008000">elements.\n\n    Notes\n    -----\n    The array may be recreated via ``a = </span>               <span style="color: #000080; text-decoration-color: #000080">│</span>
<span style="color: #000080; text-decoration-color: #000080">│</span>                      <span style="color: #008000; text-decoration-color: #008000">np.array(a.tolist())``, although this\n    may sometimes lose precision.\n\n    Examples\n</span> <span style="color: #000080; text-decoration-color: #000080">│</span>
<span style="color: #000080; text-decoration-color: #000080">│</span>                      <span style="color: #008000; text-decoration-color: #008000">--------\n    For a 1D array, ``a.tolist()`` is almost the same as ``list(a)``,\n    </span>      <span style="color: #000080; text-decoration-color: #000080">│</span>
<span style="color: #000080; text-decoration-color: #000080">│</span>                      <span style="color: #008000; text-decoration-color: #008000">except that ``tolist`` changes numpy scalars to Python scalars:\n\n    &gt;&gt;&gt; a = </span>            <span style="color: #000080; text-decoration-color: #000080">│</span>
<span style="color: #000080; text-decoration-color: #000080">│</span>                      <span style="color: #008000; text-decoration-color: #008000">np.uint32([1, 2])\n    &gt;&gt;&gt; a_list = list(a)\n    &gt;&gt;&gt; a_list\n    [1, 2]\n    &gt;&gt;&gt; </span>          <span style="color: #000080; text-decoration-color: #000080">│</span>
<span style="color: #000080; text-decoration-color: #000080">│</span>                      <span style="color: #008000; text-decoration-color: #008000">type(a_list[0])\n    &lt;class 'numpy.uint32'&gt;\n    &gt;&gt;&gt; a_tolist = a.tolist()\n    &gt;&gt;&gt; </span>       <span style="color: #000080; text-decoration-color: #000080">│</span>
<span style="color: #000080; text-decoration-color: #000080">│</span>                      <span style="color: #008000; text-decoration-color: #008000">a_tolist\n    [1, 2]\n    &gt;&gt;&gt; type(a_tolist[0])\n    &lt;class 'int'&gt;\n\n    Additionally, </span>   <span style="color: #000080; text-decoration-color: #000080">│</span>
<span style="color: #000080; text-decoration-color: #000080">│</span>                      <span style="color: #008000; text-decoration-color: #008000">for a 2D array, ``tolist`` applies recursively:\n\n    &gt;&gt;&gt; a = np.array([[1, 2], [3, </span>      <span style="color: #000080; text-decoration-color: #000080">│</span>
<span style="color: #000080; text-decoration-color: #000080">│</span>                      <span style="color: #008000; text-decoration-color: #008000">4]])\n    &gt;&gt;&gt; list(a)\n    [array([1, 2]), array([3, 4])]\n    &gt;&gt;&gt; a.tolist()\n    [[1, </span>   <span style="color: #000080; text-decoration-color: #000080">│</span>
<span style="color: #000080; text-decoration-color: #000080">│</span>                      <span style="color: #008000; text-decoration-color: #008000">2], [3, 4]]\n\n    The base case for this recursion is a 0D array:\n\n    &gt;&gt;&gt; a = </span>         <span style="color: #000080; text-decoration-color: #000080">│</span>
<span style="color: #000080; text-decoration-color: #000080">│</span>                      <span style="color: #008000; text-decoration-color: #008000">np.array(1)\n    &gt;&gt;&gt; list(a)\n    Traceback (most recent call last):\n      ...\n    </span>      <span style="color: #000080; text-decoration-color: #000080">│</span>
<span style="color: #000080; text-decoration-color: #000080">│</span>                      <span style="color: #008000; text-decoration-color: #008000">TypeError: iteration over a 0-d array\n    &gt;&gt;&gt; a.tolist()\n    1"</span>                          <span style="color: #000080; text-decoration-color: #000080">│</span>
<span style="color: #000080; text-decoration-color: #000080">│</span>         <span style="color: #bfbf7f; text-decoration-color: #bfbf7f; font-style: italic">__module__</span> = <span style="color: #800080; text-decoration-color: #800080; font-style: italic">None</span>                                                                                       <span style="color: #000080; text-decoration-color: #000080">│</span>
<span style="color: #000080; text-decoration-color: #000080">│</span>           <span style="color: #bfbf7f; text-decoration-color: #bfbf7f; font-style: italic">__name__</span> = <span style="color: #008000; text-decoration-color: #008000">'tolist'</span>                                                                                   <span style="color: #000080; text-decoration-color: #000080">│</span>
<span style="color: #000080; text-decoration-color: #000080">│</span>       <span style="color: #bfbf7f; text-decoration-color: #bfbf7f; font-style: italic">__qualname__</span> = <span style="color: #008000; text-decoration-color: #008000">'ndarray.tolist'</span>                                                                           <span style="color: #000080; text-decoration-color: #000080">│</span>
<span style="color: #000080; text-decoration-color: #000080">│</span>           <span style="color: #bfbf7f; text-decoration-color: #bfbf7f; font-style: italic">__self__</span> = <span style="color: #800080; text-decoration-color: #800080; font-weight: bold">array</span><span style="font-weight: bold">([[</span> <span style="color: #008080; text-decoration-color: #008080; font-weight: bold">1.76405235e+00</span>,  <span style="color: #008080; text-decoration-color: #008080; font-weight: bold">4.00157208e-01</span>,  <span style="color: #008080; text-decoration-color: #008080; font-weight: bold">9.78737984e-01</span>, <span style="color: #808000; text-decoration-color: #808000">...</span>,                            <span style="color: #000080; text-decoration-color: #000080">│</span>
<span style="color: #000080; text-decoration-color: #000080">│</span>                              <span style="color: #008080; text-decoration-color: #008080; font-weight: bold">-2.05158264e-01</span>,  <span style="color: #008080; text-decoration-color: #008080; font-weight: bold">3.13067702e-01</span>, <span style="color: #008080; text-decoration-color: #008080; font-weight: bold">-8.54095739e-01</span><span style="font-weight: bold">]</span>,                                <span style="color: #000080; text-decoration-color: #000080">│</span>
<span style="color: #000080; text-decoration-color: #000080">│</span>                             <span style="font-weight: bold">[</span><span style="color: #008080; text-decoration-color: #008080; font-weight: bold">-2.55298982e+00</span>,  <span style="color: #008080; text-decoration-color: #008080; font-weight: bold">6.53618595e-01</span>,  <span style="color: #008080; text-decoration-color: #008080; font-weight: bold">8.64436199e-01</span>, <span style="color: #808000; text-decoration-color: #808000">...</span>,                            <span style="color: #000080; text-decoration-color: #000080">│</span>
<span style="color: #000080; text-decoration-color: #000080">│</span>                               <span style="color: #008080; text-decoration-color: #008080; font-weight: bold">1.20237985e+00</span>, <span style="color: #008080; text-decoration-color: #008080; font-weight: bold">-3.87326817e-01</span>, <span style="color: #008080; text-decoration-color: #008080; font-weight: bold">-3.02302751e-01</span><span style="font-weight: bold">]</span>,                                <span style="color: #000080; text-decoration-color: #000080">│</span>
<span style="color: #000080; text-decoration-color: #000080">│</span>                             <span style="font-weight: bold">[</span><span style="color: #008080; text-decoration-color: #008080; font-weight: bold">-1.04855297e+00</span>, <span style="color: #008080; text-decoration-color: #008080; font-weight: bold">-1.42001794e+00</span>, <span style="color: #008080; text-decoration-color: #008080; font-weight: bold">-1.70627019e+00</span>, <span style="color: #808000; text-decoration-color: #808000">...</span>,                            <span style="color: #000080; text-decoration-color: #000080">│</span>
<span style="color: #000080; text-decoration-color: #000080">│</span>                               <span style="color: #008080; text-decoration-color: #008080; font-weight: bold">3.02471898e-01</span>, <span style="color: #008080; text-decoration-color: #008080; font-weight: bold">-6.34322094e-01</span>, <span style="color: #008080; text-decoration-color: #008080; font-weight: bold">-3.62741166e-01</span><span style="font-weight: bold">]</span>,                                <span style="color: #000080; text-decoration-color: #000080">│</span>
<span style="color: #000080; text-decoration-color: #000080">│</span>                             <span style="color: #808000; text-decoration-color: #808000">...</span>,                                                                                <span style="color: #000080; text-decoration-color: #000080">│</span>
<span style="color: #000080; text-decoration-color: #000080">│</span>                             <span style="font-weight: bold">[</span> <span style="color: #008080; text-decoration-color: #008080; font-weight: bold">8.73311836e-01</span>,  <span style="color: #008080; text-decoration-color: #008080; font-weight: bold">1.19973618e+00</span>,  <span style="color: #008080; text-decoration-color: #008080; font-weight: bold">4.56153036e-01</span>, <span style="color: #808000; text-decoration-color: #808000">...</span>,                            <span style="color: #000080; text-decoration-color: #000080">│</span>
<span style="color: #000080; text-decoration-color: #000080">│</span>                              <span style="color: #008080; text-decoration-color: #008080; font-weight: bold">-1.24021634e+00</span>,  <span style="color: #008080; text-decoration-color: #008080; font-weight: bold">9.00054243e-01</span>,  <span style="color: #008080; text-decoration-color: #008080; font-weight: bold">1.80224223e+00</span><span style="font-weight: bold">]</span>,                                <span style="color: #000080; text-decoration-color: #000080">│</span>
<span style="color: #000080; text-decoration-color: #000080">│</span>                             <span style="font-weight: bold">[</span><span style="color: #008080; text-decoration-color: #008080; font-weight: bold">-2.08285103e-01</span>,  <span style="color: #008080; text-decoration-color: #008080; font-weight: bold">1.57437124e+00</span>,  <span style="color: #008080; text-decoration-color: #008080; font-weight: bold">1.98989494e-01</span>, <span style="color: #808000; text-decoration-color: #808000">...</span>,                            <span style="color: #000080; text-decoration-color: #000080">│</span>
<span style="color: #000080; text-decoration-color: #000080">│</span>                               <span style="color: #008080; text-decoration-color: #008080; font-weight: bold">4.32837621e-01</span>, <span style="color: #008080; text-decoration-color: #008080; font-weight: bold">-8.08717532e-01</span>, <span style="color: #008080; text-decoration-color: #008080; font-weight: bold">-1.10412399e+00</span><span style="font-weight: bold">]</span>,                                <span style="color: #000080; text-decoration-color: #000080">│</span>
<span style="color: #000080; text-decoration-color: #000080">│</span>                             <span style="font-weight: bold">[</span><span style="color: #008080; text-decoration-color: #008080; font-weight: bold">-7.89102180e-01</span>,  <span style="color: #008080; text-decoration-color: #008080; font-weight: bold">1.24845579e-03</span>, <span style="color: #008080; text-decoration-color: #008080; font-weight: bold">-1.59939788e-01</span>, <span style="color: #808000; text-decoration-color: #808000">...</span>,                            <span style="color: #000080; text-decoration-color: #000080">│</span>
<span style="color: #000080; text-decoration-color: #000080">│</span>                               <span style="color: #008080; text-decoration-color: #008080; font-weight: bold">1.58433847e-01</span>, <span style="color: #008080; text-decoration-color: #008080; font-weight: bold">-1.14190142e+00</span>, <span style="color: #008080; text-decoration-color: #008080; font-weight: bold">-1.31097037e+00</span><span style="font-weight: bold">]])</span>                               <span style="color: #000080; text-decoration-color: #000080">│</span>
<span style="color: #000080; text-decoration-color: #000080">│</span> <span style="color: #bfbf7f; text-decoration-color: #bfbf7f; font-style: italic">__text_signature__</span> = <span style="color: #800080; text-decoration-color: #800080; font-style: italic">None</span>                                                                                       <span style="color: #000080; text-decoration-color: #000080">│</span>
<span style="color: #000080; text-decoration-color: #000080">│</span>           <span style="color: #bfbf7f; text-decoration-color: #bfbf7f; font-style: italic">__call__</span> = <span style="color: #00ffff; text-decoration-color: #00ffff; font-style: italic">def </span><span style="color: #800000; text-decoration-color: #800000; font-weight: bold">__call__</span><span style="font-weight: bold">(</span>*args, **kwargs<span style="font-weight: bold">)</span>: <span style="color: #7f7f7f; text-decoration-color: #7f7f7f">Call self as a function.</span>                                    <span style="color: #000080; text-decoration-color: #000080">│</span>
<span style="color: #000080; text-decoration-color: #000080">│</span>          <span style="color: #bfbf7f; text-decoration-color: #bfbf7f; font-style: italic">__class__</span> = <span style="color: #00ffff; text-decoration-color: #00ffff; font-style: italic">class </span><span style="color: #800000; text-decoration-color: #800000; font-weight: bold">__class__</span><span style="font-weight: bold">()</span>:                                                                         <span style="color: #000080; text-decoration-color: #000080">│</span>
<span style="color: #000080; text-decoration-color: #000080">│</span>        <span style="color: #bfbf7f; text-decoration-color: #bfbf7f; font-style: italic">__delattr__</span> = <span style="color: #00ffff; text-decoration-color: #00ffff; font-style: italic">def </span><span style="color: #800000; text-decoration-color: #800000; font-weight: bold">__delattr__</span><span style="font-weight: bold">(</span>name, <span style="color: #800080; text-decoration-color: #800080">/</span><span style="font-weight: bold">)</span>: <span style="color: #7f7f7f; text-decoration-color: #7f7f7f">Implement </span><span style="color: #bf7fbf; text-decoration-color: #bf7fbf; font-weight: bold">delattr</span><span style="color: #7f7f7f; text-decoration-color: #7f7f7f; font-weight: bold">(</span><span style="color: #7f7f7f; text-decoration-color: #7f7f7f">self, name</span><span style="color: #7f7f7f; text-decoration-color: #7f7f7f; font-weight: bold">)</span><span style="color: #7f7f7f; text-decoration-color: #7f7f7f">.</span>                                   <span style="color: #000080; text-decoration-color: #000080">│</span>
<span style="color: #000080; text-decoration-color: #000080">│</span>            <span style="color: #bfbf7f; text-decoration-color: #bfbf7f; font-style: italic">__dir__</span> = <span style="color: #00ffff; text-decoration-color: #00ffff; font-style: italic">def </span><span style="color: #800000; text-decoration-color: #800000; font-weight: bold">__dir__</span><span style="font-weight: bold">()</span>: <span style="color: #7f7f7f; text-decoration-color: #7f7f7f">Default </span><span style="color: #bf7fbf; text-decoration-color: #bf7fbf; font-weight: bold">dir</span><span style="color: #7f7f7f; text-decoration-color: #7f7f7f; font-weight: bold">()</span><span style="color: #7f7f7f; text-decoration-color: #7f7f7f"> implementation.</span>                                               <span style="color: #000080; text-decoration-color: #000080">│</span>
<span style="color: #000080; text-decoration-color: #000080">│</span>             <span style="color: #bfbf7f; text-decoration-color: #bfbf7f; font-style: italic">__eq__</span> = <span style="color: #00ffff; text-decoration-color: #00ffff; font-style: italic">def </span><span style="color: #800000; text-decoration-color: #800000; font-weight: bold">__eq__</span><span style="font-weight: bold">(</span>value, <span style="color: #800080; text-decoration-color: #800080">/</span><span style="font-weight: bold">)</span>: <span style="color: #7f7f7f; text-decoration-color: #7f7f7f">Return </span><span style="color: #bfbf7f; text-decoration-color: #bfbf7f">self</span><span style="color: #7f7f7f; text-decoration-color: #7f7f7f">==value.</span>                                                  <span style="color: #000080; text-decoration-color: #000080">│</span>
<span style="color: #000080; text-decoration-color: #000080">│</span>         <span style="color: #bfbf7f; text-decoration-color: #bfbf7f; font-style: italic">__format__</span> = <span style="color: #00ffff; text-decoration-color: #00ffff; font-style: italic">def </span><span style="color: #800000; text-decoration-color: #800000; font-weight: bold">__format__</span><span style="font-weight: bold">(</span>format_spec, <span style="color: #800080; text-decoration-color: #800080">/</span><span style="font-weight: bold">)</span>: <span style="color: #7f7f7f; text-decoration-color: #7f7f7f">Default object formatter.</span>                                  <span style="color: #000080; text-decoration-color: #000080">│</span>
<span style="color: #000080; text-decoration-color: #000080">│</span>             <span style="color: #bfbf7f; text-decoration-color: #bfbf7f; font-style: italic">__ge__</span> = <span style="color: #00ffff; text-decoration-color: #00ffff; font-style: italic">def </span><span style="color: #800000; text-decoration-color: #800000; font-weight: bold">__ge__</span><span style="font-weight: bold">(</span>value, <span style="color: #800080; text-decoration-color: #800080">/</span><span style="font-weight: bold">)</span>: <span style="color: #7f7f7f; text-decoration-color: #7f7f7f">Return self&gt;=value.</span>                                                  <span style="color: #000080; text-decoration-color: #000080">│</span>
<span style="color: #000080; text-decoration-color: #000080">│</span>   <span style="color: #bfbf7f; text-decoration-color: #bfbf7f; font-style: italic">__getattribute__</span> = <span style="color: #00ffff; text-decoration-color: #00ffff; font-style: italic">def </span><span style="color: #800000; text-decoration-color: #800000; font-weight: bold">__getattribute__</span><span style="font-weight: bold">(</span>name, <span style="color: #800080; text-decoration-color: #800080">/</span><span style="font-weight: bold">)</span>: <span style="color: #7f7f7f; text-decoration-color: #7f7f7f">Return </span><span style="color: #bf7fbf; text-decoration-color: #bf7fbf; font-weight: bold">getattr</span><span style="color: #7f7f7f; text-decoration-color: #7f7f7f; font-weight: bold">(</span><span style="color: #7f7f7f; text-decoration-color: #7f7f7f">self, name</span><span style="color: #7f7f7f; text-decoration-color: #7f7f7f; font-weight: bold">)</span><span style="color: #7f7f7f; text-decoration-color: #7f7f7f">.</span>                                 <span style="color: #000080; text-decoration-color: #000080">│</span>
<span style="color: #000080; text-decoration-color: #000080">│</span>             <span style="color: #bfbf7f; text-decoration-color: #bfbf7f; font-style: italic">__gt__</span> = <span style="color: #00ffff; text-decoration-color: #00ffff; font-style: italic">def </span><span style="color: #800000; text-decoration-color: #800000; font-weight: bold">__gt__</span><span style="font-weight: bold">(</span>value, <span style="color: #800080; text-decoration-color: #800080">/</span><span style="font-weight: bold">)</span>: <span style="color: #7f7f7f; text-decoration-color: #7f7f7f">Return self&gt;value.</span>                                                   <span style="color: #000080; text-decoration-color: #000080">│</span>
<span style="color: #000080; text-decoration-color: #000080">│</span>           <span style="color: #bfbf7f; text-decoration-color: #bfbf7f; font-style: italic">__hash__</span> = <span style="color: #00ffff; text-decoration-color: #00ffff; font-style: italic">def </span><span style="color: #800000; text-decoration-color: #800000; font-weight: bold">__hash__</span><span style="font-weight: bold">()</span>: <span style="color: #7f7f7f; text-decoration-color: #7f7f7f">Return </span><span style="color: #bf7fbf; text-decoration-color: #bf7fbf; font-weight: bold">hash</span><span style="color: #7f7f7f; text-decoration-color: #7f7f7f; font-weight: bold">(</span><span style="color: #7f7f7f; text-decoration-color: #7f7f7f">self</span><span style="color: #7f7f7f; text-decoration-color: #7f7f7f; font-weight: bold">)</span><span style="color: #7f7f7f; text-decoration-color: #7f7f7f">.</span>                                                         <span style="color: #000080; text-decoration-color: #000080">│</span>
<span style="color: #000080; text-decoration-color: #000080">│</span>           <span style="color: #bfbf7f; text-decoration-color: #bfbf7f; font-style: italic">__init__</span> = <span style="color: #00ffff; text-decoration-color: #00ffff; font-style: italic">def </span><span style="color: #800000; text-decoration-color: #800000; font-weight: bold">__init__</span><span style="font-weight: bold">(</span>*args, **kwargs<span style="font-weight: bold">)</span>: <span style="color: #7f7f7f; text-decoration-color: #7f7f7f">Initialize self.  See </span><span style="color: #bf7fbf; text-decoration-color: #bf7fbf; font-weight: bold">help</span><span style="color: #7f7f7f; text-decoration-color: #7f7f7f; font-weight: bold">(</span><span style="color: #bf7fbf; text-decoration-color: #bf7fbf; font-weight: bold">type</span><span style="color: #7f7f7f; text-decoration-color: #7f7f7f; font-weight: bold">(</span><span style="color: #7f7f7f; text-decoration-color: #7f7f7f">self</span><span style="color: #7f7f7f; text-decoration-color: #7f7f7f; font-weight: bold">))</span><span style="color: #7f7f7f; text-decoration-color: #7f7f7f"> for accurate </span>        <span style="color: #000080; text-decoration-color: #000080">│</span>
<span style="color: #000080; text-decoration-color: #000080">│</span>                      <span style="color: #7f7f7f; text-decoration-color: #7f7f7f">signature.</span>                                                                                 <span style="color: #000080; text-decoration-color: #000080">│</span>
<span style="color: #000080; text-decoration-color: #000080">│</span>  <span style="color: #bfbf7f; text-decoration-color: #bfbf7f; font-style: italic">__init_subclass__</span> = <span style="color: #00ffff; text-decoration-color: #00ffff; font-style: italic">def </span><span style="color: #800000; text-decoration-color: #800000; font-weight: bold">__init_subclass__</span><span style="font-weight: bold">(</span><span style="color: #808000; text-decoration-color: #808000">...</span><span style="font-weight: bold">)</span> <span style="color: #7f7f7f; text-decoration-color: #7f7f7f">This method is called when a class is subclassed.</span>               <span style="color: #000080; text-decoration-color: #000080">│</span>
<span style="color: #000080; text-decoration-color: #000080">│</span>             <span style="color: #bfbf7f; text-decoration-color: #bfbf7f; font-style: italic">__le__</span> = <span style="color: #00ffff; text-decoration-color: #00ffff; font-style: italic">def </span><span style="color: #800000; text-decoration-color: #800000; font-weight: bold">__le__</span><span style="font-weight: bold">(</span>value, <span style="color: #800080; text-decoration-color: #800080">/</span><span style="font-weight: bold">)</span>: <span style="color: #7f7f7f; text-decoration-color: #7f7f7f">Return self&lt;=value.</span>                                                  <span style="color: #000080; text-decoration-color: #000080">│</span>
<span style="color: #000080; text-decoration-color: #000080">│</span>             <span style="color: #bfbf7f; text-decoration-color: #bfbf7f; font-style: italic">__lt__</span> = <span style="color: #00ffff; text-decoration-color: #00ffff; font-style: italic">def </span><span style="color: #800000; text-decoration-color: #800000; font-weight: bold">__lt__</span><span style="font-weight: bold">(</span>value, <span style="color: #800080; text-decoration-color: #800080">/</span><span style="font-weight: bold">)</span>: <span style="color: #7f7f7f; text-decoration-color: #7f7f7f">Return self&lt;value.</span>                                                   <span style="color: #000080; text-decoration-color: #000080">│</span>
<span style="color: #000080; text-decoration-color: #000080">│</span>             <span style="color: #bfbf7f; text-decoration-color: #bfbf7f; font-style: italic">__ne__</span> = <span style="color: #00ffff; text-decoration-color: #00ffff; font-style: italic">def </span><span style="color: #800000; text-decoration-color: #800000; font-weight: bold">__ne__</span><span style="font-weight: bold">(</span>value, <span style="color: #800080; text-decoration-color: #800080">/</span><span style="font-weight: bold">)</span>: <span style="color: #7f7f7f; text-decoration-color: #7f7f7f">Return self!=value.</span>                                                  <span style="color: #000080; text-decoration-color: #000080">│</span>
<span style="color: #000080; text-decoration-color: #000080">│</span>            <span style="color: #bfbf7f; text-decoration-color: #bfbf7f; font-style: italic">__new__</span> = <span style="color: #00ffff; text-decoration-color: #00ffff; font-style: italic">def </span><span style="color: #800000; text-decoration-color: #800000; font-weight: bold">__new__</span><span style="font-weight: bold">(</span>*args, **kwargs<span style="font-weight: bold">)</span>: <span style="color: #7f7f7f; text-decoration-color: #7f7f7f">Create and return a new object.  See </span><span style="color: #bf7fbf; text-decoration-color: #bf7fbf; font-weight: bold">help</span><span style="color: #7f7f7f; text-decoration-color: #7f7f7f; font-weight: bold">(</span><span style="color: #7f7f7f; text-decoration-color: #7f7f7f">type</span><span style="color: #7f7f7f; text-decoration-color: #7f7f7f; font-weight: bold">)</span><span style="color: #7f7f7f; text-decoration-color: #7f7f7f"> for accurate</span> <span style="color: #000080; text-decoration-color: #000080">│</span>
<span style="color: #000080; text-decoration-color: #000080">│</span>                      <span style="color: #7f7f7f; text-decoration-color: #7f7f7f">signature.</span>                                                                                 <span style="color: #000080; text-decoration-color: #000080">│</span>
<span style="color: #000080; text-decoration-color: #000080">│</span>         <span style="color: #bfbf7f; text-decoration-color: #bfbf7f; font-style: italic">__reduce__</span> = <span style="color: #00ffff; text-decoration-color: #00ffff; font-style: italic">def </span><span style="color: #800000; text-decoration-color: #800000; font-weight: bold">__reduce__</span><span style="font-weight: bold">(</span><span style="color: #808000; text-decoration-color: #808000">...</span><span style="font-weight: bold">)</span> <span style="color: #7f7f7f; text-decoration-color: #7f7f7f">Helper for pickle.</span>                                                     <span style="color: #000080; text-decoration-color: #000080">│</span>
<span style="color: #000080; text-decoration-color: #000080">│</span>      <span style="color: #bfbf7f; text-decoration-color: #bfbf7f; font-style: italic">__reduce_ex__</span> = <span style="color: #00ffff; text-decoration-color: #00ffff; font-style: italic">def </span><span style="color: #800000; text-decoration-color: #800000; font-weight: bold">__reduce_ex__</span><span style="font-weight: bold">(</span>protocol, <span style="color: #800080; text-decoration-color: #800080">/</span><span style="font-weight: bold">)</span>: <span style="color: #7f7f7f; text-decoration-color: #7f7f7f">Helper for pickle.</span>                                         <span style="color: #000080; text-decoration-color: #000080">│</span>
<span style="color: #000080; text-decoration-color: #000080">│</span>           <span style="color: #bfbf7f; text-decoration-color: #bfbf7f; font-style: italic">__repr__</span> = <span style="color: #00ffff; text-decoration-color: #00ffff; font-style: italic">def </span><span style="color: #800000; text-decoration-color: #800000; font-weight: bold">__repr__</span><span style="font-weight: bold">()</span>: <span style="color: #7f7f7f; text-decoration-color: #7f7f7f">Return </span><span style="color: #bf7fbf; text-decoration-color: #bf7fbf; font-weight: bold">repr</span><span style="color: #7f7f7f; text-decoration-color: #7f7f7f; font-weight: bold">(</span><span style="color: #7f7f7f; text-decoration-color: #7f7f7f">self</span><span style="color: #7f7f7f; text-decoration-color: #7f7f7f; font-weight: bold">)</span><span style="color: #7f7f7f; text-decoration-color: #7f7f7f">.</span>                                                         <span style="color: #000080; text-decoration-color: #000080">│</span>
<span style="color: #000080; text-decoration-color: #000080">│</span>        <span style="color: #bfbf7f; text-decoration-color: #bfbf7f; font-style: italic">__setattr__</span> = <span style="color: #00ffff; text-decoration-color: #00ffff; font-style: italic">def </span><span style="color: #800000; text-decoration-color: #800000; font-weight: bold">__setattr__</span><span style="font-weight: bold">(</span>name, value, <span style="color: #800080; text-decoration-color: #800080">/</span><span style="font-weight: bold">)</span>: <span style="color: #7f7f7f; text-decoration-color: #7f7f7f">Implement </span><span style="color: #bf7fbf; text-decoration-color: #bf7fbf; font-weight: bold">setattr</span><span style="color: #7f7f7f; text-decoration-color: #7f7f7f; font-weight: bold">(</span><span style="color: #7f7f7f; text-decoration-color: #7f7f7f">self, name, value</span><span style="color: #7f7f7f; text-decoration-color: #7f7f7f; font-weight: bold">)</span><span style="color: #7f7f7f; text-decoration-color: #7f7f7f">.</span>                     <span style="color: #000080; text-decoration-color: #000080">│</span>
<span style="color: #000080; text-decoration-color: #000080">│</span>         <span style="color: #bfbf7f; text-decoration-color: #bfbf7f; font-style: italic">__sizeof__</span> = <span style="color: #00ffff; text-decoration-color: #00ffff; font-style: italic">def </span><span style="color: #800000; text-decoration-color: #800000; font-weight: bold">__sizeof__</span><span style="font-weight: bold">()</span>: <span style="color: #7f7f7f; text-decoration-color: #7f7f7f">Size of object in memory, in bytes.</span>                                      <span style="color: #000080; text-decoration-color: #000080">│</span>
<span style="color: #000080; text-decoration-color: #000080">│</span>            <span style="color: #bfbf7f; text-decoration-color: #bfbf7f; font-style: italic">__str__</span> = <span style="color: #00ffff; text-decoration-color: #00ffff; font-style: italic">def </span><span style="color: #800000; text-decoration-color: #800000; font-weight: bold">__str__</span><span style="font-weight: bold">()</span>: <span style="color: #7f7f7f; text-decoration-color: #7f7f7f">Return </span><span style="color: #bf7fbf; text-decoration-color: #bf7fbf; font-weight: bold">str</span><span style="color: #7f7f7f; text-decoration-color: #7f7f7f; font-weight: bold">(</span><span style="color: #7f7f7f; text-decoration-color: #7f7f7f">self</span><span style="color: #7f7f7f; text-decoration-color: #7f7f7f; font-weight: bold">)</span><span style="color: #7f7f7f; text-decoration-color: #7f7f7f">.</span>                                                           <span style="color: #000080; text-decoration-color: #000080">│</span>
<span style="color: #000080; text-decoration-color: #000080">│</span>   <span style="color: #bfbf7f; text-decoration-color: #bfbf7f; font-style: italic">__subclasshook__</span> = <span style="color: #00ffff; text-decoration-color: #00ffff; font-style: italic">def </span><span style="color: #800000; text-decoration-color: #800000; font-weight: bold">__subclasshook__</span><span style="font-weight: bold">(</span><span style="color: #808000; text-decoration-color: #808000">...</span><span style="font-weight: bold">)</span> <span style="color: #7f7f7f; text-decoration-color: #7f7f7f">Abstract classes can override this to customize </span><span style="color: #bf7fbf; text-decoration-color: #bf7fbf; font-weight: bold">issubclass</span><span style="color: #7f7f7f; text-decoration-color: #7f7f7f; font-weight: bold">()</span><span style="color: #7f7f7f; text-decoration-color: #7f7f7f">.</span>    <span style="color: #000080; text-decoration-color: #000080">│</span>
<span style="color: #000080; text-decoration-color: #000080">╰─────────────────────────────────────────────────────────────────────────────────────────────────────────────────╯</span>
</pre>
</div>
</div>
<div class="cell">
<div class="sourceCode cell-code" id="cb9" style="background: #f1f3f5;"><pre class="sourceCode python code-with-copy"><code class="sourceCode python"><span id="cb9-1"><span class="kw" style="color: #003B4F;">lambda</span> x: np.power(x, <span class="dv" style="color: #AD0000;">3</span>)</span>
<span id="cb9-2"></span>
<span id="cb9-3"></span>
<span id="cb9-4"><span class="kw" style="color: #003B4F;">def</span> f(x):</span>
<span id="cb9-5">    <span class="cf" style="color: #003B4F;">return</span> np.power(x, <span class="dv" style="color: #AD0000;">3</span>)</span></code></pre></div>
</div>
<div class="cell" data-execution_count="53">
<div class="sourceCode cell-code" id="cb10" style="background: #f1f3f5;"><pre class="sourceCode python code-with-copy"><code class="sourceCode python"><span id="cb10-1">d <span class="op" style="color: #5E5E5E;">=</span> {</span>
<span id="cb10-2">    <span class="vs" style="color: #20794D;">r"$\sin(x)$"</span>: np.sin,</span>
<span id="cb10-3">    <span class="vs" style="color: #20794D;">r"$\log(x)$"</span>: np.log,</span>
<span id="cb10-4">    <span class="vs" style="color: #20794D;">r"$\frac{sin(x)}</span><span class="sc" style="color: #5E5E5E;">{x}</span><span class="vs" style="color: #20794D;">$"</span>: <span class="kw" style="color: #003B4F;">lambda</span> x: np.sin(x) <span class="op" style="color: #5E5E5E;">/</span> x,</span>
<span id="cb10-5">    <span class="vs" style="color: #20794D;">r"$x^3$"</span>: <span class="kw" style="color: #003B4F;">lambda</span> x: np.power(x, <span class="dv" style="color: #AD0000;">3</span>),</span>
<span id="cb10-6">}</span></code></pre></div>
</div>
<div class="cell" data-execution_count="54">
<div class="sourceCode cell-code" id="cb11" style="background: #f1f3f5;"><pre class="sourceCode python code-with-copy"><code class="sourceCode python"><span id="cb11-1">d</span></code></pre></div>
<div class="cell-output cell-output-display" data-execution_count="54">
<pre><code>{'$\\sin(x)$': &lt;ufunc 'sin'&gt;,
 '$\\log(x)$': &lt;ufunc 'log'&gt;,
 '$\\frac{sin(x)}{x}$': &lt;function __main__.&lt;lambda&gt;(x)&gt;,
 '$x^3$': &lt;function __main__.&lt;lambda&gt;(x)&gt;}</code></pre>
</div>
</div>
<div class="cell" data-execution_count="55">
<div class="sourceCode cell-code" id="cb13" style="background: #f1f3f5;"><pre class="sourceCode python code-with-copy"><code class="sourceCode python"><span id="cb13-1">x <span class="op" style="color: #5E5E5E;">=</span> np.arange(<span class="fl" style="color: #AD0000;">0.005</span>, <span class="fl" style="color: #AD0000;">10.0</span>, <span class="fl" style="color: #AD0000;">0.005</span>)</span></code></pre></div>
</div>
<div class="cell" data-execution_count="56">
<div class="sourceCode cell-code" id="cb14" style="background: #f1f3f5;"><pre class="sourceCode python code-with-copy"><code class="sourceCode python"><span id="cb14-1">e <span class="op" style="color: #5E5E5E;">=</span> {k: v(x) <span class="cf" style="color: #003B4F;">for</span> k, v <span class="kw" style="color: #003B4F;">in</span> d.items()}</span></code></pre></div>
</div>
<div class="cell" data-execution_count="57">
<div class="sourceCode cell-code" id="cb15" style="background: #f1f3f5;"><pre class="sourceCode python code-with-copy"><code class="sourceCode python"><span id="cb15-1">e</span></code></pre></div>
<div class="cell-output cell-output-display" data-execution_count="57">
<pre><code>{'$\\sin(x)$': array([ 0.00499998,  0.00999983,  0.01499944, ..., -0.53137431,
        -0.53560333, -0.53981897]),
 '$\\log(x)$': array([-5.29831737, -4.60517019, -4.19970508, ...,  2.30108397,
         2.30158459,  2.30208497]),
 '$\\frac{sin(x)}{x}$': array([ 0.99999583,  0.99998333,  0.9999625 , ..., -0.05321726,
        -0.05361395, -0.0540089 ]),
 '$x^3$': array([1.25000000e-07, 1.00000000e-06, 3.37500000e-06, ...,
        9.95506747e+02, 9.97002999e+02, 9.98500750e+02])}</code></pre>
</div>
</div>
<div class="cell" data-execution_count="58">
<div class="sourceCode cell-code" id="cb17" style="background: #f1f3f5;"><pre class="sourceCode python code-with-copy"><code class="sourceCode python"><span id="cb17-1">df <span class="op" style="color: #5E5E5E;">=</span> pd.DataFrame(e, index<span class="op" style="color: #5E5E5E;">=</span>x)</span></code></pre></div>
</div>
<div class="cell" data-execution_count="59">
<div class="sourceCode cell-code" id="cb18" style="background: #f1f3f5;"><pre class="sourceCode python code-with-copy"><code class="sourceCode python"><span id="cb18-1">df</span></code></pre></div>
<div class="cell-output cell-output-display" data-execution_count="59">

<div>

<table class="dataframe table table-sm table-striped">
  <thead>
    <tr>
      <th></th>
      <th>$\sin(x)$</th>
      <th>$\log(x)$</th>
      <th>$\frac{sin(x)}{x}$</th>
      <th>$x^3$</th>
    </tr>
  </thead>
  <tbody>
    <tr>
      <th>0.005</th>
      <td>0.005000</td>
      <td>-5.298317</td>
      <td>0.999996</td>
      <td>1.250000e-07</td>
    </tr>
    <tr>
      <th>0.010</th>
      <td>0.010000</td>
      <td>-4.605170</td>
      <td>0.999983</td>
      <td>1.000000e-06</td>
    </tr>
    <tr>
      <th>0.015</th>
      <td>0.014999</td>
      <td>-4.199705</td>
      <td>0.999963</td>
      <td>3.375000e-06</td>
    </tr>
    <tr>
      <th>0.020</th>
      <td>0.019999</td>
      <td>-3.912023</td>
      <td>0.999933</td>
      <td>8.000000e-06</td>
    </tr>
    <tr>
      <th>0.025</th>
      <td>0.024997</td>
      <td>-3.688879</td>
      <td>0.999896</td>
      <td>1.562500e-05</td>
    </tr>
    <tr>
      <th>...</th>
      <td>...</td>
      <td>...</td>
      <td>...</td>
      <td>...</td>
    </tr>
    <tr>
      <th>9.975</th>
      <td>-0.522877</td>
      <td>2.300082</td>
      <td>-0.052419</td>
      <td>9.925187e+02</td>
    </tr>
    <tr>
      <th>9.980</th>
      <td>-0.527132</td>
      <td>2.300583</td>
      <td>-0.052819</td>
      <td>9.940120e+02</td>
    </tr>
    <tr>
      <th>9.985</th>
      <td>-0.531374</td>
      <td>2.301084</td>
      <td>-0.053217</td>
      <td>9.955067e+02</td>
    </tr>
    <tr>
      <th>9.990</th>
      <td>-0.535603</td>
      <td>2.301585</td>
      <td>-0.053614</td>
      <td>9.970030e+02</td>
    </tr>
    <tr>
      <th>9.995</th>
      <td>-0.539819</td>
      <td>2.302085</td>
      <td>-0.054009</td>
      <td>9.985007e+02</td>
    </tr>
  </tbody>
</table>
<p>1999 rows × 4 columns</p>
</div>
</div>
</div>
<div class="cell" data-execution_count="64">
<div class="sourceCode cell-code" id="cb19" style="background: #f1f3f5;"><pre class="sourceCode python code-with-copy"><code class="sourceCode python"><span id="cb19-1">df.plot()</span></code></pre></div>
<div class="cell-output cell-output-display" data-execution_count="64">
<pre><code>&lt;AxesSubplot:&gt;</code></pre>
</div>
<div class="cell-output cell-output-display">
<p><img src="https://github.com/nipunbatra/ml2023/notebooks/posts/tips_files/figure-html/cell-15-output-2.png" class="img-fluid"></p>
</div>
</div>
<div class="cell" data-execution_count="63">
<div class="sourceCode cell-code" id="cb21" style="background: #f1f3f5;"><pre class="sourceCode python code-with-copy"><code class="sourceCode python"><span id="cb21-1">df.plot(subplots<span class="op" style="color: #5E5E5E;">=</span><span class="va" style="color: #111111;">True</span>)</span></code></pre></div>
<div class="cell-output cell-output-display" data-execution_count="63">
<pre><code>array([&lt;AxesSubplot:&gt;, &lt;AxesSubplot:&gt;, &lt;AxesSubplot:&gt;, &lt;AxesSubplot:&gt;],
      dtype=object)</code></pre>
</div>
<div class="cell-output cell-output-display">
<p><img src="https://github.com/nipunbatra/ml2023/notebooks/posts/tips_files/figure-html/cell-16-output-2.png" class="img-fluid"></p>
</div>
</div>
<div class="cell" data-execution_count="46">
<div class="sourceCode cell-code" id="cb23" style="background: #f1f3f5;"><pre class="sourceCode python code-with-copy"><code class="sourceCode python"><span id="cb23-1">df</span></code></pre></div>
<div class="cell-output cell-output-display" data-execution_count="46">

<div>

<table class="dataframe table table-sm table-striped">
  <thead>
    <tr>
      <th></th>
      <th>$\sin$</th>
      <th>log</th>
      <th>$\frac{sin(x)}{x}$</th>
      <th>x^3</th>
    </tr>
  </thead>
  <tbody>
    <tr>
      <th>0.005</th>
      <td>0.005000</td>
      <td>-5.298317</td>
      <td>0.999996</td>
      <td>1.250000e-07</td>
    </tr>
    <tr>
      <th>0.010</th>
      <td>0.010000</td>
      <td>-4.605170</td>
      <td>0.999983</td>
      <td>1.000000e-06</td>
    </tr>
    <tr>
      <th>0.015</th>
      <td>0.014999</td>
      <td>-4.199705</td>
      <td>0.999963</td>
      <td>3.375000e-06</td>
    </tr>
    <tr>
      <th>0.020</th>
      <td>0.019999</td>
      <td>-3.912023</td>
      <td>0.999933</td>
      <td>8.000000e-06</td>
    </tr>
    <tr>
      <th>0.025</th>
      <td>0.024997</td>
      <td>-3.688879</td>
      <td>0.999896</td>
      <td>1.562500e-05</td>
    </tr>
    <tr>
      <th>...</th>
      <td>...</td>
      <td>...</td>
      <td>...</td>
      <td>...</td>
    </tr>
    <tr>
      <th>9.975</th>
      <td>-0.522877</td>
      <td>2.300082</td>
      <td>-0.052419</td>
      <td>9.925187e+02</td>
    </tr>
    <tr>
      <th>9.980</th>
      <td>-0.527132</td>
      <td>2.300583</td>
      <td>-0.052819</td>
      <td>9.940120e+02</td>
    </tr>
    <tr>
      <th>9.985</th>
      <td>-0.531374</td>
      <td>2.301084</td>
      <td>-0.053217</td>
      <td>9.955067e+02</td>
    </tr>
    <tr>
      <th>9.990</th>
      <td>-0.535603</td>
      <td>2.301585</td>
      <td>-0.053614</td>
      <td>9.970030e+02</td>
    </tr>
    <tr>
      <th>9.995</th>
      <td>-0.539819</td>
      <td>2.302085</td>
      <td>-0.054009</td>
      <td>9.985007e+02</td>
    </tr>
  </tbody>
</table>
<p>1999 rows × 4 columns</p>
</div>
</div>
</div>
<div class="cell" data-execution_count="65">
<div class="sourceCode cell-code" id="cb24" style="background: #f1f3f5;"><pre class="sourceCode python code-with-copy"><code class="sourceCode python"><span id="cb24-1">((df <span class="op" style="color: #5E5E5E;">-</span> df.<span class="bu" style="color: null;">min</span>(axis<span class="op" style="color: #5E5E5E;">=</span><span class="dv" style="color: #AD0000;">0</span>)) <span class="op" style="color: #5E5E5E;">/</span> (df.<span class="bu" style="color: null;">max</span>(axis<span class="op" style="color: #5E5E5E;">=</span><span class="dv" style="color: #AD0000;">0</span>) <span class="op" style="color: #5E5E5E;">-</span> df.<span class="bu" style="color: null;">min</span>(axis<span class="op" style="color: #5E5E5E;">=</span><span class="dv" style="color: #AD0000;">0</span>))).plot()</span></code></pre></div>
<div class="cell-output cell-output-display" data-execution_count="65">
<pre><code>&lt;AxesSubplot:&gt;</code></pre>
</div>
<div class="cell-output cell-output-display">
<p><img src="https://github.com/nipunbatra/ml2023/notebooks/posts/tips_files/figure-html/cell-18-output-2.png" class="img-fluid"></p>
</div>
</div>
<div class="cell" data-execution_count="66">
<div class="sourceCode cell-code" id="cb26" style="background: #f1f3f5;"><pre class="sourceCode python code-with-copy"><code class="sourceCode python"><span id="cb26-1">df <span class="op" style="color: #5E5E5E;">=</span> pd.DataFrame(np.random.randn(<span class="dv" style="color: #AD0000;">1000</span>, <span class="dv" style="color: #AD0000;">5</span>),</span>
<span id="cb26-2">                  columns<span class="op" style="color: #5E5E5E;">=</span><span class="st" style="color: #20794D;">"a,b,c,d,e"</span>.split(<span class="st" style="color: #20794D;">","</span>))</span>
<span id="cb26-3">df</span></code></pre></div>
<div class="cell-output cell-output-display" data-execution_count="66">

<div>

<table class="dataframe table table-sm table-striped">
  <thead>
    <tr>
      <th></th>
      <th>a</th>
      <th>b</th>
      <th>c</th>
      <th>d</th>
      <th>e</th>
    </tr>
  </thead>
  <tbody>
    <tr>
      <th>0</th>
      <td>1.593274</td>
      <td>0.568722</td>
      <td>-0.114487</td>
      <td>0.251630</td>
      <td>-1.210856</td>
    </tr>
    <tr>
      <th>1</th>
      <td>-0.393734</td>
      <td>0.085253</td>
      <td>0.099422</td>
      <td>-1.530616</td>
      <td>0.327623</td>
    </tr>
    <tr>
      <th>2</th>
      <td>0.279196</td>
      <td>-0.377051</td>
      <td>0.004175</td>
      <td>-1.483492</td>
      <td>-1.479796</td>
    </tr>
    <tr>
      <th>3</th>
      <td>0.134687</td>
      <td>-0.667723</td>
      <td>-0.011556</td>
      <td>0.839491</td>
      <td>-0.173930</td>
    </tr>
    <tr>
      <th>4</th>
      <td>-2.810668</td>
      <td>-0.150654</td>
      <td>-0.481044</td>
      <td>-0.234694</td>
      <td>0.899731</td>
    </tr>
    <tr>
      <th>...</th>
      <td>...</td>
      <td>...</td>
      <td>...</td>
      <td>...</td>
      <td>...</td>
    </tr>
    <tr>
      <th>995</th>
      <td>-0.837658</td>
      <td>1.315288</td>
      <td>-0.364523</td>
      <td>1.993571</td>
      <td>1.584878</td>
    </tr>
    <tr>
      <th>996</th>
      <td>-2.104663</td>
      <td>-2.553118</td>
      <td>-1.242666</td>
      <td>0.201987</td>
      <td>-0.305332</td>
    </tr>
    <tr>
      <th>997</th>
      <td>-1.195587</td>
      <td>-1.577903</td>
      <td>0.849912</td>
      <td>0.327590</td>
      <td>-0.001670</td>
    </tr>
    <tr>
      <th>998</th>
      <td>-0.035563</td>
      <td>-0.489252</td>
      <td>1.930498</td>
      <td>-0.262645</td>
      <td>0.825932</td>
    </tr>
    <tr>
      <th>999</th>
      <td>-0.643267</td>
      <td>-0.828981</td>
      <td>-0.202735</td>
      <td>-0.257866</td>
      <td>0.070815</td>
    </tr>
  </tbody>
</table>
<p>1000 rows × 5 columns</p>
</div>
</div>
</div>
<div class="cell" data-execution_count="67">
<div class="sourceCode cell-code" id="cb27" style="background: #f1f3f5;"><pre class="sourceCode python code-with-copy"><code class="sourceCode python"><span id="cb27-1">df <span class="op" style="color: #5E5E5E;">=</span> df.assign(f<span class="op" style="color: #5E5E5E;">=</span>df.<span class="bu" style="color: null;">sum</span>(axis<span class="op" style="color: #5E5E5E;">=</span><span class="dv" style="color: #AD0000;">1</span>))</span></code></pre></div>
</div>
<div class="cell" data-execution_count="68">
<div class="sourceCode cell-code" id="cb28" style="background: #f1f3f5;"><pre class="sourceCode python code-with-copy"><code class="sourceCode python"><span id="cb28-1">df</span></code></pre></div>
<div class="cell-output cell-output-display" data-execution_count="68">

<div>

<table class="dataframe table table-sm table-striped">
  <thead>
    <tr>
      <th></th>
      <th>a</th>
      <th>b</th>
      <th>c</th>
      <th>d</th>
      <th>e</th>
      <th>f</th>
    </tr>
  </thead>
  <tbody>
    <tr>
      <th>0</th>
      <td>1.593274</td>
      <td>0.568722</td>
      <td>-0.114487</td>
      <td>0.251630</td>
      <td>-1.210856</td>
      <td>1.088284</td>
    </tr>
    <tr>
      <th>1</th>
      <td>-0.393734</td>
      <td>0.085253</td>
      <td>0.099422</td>
      <td>-1.530616</td>
      <td>0.327623</td>
      <td>-1.412052</td>
    </tr>
    <tr>
      <th>2</th>
      <td>0.279196</td>
      <td>-0.377051</td>
      <td>0.004175</td>
      <td>-1.483492</td>
      <td>-1.479796</td>
      <td>-3.056967</td>
    </tr>
    <tr>
      <th>3</th>
      <td>0.134687</td>
      <td>-0.667723</td>
      <td>-0.011556</td>
      <td>0.839491</td>
      <td>-0.173930</td>
      <td>0.120969</td>
    </tr>
    <tr>
      <th>4</th>
      <td>-2.810668</td>
      <td>-0.150654</td>
      <td>-0.481044</td>
      <td>-0.234694</td>
      <td>0.899731</td>
      <td>-2.777329</td>
    </tr>
    <tr>
      <th>...</th>
      <td>...</td>
      <td>...</td>
      <td>...</td>
      <td>...</td>
      <td>...</td>
      <td>...</td>
    </tr>
    <tr>
      <th>995</th>
      <td>-0.837658</td>
      <td>1.315288</td>
      <td>-0.364523</td>
      <td>1.993571</td>
      <td>1.584878</td>
      <td>3.691555</td>
    </tr>
    <tr>
      <th>996</th>
      <td>-2.104663</td>
      <td>-2.553118</td>
      <td>-1.242666</td>
      <td>0.201987</td>
      <td>-0.305332</td>
      <td>-6.003792</td>
    </tr>
    <tr>
      <th>997</th>
      <td>-1.195587</td>
      <td>-1.577903</td>
      <td>0.849912</td>
      <td>0.327590</td>
      <td>-0.001670</td>
      <td>-1.597657</td>
    </tr>
    <tr>
      <th>998</th>
      <td>-0.035563</td>
      <td>-0.489252</td>
      <td>1.930498</td>
      <td>-0.262645</td>
      <td>0.825932</td>
      <td>1.968971</td>
    </tr>
    <tr>
      <th>999</th>
      <td>-0.643267</td>
      <td>-0.828981</td>
      <td>-0.202735</td>
      <td>-0.257866</td>
      <td>0.070815</td>
      <td>-1.862035</td>
    </tr>
  </tbody>
</table>
<p>1000 rows × 6 columns</p>
</div>
</div>
</div>
<div class="cell" data-execution_count="66">
<div class="sourceCode cell-code" id="cb29" style="background: #f1f3f5;"><pre class="sourceCode python code-with-copy"><code class="sourceCode python"><span id="cb29-1">df.query(<span class="st" style="color: #20794D;">"f &gt; 5"</span>)[<span class="st" style="color: #20794D;">"f"</span>].std()</span></code></pre></div>
<div class="cell-output cell-output-display" data-execution_count="66">
<pre><code>0.6609257763922614</code></pre>
</div>
</div>
<div class="cell" data-execution_count="67">
<div class="sourceCode cell-code" id="cb31" style="background: #f1f3f5;"><pre class="sourceCode python code-with-copy"><code class="sourceCode python"><span id="cb31-1">df.query(<span class="st" style="color: #20794D;">"f &lt;= 5"</span>)[<span class="st" style="color: #20794D;">"f"</span>].std()</span></code></pre></div>
<div class="cell-output cell-output-display" data-execution_count="67">
<pre><code>2.1891090850524444</code></pre>
</div>
</div>
<div class="cell" data-execution_count="71">
<div class="sourceCode cell-code" id="cb33" style="background: #f1f3f5;"><pre class="sourceCode python code-with-copy"><code class="sourceCode python"><span id="cb33-1"><span class="co" style="color: #5E5E5E;">"tolist"</span> <span class="kw" style="color: #003B4F;">in</span> <span class="bu" style="color: null;">dir</span>(df)</span></code></pre></div>
<div class="cell-output cell-output-display" data-execution_count="71">
<pre><code>False</code></pre>
</div>
</div>
<div class="cell" data-execution_count="29">
<div class="sourceCode cell-code" id="cb35" style="background: #f1f3f5;"><pre class="sourceCode python code-with-copy"><code class="sourceCode python"><span id="cb35-1"><span class="kw" style="color: #003B4F;">def</span> search(obj, query):</span>
<span id="cb35-2">    <span class="im" style="color: #00769E;">import</span> re</span>
<span id="cb35-3"></span>
<span id="cb35-4">    <span class="cf" style="color: #003B4F;">return</span> <span class="bu" style="color: null;">list</span>(<span class="bu" style="color: null;">filter</span>(<span class="kw" style="color: #003B4F;">lambda</span> x: re.search(query, x), <span class="bu" style="color: null;">dir</span>(obj)))</span></code></pre></div>
</div>
<div class="cell" data-execution_count="34">
<div class="sourceCode cell-code" id="cb36" style="background: #f1f3f5;"><pre class="sourceCode python code-with-copy"><code class="sourceCode python"><span id="cb36-1">search(a, <span class="st" style="color: #20794D;">"lis"</span>)</span></code></pre></div>
<div class="cell-output cell-output-display" data-execution_count="34">
<pre><code>['tolist']</code></pre>
</div>
</div>
<div class="cell" data-execution_count="1">
<div class="sourceCode cell-code" id="cb38" style="background: #f1f3f5;"><pre class="sourceCode python code-with-copy"><code class="sourceCode python"><span id="cb38-1"><span class="im" style="color: #00769E;">import</span> numpy <span class="im" style="color: #00769E;">as</span> np</span>
<span id="cb38-2"><span class="im" style="color: #00769E;">import</span> pandas <span class="im" style="color: #00769E;">as</span> pd</span></code></pre></div>
</div>
<div class="cell" data-execution_count="98">
<div class="sourceCode cell-code" id="cb39" style="background: #f1f3f5;"><pre class="sourceCode python code-with-copy"><code class="sourceCode python"><span id="cb39-1"><span class="kw" style="color: #003B4F;">def</span> search(obj, query):</span>
<span id="cb39-2">    <span class="im" style="color: #00769E;">import</span> re</span>
<span id="cb39-3">    <span class="im" style="color: #00769E;">from</span> rich <span class="im" style="color: #00769E;">import</span> inspect</span>
<span id="cb39-4">    <span class="im" style="color: #00769E;">from</span> rich.pretty <span class="im" style="color: #00769E;">import</span> Pretty</span>
<span id="cb39-5">    <span class="im" style="color: #00769E;">from</span> rich.panel <span class="im" style="color: #00769E;">import</span> Panel</span>
<span id="cb39-6"></span>
<span id="cb39-7">    z <span class="op" style="color: #5E5E5E;">=</span> <span class="bu" style="color: null;">list</span>(<span class="bu" style="color: null;">filter</span>(<span class="kw" style="color: #003B4F;">lambda</span> x: re.search(query, x), <span class="bu" style="color: null;">dir</span>(obj)))</span>
<span id="cb39-8">    p <span class="op" style="color: #5E5E5E;">=</span> Panel(Pretty(<span class="st" style="color: #20794D;">"a"</span>), title<span class="op" style="color: #5E5E5E;">=</span><span class="ss" style="color: #20794D;">f"Searching for `</span><span class="sc" style="color: #5E5E5E;">{</span>query<span class="sc" style="color: #5E5E5E;">}</span><span class="ss" style="color: #20794D;">`"</span>)</span>
<span id="cb39-9">    <span class="co" style="color: #5E5E5E;"># return p</span></span>
<span id="cb39-10">    ps <span class="op" style="color: #5E5E5E;">=</span> []</span>
<span id="cb39-11">    <span class="cf" style="color: #003B4F;">for</span> q <span class="kw" style="color: #003B4F;">in</span> z:</span>
<span id="cb39-12">        ps.append(Panel(Pretty(inspect(<span class="bu" style="color: null;">getattr</span>(obj, q), methods<span class="op" style="color: #5E5E5E;">=</span><span class="va" style="color: #111111;">True</span>, docs<span class="op" style="color: #5E5E5E;">=</span><span class="va" style="color: #111111;">True</span>))))</span></code></pre></div>
</div>
<div class="cell" data-execution_count="99">
<div class="sourceCode cell-code" id="cb40" style="background: #f1f3f5;"><pre class="sourceCode python code-with-copy"><code class="sourceCode python"><span id="cb40-1">search(np.random, <span class="st" style="color: #20794D;">"normal"</span>)</span></code></pre></div>
<div class="cell-output cell-output-display">
<pre style="white-space:pre;overflow-x:auto;line-height:normal;font-family:Menlo,'DejaVu Sans Mono',consolas,'Courier New',monospace"><span style="color: #000080; text-decoration-color: #000080">╭─ </span><span style="color: #000080; text-decoration-color: #000080; font-weight: bold">&lt;</span><span style="color: #ff00ff; text-decoration-color: #ff00ff; font-weight: bold">built-in</span><span style="color: #000000; text-decoration-color: #000000"> method lognormal of numpy.random.mtrand.RandomState object at </span><span style="color: #008080; text-decoration-color: #008080; font-weight: bold">0x10c627840</span><span style="color: #000080; text-decoration-color: #000080; font-weight: bold">&gt;</span><span style="color: #000080; text-decoration-color: #000080"> ─╮</span>
<span style="color: #000080; text-decoration-color: #000080">│</span> <span style="color: #00ffff; text-decoration-color: #00ffff; font-style: italic">def </span><span style="color: #800000; text-decoration-color: #800000; font-weight: bold">RandomState.lognormal</span><span style="font-weight: bold">(</span><span style="color: #808000; text-decoration-color: #808000">...</span><span style="font-weight: bold">)</span>                                                         <span style="color: #000080; text-decoration-color: #000080">│</span>
<span style="color: #000080; text-decoration-color: #000080">│</span>                                                                                        <span style="color: #000080; text-decoration-color: #000080">│</span>
<span style="color: #000080; text-decoration-color: #000080">│</span> <span style="color: #800080; text-decoration-color: #800080; font-weight: bold">lognormal</span><span style="color: #008080; text-decoration-color: #008080; font-weight: bold">(</span><span style="color: #808000; text-decoration-color: #808000">mean</span><span style="color: #008080; text-decoration-color: #008080">=</span><span style="color: #008080; text-decoration-color: #008080; font-weight: bold">0.0</span><span style="color: #008080; text-decoration-color: #008080">, </span><span style="color: #808000; text-decoration-color: #808000">sigma</span><span style="color: #008080; text-decoration-color: #008080">=</span><span style="color: #008080; text-decoration-color: #008080; font-weight: bold">1.0</span><span style="color: #008080; text-decoration-color: #008080">, </span><span style="color: #808000; text-decoration-color: #808000">size</span><span style="color: #008080; text-decoration-color: #008080">=</span><span style="color: #800080; text-decoration-color: #800080; font-style: italic">None</span><span style="color: #008080; text-decoration-color: #008080; font-weight: bold">)</span>                                              <span style="color: #000080; text-decoration-color: #000080">│</span>
<span style="color: #000080; text-decoration-color: #000080">│</span>                                                                                        <span style="color: #000080; text-decoration-color: #000080">│</span>
<span style="color: #000080; text-decoration-color: #000080">│</span> <span style="color: #008080; text-decoration-color: #008080; font-weight: bold">29</span><span style="font-style: italic"> attribute(s) not shown.</span> Run <span style="color: #800080; text-decoration-color: #800080; font-weight: bold">inspect</span><span style="font-weight: bold">(</span>inspect<span style="font-weight: bold">)</span> for options.                           <span style="color: #000080; text-decoration-color: #000080">│</span>
<span style="color: #000080; text-decoration-color: #000080">╰────────────────────────────────────────────────────────────────────────────────────────╯</span>
</pre>
</div>
<div class="cell-output cell-output-display">
<pre style="white-space:pre;overflow-x:auto;line-height:normal;font-family:Menlo,'DejaVu Sans Mono',consolas,'Courier New',monospace"><span style="color: #000080; text-decoration-color: #000080">╭─ </span><span style="color: #000080; text-decoration-color: #000080; font-weight: bold">&lt;</span><span style="color: #ff00ff; text-decoration-color: #ff00ff; font-weight: bold">built-in</span><span style="color: #000000; text-decoration-color: #000000"> method multivariate_normal of numpy.random.mtrand.RandomState object at </span><span style="color: #008080; text-decoration-color: #008080; font-weight: bold">0x10c627840</span><span style="color: #000080; text-decoration-color: #000080; font-weight: bold">&gt;</span><span style="color: #000080; text-decoration-color: #000080"> ─╮</span>
<span style="color: #000080; text-decoration-color: #000080">│</span> <span style="color: #00ffff; text-decoration-color: #00ffff; font-style: italic">def </span><span style="color: #800000; text-decoration-color: #800000; font-weight: bold">RandomState.multivariate_normal</span><span style="font-weight: bold">(</span><span style="color: #808000; text-decoration-color: #808000">...</span><span style="font-weight: bold">)</span>                                                         <span style="color: #000080; text-decoration-color: #000080">│</span>
<span style="color: #000080; text-decoration-color: #000080">│</span>                                                                                                  <span style="color: #000080; text-decoration-color: #000080">│</span>
<span style="color: #000080; text-decoration-color: #000080">│</span> <span style="color: #800080; text-decoration-color: #800080; font-weight: bold">multivariate_normal</span><span style="color: #008080; text-decoration-color: #008080; font-weight: bold">(</span><span style="color: #008080; text-decoration-color: #008080">mean, cov, </span><span style="color: #808000; text-decoration-color: #808000">size</span><span style="color: #008080; text-decoration-color: #008080">=</span><span style="color: #800080; text-decoration-color: #800080; font-style: italic">None</span><span style="color: #008080; text-decoration-color: #008080">, </span><span style="color: #808000; text-decoration-color: #808000">check_valid</span><span style="color: #008080; text-decoration-color: #008080">=</span><span style="color: #008000; text-decoration-color: #008000">'warn'</span><span style="color: #008080; text-decoration-color: #008080">, </span><span style="color: #808000; text-decoration-color: #808000">tol</span><span style="color: #008080; text-decoration-color: #008080">=</span><span style="color: #008080; text-decoration-color: #008080; font-weight: bold">1e-8</span><span style="color: #008080; text-decoration-color: #008080; font-weight: bold">)</span>                          <span style="color: #000080; text-decoration-color: #000080">│</span>
<span style="color: #000080; text-decoration-color: #000080">│</span>                                                                                                  <span style="color: #000080; text-decoration-color: #000080">│</span>
<span style="color: #000080; text-decoration-color: #000080">│</span> <span style="color: #008080; text-decoration-color: #008080; font-weight: bold">29</span><span style="font-style: italic"> attribute(s) not shown.</span> Run <span style="color: #800080; text-decoration-color: #800080; font-weight: bold">inspect</span><span style="font-weight: bold">(</span>inspect<span style="font-weight: bold">)</span> for options.                                     <span style="color: #000080; text-decoration-color: #000080">│</span>
<span style="color: #000080; text-decoration-color: #000080">╰──────────────────────────────────────────────────────────────────────────────────────────────────╯</span>
</pre>
</div>
<div class="cell-output cell-output-display">
<pre style="white-space:pre;overflow-x:auto;line-height:normal;font-family:Menlo,'DejaVu Sans Mono',consolas,'Courier New',monospace"><span style="color: #000080; text-decoration-color: #000080">╭─ </span><span style="color: #000080; text-decoration-color: #000080; font-weight: bold">&lt;</span><span style="color: #ff00ff; text-decoration-color: #ff00ff; font-weight: bold">built-in</span><span style="color: #000000; text-decoration-color: #000000"> method normal of numpy.random.mtrand.RandomState object at </span><span style="color: #008080; text-decoration-color: #008080; font-weight: bold">0x10c627840</span><span style="color: #000080; text-decoration-color: #000080; font-weight: bold">&gt;</span><span style="color: #000080; text-decoration-color: #000080"> ─╮</span>
<span style="color: #000080; text-decoration-color: #000080">│</span> <span style="color: #00ffff; text-decoration-color: #00ffff; font-style: italic">def </span><span style="color: #800000; text-decoration-color: #800000; font-weight: bold">RandomState.normal</span><span style="font-weight: bold">(</span><span style="color: #808000; text-decoration-color: #808000">...</span><span style="font-weight: bold">)</span>                                                         <span style="color: #000080; text-decoration-color: #000080">│</span>
<span style="color: #000080; text-decoration-color: #000080">│</span>                                                                                     <span style="color: #000080; text-decoration-color: #000080">│</span>
<span style="color: #000080; text-decoration-color: #000080">│</span> <span style="color: #800080; text-decoration-color: #800080; font-weight: bold">normal</span><span style="color: #008080; text-decoration-color: #008080; font-weight: bold">(</span><span style="color: #808000; text-decoration-color: #808000">loc</span><span style="color: #008080; text-decoration-color: #008080">=</span><span style="color: #008080; text-decoration-color: #008080; font-weight: bold">0.0</span><span style="color: #008080; text-decoration-color: #008080">, </span><span style="color: #808000; text-decoration-color: #808000">scale</span><span style="color: #008080; text-decoration-color: #008080">=</span><span style="color: #008080; text-decoration-color: #008080; font-weight: bold">1.0</span><span style="color: #008080; text-decoration-color: #008080">, </span><span style="color: #808000; text-decoration-color: #808000">size</span><span style="color: #008080; text-decoration-color: #008080">=</span><span style="color: #800080; text-decoration-color: #800080; font-style: italic">None</span><span style="color: #008080; text-decoration-color: #008080; font-weight: bold">)</span>                                               <span style="color: #000080; text-decoration-color: #000080">│</span>
<span style="color: #000080; text-decoration-color: #000080">│</span>                                                                                     <span style="color: #000080; text-decoration-color: #000080">│</span>
<span style="color: #000080; text-decoration-color: #000080">│</span> <span style="color: #008080; text-decoration-color: #008080; font-weight: bold">29</span><span style="font-style: italic"> attribute(s) not shown.</span> Run <span style="color: #800080; text-decoration-color: #800080; font-weight: bold">inspect</span><span style="font-weight: bold">(</span>inspect<span style="font-weight: bold">)</span> for options.                        <span style="color: #000080; text-decoration-color: #000080">│</span>
<span style="color: #000080; text-decoration-color: #000080">╰─────────────────────────────────────────────────────────────────────────────────────╯</span>
</pre>
</div>
<div class="cell-output cell-output-display">
<pre style="white-space:pre;overflow-x:auto;line-height:normal;font-family:Menlo,'DejaVu Sans Mono',consolas,'Courier New',monospace"><span style="color: #000080; text-decoration-color: #000080">╭─ </span><span style="color: #000080; text-decoration-color: #000080; font-weight: bold">&lt;</span><span style="color: #ff00ff; text-decoration-color: #ff00ff; font-weight: bold">built-in</span><span style="color: #000000; text-decoration-color: #000000"> method standard_normal of numpy.random.mtrand.RandomState object at </span><span style="color: #008080; text-decoration-color: #008080; font-weight: bold">0x10c627840</span><span style="color: #000080; text-decoration-color: #000080; font-weight: bold">&gt;</span><span style="color: #000080; text-decoration-color: #000080"> ─╮</span>
<span style="color: #000080; text-decoration-color: #000080">│</span> <span style="color: #00ffff; text-decoration-color: #00ffff; font-style: italic">def </span><span style="color: #800000; text-decoration-color: #800000; font-weight: bold">RandomState.standard_normal</span><span style="font-weight: bold">(</span><span style="color: #808000; text-decoration-color: #808000">...</span><span style="font-weight: bold">)</span>                                                         <span style="color: #000080; text-decoration-color: #000080">│</span>
<span style="color: #000080; text-decoration-color: #000080">│</span>                                                                                              <span style="color: #000080; text-decoration-color: #000080">│</span>
<span style="color: #000080; text-decoration-color: #000080">│</span> <span style="color: #800080; text-decoration-color: #800080; font-weight: bold">standard_normal</span><span style="color: #008080; text-decoration-color: #008080; font-weight: bold">(</span><span style="color: #808000; text-decoration-color: #808000">size</span><span style="color: #008080; text-decoration-color: #008080">=</span><span style="color: #800080; text-decoration-color: #800080; font-style: italic">None</span><span style="color: #008080; text-decoration-color: #008080; font-weight: bold">)</span>                                                                   <span style="color: #000080; text-decoration-color: #000080">│</span>
<span style="color: #000080; text-decoration-color: #000080">│</span>                                                                                              <span style="color: #000080; text-decoration-color: #000080">│</span>
<span style="color: #000080; text-decoration-color: #000080">│</span> <span style="color: #008080; text-decoration-color: #008080; font-weight: bold">29</span><span style="font-style: italic"> attribute(s) not shown.</span> Run <span style="color: #800080; text-decoration-color: #800080; font-weight: bold">inspect</span><span style="font-weight: bold">(</span>inspect<span style="font-weight: bold">)</span> for options.                                 <span style="color: #000080; text-decoration-color: #000080">│</span>
<span style="color: #000080; text-decoration-color: #000080">╰──────────────────────────────────────────────────────────────────────────────────────────────╯</span>
</pre>
</div>
</div>
<div class="cell" data-execution_count="73">
<div class="sourceCode cell-code" id="cb41" style="background: #f1f3f5;"><pre class="sourceCode python code-with-copy"><code class="sourceCode python"><span id="cb41-1"><span class="bu" style="color: null;">getattr</span>(pd.DataFrame().values, <span class="st" style="color: #20794D;">"tolist"</span>)</span></code></pre></div>
<div class="cell-output cell-output-display" data-execution_count="73">
<pre><code>&lt;function ndarray.tolist&gt;</code></pre>
</div>
</div>
<div class="cell" data-execution_count="70">
<div class="sourceCode cell-code" id="cb43" style="background: #f1f3f5;"><pre class="sourceCode python code-with-copy"><code class="sourceCode python"><span id="cb43-1">pd.DataFrame.to</span></code></pre></div>
<div class="cell-output cell-output-display" data-execution_count="70">

<div>

<table class="dataframe table table-sm table-striped">
  <thead>
    <tr>
      <th></th>
    </tr>
  </thead>
  <tbody>
  </tbody>
</table>
</div>
</div>
</div>
<div class="cell" data-execution_count="14">
<div class="sourceCode cell-code" id="cb44" style="background: #f1f3f5;"><pre class="sourceCode python code-with-copy"><code class="sourceCode python"><span id="cb44-1">df <span class="op" style="color: #5E5E5E;">=</span> pd.DataFrame()</span>
<span id="cb44-2">search(df.values, <span class="st" style="color: #20794D;">"list"</span>)</span></code></pre></div>
<div class="cell-output cell-output-display" data-execution_count="14">
<pre style="white-space:pre;overflow-x:auto;line-height:normal;font-family:Menlo,'DejaVu Sans Mono',consolas,'Courier New',monospace">╭───────────────────────────────────────────── Searching for {query} ─────────────────────────────────────────────╮
│ <span style="font-weight: bold">[</span><span style="color: #008000; text-decoration-color: #008000">'tolist'</span><span style="font-weight: bold">]</span>                                                                                                      │
╰─────────────────────────────────────────────────────────────────────────────────────────────────────────────────╯
</pre>
</div>
</div>
<div class="cell" data-execution_count="11">
<div class="sourceCode cell-code" id="cb45" style="background: #f1f3f5;"><pre class="sourceCode python code-with-copy"><code class="sourceCode python"><span id="cb45-1">search(pd.DataFrame, <span class="st" style="color: #20794D;">"to"</span>)</span></code></pre></div>
<div class="cell-output cell-output-display" data-execution_count="11">
<pre style="white-space:pre;overflow-x:auto;line-height:normal;font-family:Menlo,'DejaVu Sans Mono',consolas,'Courier New',monospace">╭─────────────────────────────────────────────────────────────────────────────────────────────────────────────────╮
│ <span style="font-weight: bold">[</span>                                                                                                               │
│     <span style="color: #008000; text-decoration-color: #008000">'_constructor'</span>,                                                                                             │
│     <span style="color: #008000; text-decoration-color: #008000">'_constructor_sliced'</span>,                                                                                      │
│     <span style="color: #008000; text-decoration-color: #008000">'_to_dict_of_blocks'</span>,                                                                                       │
│     <span style="color: #008000; text-decoration-color: #008000">'kurtosis'</span>,                                                                                                 │
│     <span style="color: #008000; text-decoration-color: #008000">'to_clipboard'</span>,                                                                                             │
│     <span style="color: #008000; text-decoration-color: #008000">'to_csv'</span>,                                                                                                   │
│     <span style="color: #008000; text-decoration-color: #008000">'to_dict'</span>,                                                                                                  │
│     <span style="color: #008000; text-decoration-color: #008000">'to_excel'</span>,                                                                                                 │
│     <span style="color: #008000; text-decoration-color: #008000">'to_feather'</span>,                                                                                               │
│     <span style="color: #008000; text-decoration-color: #008000">'to_gbq'</span>,                                                                                                   │
│     <span style="color: #008000; text-decoration-color: #008000">'to_hdf'</span>,                                                                                                   │
│     <span style="color: #008000; text-decoration-color: #008000">'to_html'</span>,                                                                                                  │
│     <span style="color: #008000; text-decoration-color: #008000">'to_json'</span>,                                                                                                  │
│     <span style="color: #008000; text-decoration-color: #008000">'to_latex'</span>,                                                                                                 │
│     <span style="color: #008000; text-decoration-color: #008000">'to_markdown'</span>,                                                                                              │
│     <span style="color: #008000; text-decoration-color: #008000">'to_numpy'</span>,                                                                                                 │
│     <span style="color: #008000; text-decoration-color: #008000">'to_orc'</span>,                                                                                                   │
│     <span style="color: #008000; text-decoration-color: #008000">'to_parquet'</span>,                                                                                               │
│     <span style="color: #008000; text-decoration-color: #008000">'to_period'</span>,                                                                                                │
│     <span style="color: #008000; text-decoration-color: #008000">'to_pickle'</span>,                                                                                                │
│     <span style="color: #008000; text-decoration-color: #008000">'to_records'</span>,                                                                                               │
│     <span style="color: #008000; text-decoration-color: #008000">'to_sql'</span>,                                                                                                   │
│     <span style="color: #008000; text-decoration-color: #008000">'to_stata'</span>,                                                                                                 │
│     <span style="color: #008000; text-decoration-color: #008000">'to_string'</span>,                                                                                                │
│     <span style="color: #008000; text-decoration-color: #008000">'to_timestamp'</span>,                                                                                             │
│     <span style="color: #008000; text-decoration-color: #008000">'to_xarray'</span>,                                                                                                │
│     <span style="color: #008000; text-decoration-color: #008000">'to_xml'</span>                                                                                                    │
│ <span style="font-weight: bold">]</span>                                                                                                               │
╰─────────────────────────────────────────────────────────────────────────────────────────────────────────────────╯
</pre>
</div>
</div>
<div class="cell" data-execution_count="47">
<div class="sourceCode cell-code" id="cb46" style="background: #f1f3f5;"><pre class="sourceCode python code-with-copy"><code class="sourceCode python"><span id="cb46-1">q <span class="op" style="color: #5E5E5E;">=</span> <span class="st" style="color: #20794D;">"normal"</span></span></code></pre></div>
</div>
<div class="cell" data-execution_count="55">
<div class="sourceCode cell-code" id="cb47" style="background: #f1f3f5;"><pre class="sourceCode python code-with-copy"><code class="sourceCode python"><span id="cb47-1">np.random.normal</span></code></pre></div>
<div class="cell-output cell-output-display" data-execution_count="55">
<pre><code>&lt;function RandomState.normal&gt;</code></pre>
</div>
</div>
<div class="cell" data-execution_count="65">
<div class="sourceCode cell-code" id="cb49" style="background: #f1f3f5;"><pre class="sourceCode python code-with-copy"><code class="sourceCode python"><span id="cb49-1"><span class="im" style="color: #00769E;">from</span> rich <span class="im" style="color: #00769E;">import</span> inspect</span>
<span id="cb49-2"></span>
<span id="cb49-3">inspect(<span class="bu" style="color: null;">eval</span>(<span class="ss" style="color: #20794D;">f"np.random.</span><span class="sc" style="color: #5E5E5E;">{</span>q<span class="sc" style="color: #5E5E5E;">}</span><span class="ss" style="color: #20794D;">"</span>), methods<span class="op" style="color: #5E5E5E;">=</span><span class="va" style="color: #111111;">True</span>, <span class="bu" style="color: null;">all</span><span class="op" style="color: #5E5E5E;">=</span><span class="va" style="color: #111111;">True</span>)</span></code></pre></div>
<div class="cell-output cell-output-display">
<pre style="white-space:pre;overflow-x:auto;line-height:normal;font-family:Menlo,'DejaVu Sans Mono',consolas,'Courier New',monospace"><span style="color: #000080; text-decoration-color: #000080">╭─────────────── </span><span style="color: #000080; text-decoration-color: #000080; font-weight: bold">&lt;</span><span style="color: #ff00ff; text-decoration-color: #ff00ff; font-weight: bold">built-in</span><span style="color: #000000; text-decoration-color: #000000"> method normal of numpy.random.mtrand.RandomState object at </span><span style="color: #008080; text-decoration-color: #008080; font-weight: bold">0x10c627840</span><span style="color: #000080; text-decoration-color: #000080; font-weight: bold">&gt;</span><span style="color: #000080; text-decoration-color: #000080"> ───────────────╮</span>
<span style="color: #000080; text-decoration-color: #000080">│</span> <span style="color: #00ffff; text-decoration-color: #00ffff; font-style: italic">def </span><span style="color: #800000; text-decoration-color: #800000; font-weight: bold">RandomState.normal</span><span style="font-weight: bold">(</span><span style="color: #808000; text-decoration-color: #808000">...</span><span style="font-weight: bold">)</span>                                                                                     <span style="color: #000080; text-decoration-color: #000080">│</span>
<span style="color: #000080; text-decoration-color: #000080">│</span>                                                                                                                 <span style="color: #000080; text-decoration-color: #000080">│</span>
<span style="color: #000080; text-decoration-color: #000080">│</span> <span style="color: #800080; text-decoration-color: #800080; font-weight: bold">normal</span><span style="color: #008080; text-decoration-color: #008080; font-weight: bold">(</span><span style="color: #808000; text-decoration-color: #808000">loc</span><span style="color: #008080; text-decoration-color: #008080">=</span><span style="color: #008080; text-decoration-color: #008080; font-weight: bold">0.0</span><span style="color: #008080; text-decoration-color: #008080">, </span><span style="color: #808000; text-decoration-color: #808000">scale</span><span style="color: #008080; text-decoration-color: #008080">=</span><span style="color: #008080; text-decoration-color: #008080; font-weight: bold">1.0</span><span style="color: #008080; text-decoration-color: #008080">, </span><span style="color: #808000; text-decoration-color: #808000">size</span><span style="color: #008080; text-decoration-color: #008080">=</span><span style="color: #800080; text-decoration-color: #800080; font-style: italic">None</span><span style="color: #008080; text-decoration-color: #008080; font-weight: bold">)</span>                                                                           <span style="color: #000080; text-decoration-color: #000080">│</span>
<span style="color: #000080; text-decoration-color: #000080">│</span>                                                                                                                 <span style="color: #000080; text-decoration-color: #000080">│</span>
<span style="color: #000080; text-decoration-color: #000080">│</span>            <span style="color: #bfbf7f; text-decoration-color: #bfbf7f; font-style: italic">__doc__</span> = <span style="color: #008000; text-decoration-color: #008000">'\n        normal(loc=0.0, scale=1.0, size=None)\n\n        Draw random samples from a </span>    <span style="color: #000080; text-decoration-color: #000080">│</span>
<span style="color: #000080; text-decoration-color: #000080">│</span>                      <span style="color: #008000; text-decoration-color: #008000">normal (Gaussian) distribution.\n\n        The probability density function of the normal </span> <span style="color: #000080; text-decoration-color: #000080">│</span>
<span style="color: #000080; text-decoration-color: #000080">│</span>                      <span style="color: #008000; text-decoration-color: #008000">distribution, first\n        derived by De Moivre and 200 years later by both Gauss and </span>   <span style="color: #000080; text-decoration-color: #000080">│</span>
<span style="color: #000080; text-decoration-color: #000080">│</span>                      <span style="color: #008000; text-decoration-color: #008000">Laplace\n        independently [2]_, is often called the bell curve because of\n        </span>   <span style="color: #000080; text-decoration-color: #000080">│</span>
<span style="color: #000080; text-decoration-color: #000080">│</span>                      <span style="color: #008000; text-decoration-color: #008000">its characteristic shape (see the example below).\n\n        The normal distributions </span>     <span style="color: #000080; text-decoration-color: #000080">│</span>
<span style="color: #000080; text-decoration-color: #000080">│</span>                      <span style="color: #008000; text-decoration-color: #008000">occurs often in nature.  For example, it\n        describes the commonly occurring </span>        <span style="color: #000080; text-decoration-color: #000080">│</span>
<span style="color: #000080; text-decoration-color: #000080">│</span>                      <span style="color: #008000; text-decoration-color: #008000">distribution of samples influenced\n        by a large number of tiny, random </span>             <span style="color: #000080; text-decoration-color: #000080">│</span>
<span style="color: #000080; text-decoration-color: #000080">│</span>                      <span style="color: #008000; text-decoration-color: #008000">disturbances, each with its own\n        unique distribution [2]_.\n\n        .. note::\n </span> <span style="color: #000080; text-decoration-color: #000080">│</span>
<span style="color: #000080; text-decoration-color: #000080">│</span>                      <span style="color: #008000; text-decoration-color: #008000">New code should use the ``normal`` method of a ``default_rng()``\n            instance </span>    <span style="color: #000080; text-decoration-color: #000080">│</span>
<span style="color: #000080; text-decoration-color: #000080">│</span>                      <span style="color: #008000; text-decoration-color: #008000">instead; please see the :ref:`random-quick-start`.\n\n        Parameters\n        </span>         <span style="color: #000080; text-decoration-color: #000080">│</span>
<span style="color: #000080; text-decoration-color: #000080">│</span>                      <span style="color: #008000; text-decoration-color: #008000">----------\n        loc : float or array_like of floats\n            Mean ("centre") of </span>   <span style="color: #000080; text-decoration-color: #000080">│</span>
<span style="color: #000080; text-decoration-color: #000080">│</span>                      <span style="color: #008000; text-decoration-color: #008000">the distribution.\n        scale : float or array_like of floats\n            Standard </span>    <span style="color: #000080; text-decoration-color: #000080">│</span>
<span style="color: #000080; text-decoration-color: #000080">│</span>                      <span style="color: #008000; text-decoration-color: #008000">deviation (spread or "width") of the distribution. Must be\n            non-negative.\n   </span> <span style="color: #000080; text-decoration-color: #000080">│</span>
<span style="color: #000080; text-decoration-color: #000080">│</span>                      <span style="color: #008000; text-decoration-color: #008000">size : int or tuple of ints, optional\n            Output shape.  If the given shape is, </span>  <span style="color: #000080; text-decoration-color: #000080">│</span>
<span style="color: #000080; text-decoration-color: #000080">│</span>                      <span style="color: #008000; text-decoration-color: #008000">e.g., ``(m, n, k)``, then\n            ``m * n * k`` samples are drawn.  If size is </span>       <span style="color: #000080; text-decoration-color: #000080">│</span>
<span style="color: #000080; text-decoration-color: #000080">│</span>                      <span style="color: #008000; text-decoration-color: #008000">``None`` (default),\n            a single value is returned if ``loc`` and ``scale`` are </span>  <span style="color: #000080; text-decoration-color: #000080">│</span>
<span style="color: #000080; text-decoration-color: #000080">│</span>                      <span style="color: #008000; text-decoration-color: #008000">both scalars.\n            Otherwise, ``np.broadcast(loc, scale).size`` samples are </span>       <span style="color: #000080; text-decoration-color: #000080">│</span>
<span style="color: #000080; text-decoration-color: #000080">│</span>                      <span style="color: #008000; text-decoration-color: #008000">drawn.\n\n        Returns\n        -------\n        out : ndarray or scalar\n            </span>  <span style="color: #000080; text-decoration-color: #000080">│</span>
<span style="color: #000080; text-decoration-color: #000080">│</span>                      <span style="color: #008000; text-decoration-color: #008000">Drawn samples from the parameterized normal distribution.\n\n        See Also\n        </span>    <span style="color: #000080; text-decoration-color: #000080">│</span>
<span style="color: #000080; text-decoration-color: #000080">│</span>                      <span style="color: #008000; text-decoration-color: #008000">--------\n        scipy.stats.norm : probability density function, distribution or\n      </span> <span style="color: #000080; text-decoration-color: #000080">│</span>
<span style="color: #000080; text-decoration-color: #000080">│</span>                      <span style="color: #008000; text-decoration-color: #008000">cumulative density function, etc.\n        random.Generator.normal: which should be used </span>  <span style="color: #000080; text-decoration-color: #000080">│</span>
<span style="color: #000080; text-decoration-color: #000080">│</span>                      <span style="color: #008000; text-decoration-color: #008000">for new code.\n\n        Notes\n        -----\n        The probability density for the </span>    <span style="color: #000080; text-decoration-color: #000080">│</span>
<span style="color: #000080; text-decoration-color: #000080">│</span>                      <span style="color: #008000; text-decoration-color: #008000">Gaussian distribution is\n\n        .. math:: p(x) = \\frac{1}{\\sqrt{ 2 \\pi \\sigma^2 </span>   <span style="color: #000080; text-decoration-color: #000080">│</span>
<span style="color: #000080; text-decoration-color: #000080">│</span>                      <span style="color: #008000; text-decoration-color: #008000">}}\n                         e^{ - \\frac{ (x - \\mu)^2 } {2 \\sigma^2} },\n\n        </span>     <span style="color: #000080; text-decoration-color: #000080">│</span>
<span style="color: #000080; text-decoration-color: #000080">│</span>                      <span style="color: #008000; text-decoration-color: #008000">where :math:`\\mu` is the mean and :math:`\\sigma` the standard\n        deviation. The </span>   <span style="color: #000080; text-decoration-color: #000080">│</span>
<span style="color: #000080; text-decoration-color: #000080">│</span>                      <span style="color: #008000; text-decoration-color: #008000">square of the standard deviation, :math:`\\sigma^2`,\n        is called the variance.\n\n </span> <span style="color: #000080; text-decoration-color: #000080">│</span>
<span style="color: #000080; text-decoration-color: #000080">│</span>                      <span style="color: #008000; text-decoration-color: #008000">The function has its peak at the mean, and its "spread" increases with\n        the </span>       <span style="color: #000080; text-decoration-color: #000080">│</span>
<span style="color: #000080; text-decoration-color: #000080">│</span>                      <span style="color: #008000; text-decoration-color: #008000">standard deviation (the function reaches 0.607 times its maximum at\n        :math:`x + </span>   <span style="color: #000080; text-decoration-color: #000080">│</span>
<span style="color: #000080; text-decoration-color: #000080">│</span>                      <span style="color: #008000; text-decoration-color: #008000">\\sigma` and :math:`x - \\sigma` [2]_).  This implies that\n        normal is more likely </span> <span style="color: #000080; text-decoration-color: #000080">│</span>
<span style="color: #000080; text-decoration-color: #000080">│</span>                      <span style="color: #008000; text-decoration-color: #008000">to return samples lying close to the mean, rather\n        than those far away.\n\n       </span> <span style="color: #000080; text-decoration-color: #000080">│</span>
<span style="color: #000080; text-decoration-color: #000080">│</span>                      <span style="color: #008000; text-decoration-color: #008000">References\n        ----------\n        .. [1] Wikipedia, "Normal distribution",\n        </span> <span style="color: #000080; text-decoration-color: #000080">│</span>
<span style="color: #000080; text-decoration-color: #000080">│</span>                      <span style="color: #008000; text-decoration-color: #008000">https://en.wikipedia.org/wiki/Normal_distribution\n        .. [2] P. R. Peebles Jr., </span>      <span style="color: #000080; text-decoration-color: #000080">│</span>
<span style="color: #000080; text-decoration-color: #000080">│</span>                      <span style="color: #008000; text-decoration-color: #008000">"Central Limit Theorem" in "Probability,\n               Random Variables and Random </span>      <span style="color: #000080; text-decoration-color: #000080">│</span>
<span style="color: #000080; text-decoration-color: #000080">│</span>                      <span style="color: #008000; text-decoration-color: #008000">Signal Principles", 4th ed., 2001,\n               pp. 51, 51, 125.\n\n        Examples\n </span> <span style="color: #000080; text-decoration-color: #000080">│</span>
<span style="color: #000080; text-decoration-color: #000080">│</span>                      <span style="color: #008000; text-decoration-color: #008000">--------\n        Draw samples from the distribution:\n\n        &gt;&gt;&gt; mu, sigma = 0, 0.1 # </span> <span style="color: #000080; text-decoration-color: #000080">│</span>
<span style="color: #000080; text-decoration-color: #000080">│</span>                      <span style="color: #008000; text-decoration-color: #008000">mean and standard deviation\n        &gt;&gt;&gt; s = np.random.normal(mu, sigma, 1000)\n\n        </span> <span style="color: #000080; text-decoration-color: #000080">│</span>
<span style="color: #000080; text-decoration-color: #000080">│</span>                      <span style="color: #008000; text-decoration-color: #008000">Verify the mean and the variance:\n\n        &gt;&gt;&gt; abs(mu - np.mean(s))\n        0.0  # may </span> <span style="color: #000080; text-decoration-color: #000080">│</span>
<span style="color: #000080; text-decoration-color: #000080">│</span>                      <span style="color: #008000; text-decoration-color: #008000">vary\n\n        &gt;&gt;&gt; abs(sigma - np.std(s, ddof=1))\n        0.1  # may vary\n\n        </span>    <span style="color: #000080; text-decoration-color: #000080">│</span>
<span style="color: #000080; text-decoration-color: #000080">│</span>                      <span style="color: #008000; text-decoration-color: #008000">Display the histogram of the samples, along with\n        the probability density </span>         <span style="color: #000080; text-decoration-color: #000080">│</span>
<span style="color: #000080; text-decoration-color: #000080">│</span>                      <span style="color: #008000; text-decoration-color: #008000">function:\n\n        &gt;&gt;&gt; import matplotlib.pyplot as plt\n        &gt;&gt;&gt; count, bins, ignored</span> <span style="color: #000080; text-decoration-color: #000080">│</span>
<span style="color: #000080; text-decoration-color: #000080">│</span>                      <span style="color: #008000; text-decoration-color: #008000">= plt.hist(s, 30, density=True)\n        &gt;&gt;&gt; plt.plot(bins, 1/(sigma * np.sqrt(2 * np.pi))</span> <span style="color: #000080; text-decoration-color: #000080">│</span>
<span style="color: #000080; text-decoration-color: #000080">│</span>                      <span style="color: #008000; text-decoration-color: #008000">*\n        ...                np.exp( - (bins - mu)**2 / (2 * sigma**2) ),\n        ...   </span> <span style="color: #000080; text-decoration-color: #000080">│</span>
<span style="color: #000080; text-decoration-color: #000080">│</span>                      <span style="color: #008000; text-decoration-color: #008000">linewidth=2, color=\'r\')\n        &gt;&gt;&gt; plt.show()\n\n        Two-by-four array of samples </span> <span style="color: #000080; text-decoration-color: #000080">│</span>
<span style="color: #000080; text-decoration-color: #000080">│</span>                      <span style="color: #008000; text-decoration-color: #008000">from N(3, 6.25):\n\n        &gt;&gt;&gt; np.random.normal(3, 2.5, size=(2, 4))\n        </span>            <span style="color: #000080; text-decoration-color: #000080">│</span>
<span style="color: #000080; text-decoration-color: #000080">│</span>                      <span style="color: #008000; text-decoration-color: #008000">array([[-4.49401501,  4.00950034, -1.81814867,  7.29718677],   # random\n               [ </span> <span style="color: #000080; text-decoration-color: #000080">│</span>
<span style="color: #000080; text-decoration-color: #000080">│</span>                      <span style="color: #008000; text-decoration-color: #008000">0.39924804,  4.68456316,  4.99394529,  4.84057254]])  # random\n\n        '</span>                <span style="color: #000080; text-decoration-color: #000080">│</span>
<span style="color: #000080; text-decoration-color: #000080">│</span>         <span style="color: #bfbf7f; text-decoration-color: #bfbf7f; font-style: italic">__module__</span> = <span style="color: #800080; text-decoration-color: #800080; font-style: italic">None</span>                                                                                       <span style="color: #000080; text-decoration-color: #000080">│</span>
<span style="color: #000080; text-decoration-color: #000080">│</span>           <span style="color: #bfbf7f; text-decoration-color: #bfbf7f; font-style: italic">__name__</span> = <span style="color: #008000; text-decoration-color: #008000">'normal'</span>                                                                                   <span style="color: #000080; text-decoration-color: #000080">│</span>
<span style="color: #000080; text-decoration-color: #000080">│</span>       <span style="color: #bfbf7f; text-decoration-color: #bfbf7f; font-style: italic">__qualname__</span> = <span style="color: #008000; text-decoration-color: #008000">'RandomState.normal'</span>                                                                       <span style="color: #000080; text-decoration-color: #000080">│</span>
<span style="color: #000080; text-decoration-color: #000080">│</span>           <span style="color: #bfbf7f; text-decoration-color: #bfbf7f; font-style: italic">__self__</span> = <span style="color: #800080; text-decoration-color: #800080; font-weight: bold">RandomState</span><span style="font-weight: bold">(</span>MT19937<span style="font-weight: bold">)</span> at <span style="color: #008080; text-decoration-color: #008080; font-weight: bold">0x10C627840</span>                                                        <span style="color: #000080; text-decoration-color: #000080">│</span>
<span style="color: #000080; text-decoration-color: #000080">│</span> <span style="color: #bfbf7f; text-decoration-color: #bfbf7f; font-style: italic">__text_signature__</span> = <span style="color: #800080; text-decoration-color: #800080; font-style: italic">None</span>                                                                                       <span style="color: #000080; text-decoration-color: #000080">│</span>
<span style="color: #000080; text-decoration-color: #000080">│</span>           <span style="color: #bfbf7f; text-decoration-color: #bfbf7f; font-style: italic">__call__</span> = <span style="color: #00ffff; text-decoration-color: #00ffff; font-style: italic">def </span><span style="color: #800000; text-decoration-color: #800000; font-weight: bold">__call__</span><span style="font-weight: bold">(</span>*args, **kwargs<span style="font-weight: bold">)</span>: <span style="color: #7f7f7f; text-decoration-color: #7f7f7f">Call self as a function.</span>                                    <span style="color: #000080; text-decoration-color: #000080">│</span>
<span style="color: #000080; text-decoration-color: #000080">│</span>          <span style="color: #bfbf7f; text-decoration-color: #bfbf7f; font-style: italic">__class__</span> = <span style="color: #00ffff; text-decoration-color: #00ffff; font-style: italic">class </span><span style="color: #800000; text-decoration-color: #800000; font-weight: bold">__class__</span><span style="font-weight: bold">()</span>:                                                                         <span style="color: #000080; text-decoration-color: #000080">│</span>
<span style="color: #000080; text-decoration-color: #000080">│</span>        <span style="color: #bfbf7f; text-decoration-color: #bfbf7f; font-style: italic">__delattr__</span> = <span style="color: #00ffff; text-decoration-color: #00ffff; font-style: italic">def </span><span style="color: #800000; text-decoration-color: #800000; font-weight: bold">__delattr__</span><span style="font-weight: bold">(</span>name, <span style="color: #800080; text-decoration-color: #800080">/</span><span style="font-weight: bold">)</span>: <span style="color: #7f7f7f; text-decoration-color: #7f7f7f">Implement </span><span style="color: #bf7fbf; text-decoration-color: #bf7fbf; font-weight: bold">delattr</span><span style="color: #7f7f7f; text-decoration-color: #7f7f7f; font-weight: bold">(</span><span style="color: #7f7f7f; text-decoration-color: #7f7f7f">self, name</span><span style="color: #7f7f7f; text-decoration-color: #7f7f7f; font-weight: bold">)</span><span style="color: #7f7f7f; text-decoration-color: #7f7f7f">.</span>                                   <span style="color: #000080; text-decoration-color: #000080">│</span>
<span style="color: #000080; text-decoration-color: #000080">│</span>            <span style="color: #bfbf7f; text-decoration-color: #bfbf7f; font-style: italic">__dir__</span> = <span style="color: #00ffff; text-decoration-color: #00ffff; font-style: italic">def </span><span style="color: #800000; text-decoration-color: #800000; font-weight: bold">__dir__</span><span style="font-weight: bold">()</span>: <span style="color: #7f7f7f; text-decoration-color: #7f7f7f">Default </span><span style="color: #bf7fbf; text-decoration-color: #bf7fbf; font-weight: bold">dir</span><span style="color: #7f7f7f; text-decoration-color: #7f7f7f; font-weight: bold">()</span><span style="color: #7f7f7f; text-decoration-color: #7f7f7f"> implementation.</span>                                               <span style="color: #000080; text-decoration-color: #000080">│</span>
<span style="color: #000080; text-decoration-color: #000080">│</span>             <span style="color: #bfbf7f; text-decoration-color: #bfbf7f; font-style: italic">__eq__</span> = <span style="color: #00ffff; text-decoration-color: #00ffff; font-style: italic">def </span><span style="color: #800000; text-decoration-color: #800000; font-weight: bold">__eq__</span><span style="font-weight: bold">(</span>value, <span style="color: #800080; text-decoration-color: #800080">/</span><span style="font-weight: bold">)</span>: <span style="color: #7f7f7f; text-decoration-color: #7f7f7f">Return </span><span style="color: #bfbf7f; text-decoration-color: #bfbf7f">self</span><span style="color: #7f7f7f; text-decoration-color: #7f7f7f">==value.</span>                                                  <span style="color: #000080; text-decoration-color: #000080">│</span>
<span style="color: #000080; text-decoration-color: #000080">│</span>         <span style="color: #bfbf7f; text-decoration-color: #bfbf7f; font-style: italic">__format__</span> = <span style="color: #00ffff; text-decoration-color: #00ffff; font-style: italic">def </span><span style="color: #800000; text-decoration-color: #800000; font-weight: bold">__format__</span><span style="font-weight: bold">(</span>format_spec, <span style="color: #800080; text-decoration-color: #800080">/</span><span style="font-weight: bold">)</span>: <span style="color: #7f7f7f; text-decoration-color: #7f7f7f">Default object formatter.</span>                                  <span style="color: #000080; text-decoration-color: #000080">│</span>
<span style="color: #000080; text-decoration-color: #000080">│</span>             <span style="color: #bfbf7f; text-decoration-color: #bfbf7f; font-style: italic">__ge__</span> = <span style="color: #00ffff; text-decoration-color: #00ffff; font-style: italic">def </span><span style="color: #800000; text-decoration-color: #800000; font-weight: bold">__ge__</span><span style="font-weight: bold">(</span>value, <span style="color: #800080; text-decoration-color: #800080">/</span><span style="font-weight: bold">)</span>: <span style="color: #7f7f7f; text-decoration-color: #7f7f7f">Return self&gt;=value.</span>                                                  <span style="color: #000080; text-decoration-color: #000080">│</span>
<span style="color: #000080; text-decoration-color: #000080">│</span>   <span style="color: #bfbf7f; text-decoration-color: #bfbf7f; font-style: italic">__getattribute__</span> = <span style="color: #00ffff; text-decoration-color: #00ffff; font-style: italic">def </span><span style="color: #800000; text-decoration-color: #800000; font-weight: bold">__getattribute__</span><span style="font-weight: bold">(</span>name, <span style="color: #800080; text-decoration-color: #800080">/</span><span style="font-weight: bold">)</span>: <span style="color: #7f7f7f; text-decoration-color: #7f7f7f">Return </span><span style="color: #bf7fbf; text-decoration-color: #bf7fbf; font-weight: bold">getattr</span><span style="color: #7f7f7f; text-decoration-color: #7f7f7f; font-weight: bold">(</span><span style="color: #7f7f7f; text-decoration-color: #7f7f7f">self, name</span><span style="color: #7f7f7f; text-decoration-color: #7f7f7f; font-weight: bold">)</span><span style="color: #7f7f7f; text-decoration-color: #7f7f7f">.</span>                                 <span style="color: #000080; text-decoration-color: #000080">│</span>
<span style="color: #000080; text-decoration-color: #000080">│</span>             <span style="color: #bfbf7f; text-decoration-color: #bfbf7f; font-style: italic">__gt__</span> = <span style="color: #00ffff; text-decoration-color: #00ffff; font-style: italic">def </span><span style="color: #800000; text-decoration-color: #800000; font-weight: bold">__gt__</span><span style="font-weight: bold">(</span>value, <span style="color: #800080; text-decoration-color: #800080">/</span><span style="font-weight: bold">)</span>: <span style="color: #7f7f7f; text-decoration-color: #7f7f7f">Return self&gt;value.</span>                                                   <span style="color: #000080; text-decoration-color: #000080">│</span>
<span style="color: #000080; text-decoration-color: #000080">│</span>           <span style="color: #bfbf7f; text-decoration-color: #bfbf7f; font-style: italic">__hash__</span> = <span style="color: #00ffff; text-decoration-color: #00ffff; font-style: italic">def </span><span style="color: #800000; text-decoration-color: #800000; font-weight: bold">__hash__</span><span style="font-weight: bold">()</span>: <span style="color: #7f7f7f; text-decoration-color: #7f7f7f">Return </span><span style="color: #bf7fbf; text-decoration-color: #bf7fbf; font-weight: bold">hash</span><span style="color: #7f7f7f; text-decoration-color: #7f7f7f; font-weight: bold">(</span><span style="color: #7f7f7f; text-decoration-color: #7f7f7f">self</span><span style="color: #7f7f7f; text-decoration-color: #7f7f7f; font-weight: bold">)</span><span style="color: #7f7f7f; text-decoration-color: #7f7f7f">.</span>                                                         <span style="color: #000080; text-decoration-color: #000080">│</span>
<span style="color: #000080; text-decoration-color: #000080">│</span>           <span style="color: #bfbf7f; text-decoration-color: #bfbf7f; font-style: italic">__init__</span> = <span style="color: #00ffff; text-decoration-color: #00ffff; font-style: italic">def </span><span style="color: #800000; text-decoration-color: #800000; font-weight: bold">__init__</span><span style="font-weight: bold">(</span>*args, **kwargs<span style="font-weight: bold">)</span>: <span style="color: #7f7f7f; text-decoration-color: #7f7f7f">Initialize self.  See </span><span style="color: #bf7fbf; text-decoration-color: #bf7fbf; font-weight: bold">help</span><span style="color: #7f7f7f; text-decoration-color: #7f7f7f; font-weight: bold">(</span><span style="color: #bf7fbf; text-decoration-color: #bf7fbf; font-weight: bold">type</span><span style="color: #7f7f7f; text-decoration-color: #7f7f7f; font-weight: bold">(</span><span style="color: #7f7f7f; text-decoration-color: #7f7f7f">self</span><span style="color: #7f7f7f; text-decoration-color: #7f7f7f; font-weight: bold">))</span><span style="color: #7f7f7f; text-decoration-color: #7f7f7f"> for accurate </span>        <span style="color: #000080; text-decoration-color: #000080">│</span>
<span style="color: #000080; text-decoration-color: #000080">│</span>                      <span style="color: #7f7f7f; text-decoration-color: #7f7f7f">signature.</span>                                                                                 <span style="color: #000080; text-decoration-color: #000080">│</span>
<span style="color: #000080; text-decoration-color: #000080">│</span>  <span style="color: #bfbf7f; text-decoration-color: #bfbf7f; font-style: italic">__init_subclass__</span> = <span style="color: #00ffff; text-decoration-color: #00ffff; font-style: italic">def </span><span style="color: #800000; text-decoration-color: #800000; font-weight: bold">__init_subclass__</span><span style="font-weight: bold">(</span><span style="color: #808000; text-decoration-color: #808000">...</span><span style="font-weight: bold">)</span> <span style="color: #7f7f7f; text-decoration-color: #7f7f7f">This method is called when a class is subclassed.</span>               <span style="color: #000080; text-decoration-color: #000080">│</span>
<span style="color: #000080; text-decoration-color: #000080">│</span>             <span style="color: #bfbf7f; text-decoration-color: #bfbf7f; font-style: italic">__le__</span> = <span style="color: #00ffff; text-decoration-color: #00ffff; font-style: italic">def </span><span style="color: #800000; text-decoration-color: #800000; font-weight: bold">__le__</span><span style="font-weight: bold">(</span>value, <span style="color: #800080; text-decoration-color: #800080">/</span><span style="font-weight: bold">)</span>: <span style="color: #7f7f7f; text-decoration-color: #7f7f7f">Return self&lt;=value.</span>                                                  <span style="color: #000080; text-decoration-color: #000080">│</span>
<span style="color: #000080; text-decoration-color: #000080">│</span>             <span style="color: #bfbf7f; text-decoration-color: #bfbf7f; font-style: italic">__lt__</span> = <span style="color: #00ffff; text-decoration-color: #00ffff; font-style: italic">def </span><span style="color: #800000; text-decoration-color: #800000; font-weight: bold">__lt__</span><span style="font-weight: bold">(</span>value, <span style="color: #800080; text-decoration-color: #800080">/</span><span style="font-weight: bold">)</span>: <span style="color: #7f7f7f; text-decoration-color: #7f7f7f">Return self&lt;value.</span>                                                   <span style="color: #000080; text-decoration-color: #000080">│</span>
<span style="color: #000080; text-decoration-color: #000080">│</span>             <span style="color: #bfbf7f; text-decoration-color: #bfbf7f; font-style: italic">__ne__</span> = <span style="color: #00ffff; text-decoration-color: #00ffff; font-style: italic">def </span><span style="color: #800000; text-decoration-color: #800000; font-weight: bold">__ne__</span><span style="font-weight: bold">(</span>value, <span style="color: #800080; text-decoration-color: #800080">/</span><span style="font-weight: bold">)</span>: <span style="color: #7f7f7f; text-decoration-color: #7f7f7f">Return self!=value.</span>                                                  <span style="color: #000080; text-decoration-color: #000080">│</span>
<span style="color: #000080; text-decoration-color: #000080">│</span>            <span style="color: #bfbf7f; text-decoration-color: #bfbf7f; font-style: italic">__new__</span> = <span style="color: #00ffff; text-decoration-color: #00ffff; font-style: italic">def </span><span style="color: #800000; text-decoration-color: #800000; font-weight: bold">__new__</span><span style="font-weight: bold">(</span>*args, **kwargs<span style="font-weight: bold">)</span>: <span style="color: #7f7f7f; text-decoration-color: #7f7f7f">Create and return a new object.  See </span><span style="color: #bf7fbf; text-decoration-color: #bf7fbf; font-weight: bold">help</span><span style="color: #7f7f7f; text-decoration-color: #7f7f7f; font-weight: bold">(</span><span style="color: #7f7f7f; text-decoration-color: #7f7f7f">type</span><span style="color: #7f7f7f; text-decoration-color: #7f7f7f; font-weight: bold">)</span><span style="color: #7f7f7f; text-decoration-color: #7f7f7f"> for accurate</span> <span style="color: #000080; text-decoration-color: #000080">│</span>
<span style="color: #000080; text-decoration-color: #000080">│</span>                      <span style="color: #7f7f7f; text-decoration-color: #7f7f7f">signature.</span>                                                                                 <span style="color: #000080; text-decoration-color: #000080">│</span>
<span style="color: #000080; text-decoration-color: #000080">│</span>         <span style="color: #bfbf7f; text-decoration-color: #bfbf7f; font-style: italic">__reduce__</span> = <span style="color: #00ffff; text-decoration-color: #00ffff; font-style: italic">def </span><span style="color: #800000; text-decoration-color: #800000; font-weight: bold">__reduce__</span><span style="font-weight: bold">(</span><span style="color: #808000; text-decoration-color: #808000">...</span><span style="font-weight: bold">)</span> <span style="color: #7f7f7f; text-decoration-color: #7f7f7f">Helper for pickle.</span>                                                     <span style="color: #000080; text-decoration-color: #000080">│</span>
<span style="color: #000080; text-decoration-color: #000080">│</span>      <span style="color: #bfbf7f; text-decoration-color: #bfbf7f; font-style: italic">__reduce_ex__</span> = <span style="color: #00ffff; text-decoration-color: #00ffff; font-style: italic">def </span><span style="color: #800000; text-decoration-color: #800000; font-weight: bold">__reduce_ex__</span><span style="font-weight: bold">(</span>protocol, <span style="color: #800080; text-decoration-color: #800080">/</span><span style="font-weight: bold">)</span>: <span style="color: #7f7f7f; text-decoration-color: #7f7f7f">Helper for pickle.</span>                                         <span style="color: #000080; text-decoration-color: #000080">│</span>
<span style="color: #000080; text-decoration-color: #000080">│</span>           <span style="color: #bfbf7f; text-decoration-color: #bfbf7f; font-style: italic">__repr__</span> = <span style="color: #00ffff; text-decoration-color: #00ffff; font-style: italic">def </span><span style="color: #800000; text-decoration-color: #800000; font-weight: bold">__repr__</span><span style="font-weight: bold">()</span>: <span style="color: #7f7f7f; text-decoration-color: #7f7f7f">Return </span><span style="color: #bf7fbf; text-decoration-color: #bf7fbf; font-weight: bold">repr</span><span style="color: #7f7f7f; text-decoration-color: #7f7f7f; font-weight: bold">(</span><span style="color: #7f7f7f; text-decoration-color: #7f7f7f">self</span><span style="color: #7f7f7f; text-decoration-color: #7f7f7f; font-weight: bold">)</span><span style="color: #7f7f7f; text-decoration-color: #7f7f7f">.</span>                                                         <span style="color: #000080; text-decoration-color: #000080">│</span>
<span style="color: #000080; text-decoration-color: #000080">│</span>        <span style="color: #bfbf7f; text-decoration-color: #bfbf7f; font-style: italic">__setattr__</span> = <span style="color: #00ffff; text-decoration-color: #00ffff; font-style: italic">def </span><span style="color: #800000; text-decoration-color: #800000; font-weight: bold">__setattr__</span><span style="font-weight: bold">(</span>name, value, <span style="color: #800080; text-decoration-color: #800080">/</span><span style="font-weight: bold">)</span>: <span style="color: #7f7f7f; text-decoration-color: #7f7f7f">Implement </span><span style="color: #bf7fbf; text-decoration-color: #bf7fbf; font-weight: bold">setattr</span><span style="color: #7f7f7f; text-decoration-color: #7f7f7f; font-weight: bold">(</span><span style="color: #7f7f7f; text-decoration-color: #7f7f7f">self, name, value</span><span style="color: #7f7f7f; text-decoration-color: #7f7f7f; font-weight: bold">)</span><span style="color: #7f7f7f; text-decoration-color: #7f7f7f">.</span>                     <span style="color: #000080; text-decoration-color: #000080">│</span>
<span style="color: #000080; text-decoration-color: #000080">│</span>         <span style="color: #bfbf7f; text-decoration-color: #bfbf7f; font-style: italic">__sizeof__</span> = <span style="color: #00ffff; text-decoration-color: #00ffff; font-style: italic">def </span><span style="color: #800000; text-decoration-color: #800000; font-weight: bold">__sizeof__</span><span style="font-weight: bold">()</span>: <span style="color: #7f7f7f; text-decoration-color: #7f7f7f">Size of object in memory, in bytes.</span>                                      <span style="color: #000080; text-decoration-color: #000080">│</span>
<span style="color: #000080; text-decoration-color: #000080">│</span>            <span style="color: #bfbf7f; text-decoration-color: #bfbf7f; font-style: italic">__str__</span> = <span style="color: #00ffff; text-decoration-color: #00ffff; font-style: italic">def </span><span style="color: #800000; text-decoration-color: #800000; font-weight: bold">__str__</span><span style="font-weight: bold">()</span>: <span style="color: #7f7f7f; text-decoration-color: #7f7f7f">Return </span><span style="color: #bf7fbf; text-decoration-color: #bf7fbf; font-weight: bold">str</span><span style="color: #7f7f7f; text-decoration-color: #7f7f7f; font-weight: bold">(</span><span style="color: #7f7f7f; text-decoration-color: #7f7f7f">self</span><span style="color: #7f7f7f; text-decoration-color: #7f7f7f; font-weight: bold">)</span><span style="color: #7f7f7f; text-decoration-color: #7f7f7f">.</span>                                                           <span style="color: #000080; text-decoration-color: #000080">│</span>
<span style="color: #000080; text-decoration-color: #000080">│</span>   <span style="color: #bfbf7f; text-decoration-color: #bfbf7f; font-style: italic">__subclasshook__</span> = <span style="color: #00ffff; text-decoration-color: #00ffff; font-style: italic">def </span><span style="color: #800000; text-decoration-color: #800000; font-weight: bold">__subclasshook__</span><span style="font-weight: bold">(</span><span style="color: #808000; text-decoration-color: #808000">...</span><span style="font-weight: bold">)</span> <span style="color: #7f7f7f; text-decoration-color: #7f7f7f">Abstract classes can override this to customize </span><span style="color: #bf7fbf; text-decoration-color: #bf7fbf; font-weight: bold">issubclass</span><span style="color: #7f7f7f; text-decoration-color: #7f7f7f; font-weight: bold">()</span><span style="color: #7f7f7f; text-decoration-color: #7f7f7f">.</span>    <span style="color: #000080; text-decoration-color: #000080">│</span>
<span style="color: #000080; text-decoration-color: #000080">╰─────────────────────────────────────────────────────────────────────────────────────────────────────────────────╯</span>
</pre>
</div>
</div>
<div class="cell" data-execution_count="63">
<div class="sourceCode cell-code" id="cb50" style="background: #f1f3f5;"><pre class="sourceCode python code-with-copy"><code class="sourceCode python"><span id="cb50-1">inspect(inspect)</span></code></pre></div>
<div class="cell-output cell-output-display">
<pre style="white-space:pre;overflow-x:auto;line-height:normal;font-family:Menlo,'DejaVu Sans Mono',consolas,'Courier New',monospace"><span style="color: #000080; text-decoration-color: #000080">╭─────────────────────────────────────── </span><span style="color: #000080; text-decoration-color: #000080; font-weight: bold">&lt;</span><span style="color: #ff00ff; text-decoration-color: #ff00ff; font-weight: bold">function</span><span style="color: #000000; text-decoration-color: #000000"> inspect at </span><span style="color: #008080; text-decoration-color: #008080; font-weight: bold">0x10f3fc550</span><span style="color: #000080; text-decoration-color: #000080; font-weight: bold">&gt;</span><span style="color: #000080; text-decoration-color: #000080"> ───────────────────────────────────────╮</span>
<span style="color: #000080; text-decoration-color: #000080">│</span> <span style="color: #00ffff; text-decoration-color: #00ffff; font-style: italic">def </span><span style="color: #800000; text-decoration-color: #800000; font-weight: bold">inspect</span><span style="font-weight: bold">(</span>obj: Any, *, console: Optional<span style="font-weight: bold">[</span><span style="color: #800080; text-decoration-color: #800080; font-weight: bold">ForwardRef</span><span style="font-weight: bold">(</span><span style="color: #008000; text-decoration-color: #008000">'Console'</span><span style="font-weight: bold">)]</span> = <span style="color: #800080; text-decoration-color: #800080; font-style: italic">None</span>, title: Optional<span style="font-weight: bold">[</span>str<span style="font-weight: bold">]</span> = <span style="color: #800080; text-decoration-color: #800080; font-style: italic">None</span>, help:    <span style="color: #000080; text-decoration-color: #000080">│</span>
<span style="color: #000080; text-decoration-color: #000080">│</span> bool = <span style="color: #ff0000; text-decoration-color: #ff0000; font-style: italic">False</span>, methods: bool = <span style="color: #ff0000; text-decoration-color: #ff0000; font-style: italic">False</span>, docs: bool = <span style="color: #00ff00; text-decoration-color: #00ff00; font-style: italic">True</span>, private: bool = <span style="color: #ff0000; text-decoration-color: #ff0000; font-style: italic">False</span>, dunder: bool = <span style="color: #ff0000; text-decoration-color: #ff0000; font-style: italic">False</span>, sort: bool <span style="color: #000080; text-decoration-color: #000080">│</span>
<span style="color: #000080; text-decoration-color: #000080">│</span> = <span style="color: #00ff00; text-decoration-color: #00ff00; font-style: italic">True</span>, all: bool = <span style="color: #ff0000; text-decoration-color: #ff0000; font-style: italic">False</span>, value: bool = <span style="color: #00ff00; text-decoration-color: #00ff00; font-style: italic">True</span><span style="font-weight: bold">)</span> -&gt; <span style="color: #800080; text-decoration-color: #800080; font-style: italic">None</span>:                                                         <span style="color: #000080; text-decoration-color: #000080">│</span>
<span style="color: #000080; text-decoration-color: #000080">│</span>                                                                                                                 <span style="color: #000080; text-decoration-color: #000080">│</span>
<span style="color: #000080; text-decoration-color: #000080">│</span> <span style="color: #008080; text-decoration-color: #008080">Inspect any Python object.</span>                                                                                      <span style="color: #000080; text-decoration-color: #000080">│</span>
<span style="color: #000080; text-decoration-color: #000080">│</span>                                                                                                                 <span style="color: #000080; text-decoration-color: #000080">│</span>
<span style="color: #000080; text-decoration-color: #000080">│</span> <span style="color: #008080; text-decoration-color: #008080">* </span><span style="color: #800080; text-decoration-color: #800080; font-weight: bold">inspect</span><span style="color: #008080; text-decoration-color: #008080; font-weight: bold">(&lt;</span><span style="color: #ff00ff; text-decoration-color: #ff00ff; font-weight: bold">OBJECT</span><span style="color: #008080; text-decoration-color: #008080; font-weight: bold">&gt;)</span><span style="color: #008080; text-decoration-color: #008080"> to see summarized info.</span>                                                                     <span style="color: #000080; text-decoration-color: #000080">│</span>
<span style="color: #000080; text-decoration-color: #000080">│</span> <span style="color: #008080; text-decoration-color: #008080">* </span><span style="color: #800080; text-decoration-color: #800080; font-weight: bold">inspect</span><span style="color: #008080; text-decoration-color: #008080; font-weight: bold">(&lt;</span><span style="color: #ff00ff; text-decoration-color: #ff00ff; font-weight: bold">OBJECT</span><span style="color: #008080; text-decoration-color: #008080; font-weight: bold">&gt;</span><span style="color: #008080; text-decoration-color: #008080">, </span><span style="color: #808000; text-decoration-color: #808000">methods</span><span style="color: #008080; text-decoration-color: #008080">=</span><span style="color: #00ff00; text-decoration-color: #00ff00; font-style: italic">True</span><span style="color: #008080; text-decoration-color: #008080; font-weight: bold">)</span><span style="color: #008080; text-decoration-color: #008080"> to see methods.</span>                                                               <span style="color: #000080; text-decoration-color: #000080">│</span>
<span style="color: #000080; text-decoration-color: #000080">│</span> <span style="color: #008080; text-decoration-color: #008080">* </span><span style="color: #800080; text-decoration-color: #800080; font-weight: bold">inspect</span><span style="color: #008080; text-decoration-color: #008080; font-weight: bold">(&lt;</span><span style="color: #ff00ff; text-decoration-color: #ff00ff; font-weight: bold">OBJECT</span><span style="color: #008080; text-decoration-color: #008080; font-weight: bold">&gt;</span><span style="color: #008080; text-decoration-color: #008080">, </span><span style="color: #808000; text-decoration-color: #808000">help</span><span style="color: #008080; text-decoration-color: #008080">=</span><span style="color: #00ff00; text-decoration-color: #00ff00; font-style: italic">True</span><span style="color: #008080; text-decoration-color: #008080; font-weight: bold">)</span><span style="color: #008080; text-decoration-color: #008080"> to see full </span><span style="color: #008080; text-decoration-color: #008080; font-weight: bold">(</span><span style="color: #008080; text-decoration-color: #008080">non-abbreviated</span><span style="color: #008080; text-decoration-color: #008080; font-weight: bold">)</span><span style="color: #008080; text-decoration-color: #008080"> help.</span>                                              <span style="color: #000080; text-decoration-color: #000080">│</span>
<span style="color: #000080; text-decoration-color: #000080">│</span> <span style="color: #008080; text-decoration-color: #008080">* </span><span style="color: #800080; text-decoration-color: #800080; font-weight: bold">inspect</span><span style="color: #008080; text-decoration-color: #008080; font-weight: bold">(&lt;</span><span style="color: #ff00ff; text-decoration-color: #ff00ff; font-weight: bold">OBJECT</span><span style="color: #008080; text-decoration-color: #008080; font-weight: bold">&gt;</span><span style="color: #008080; text-decoration-color: #008080">, </span><span style="color: #808000; text-decoration-color: #808000">private</span><span style="color: #008080; text-decoration-color: #008080">=</span><span style="color: #00ff00; text-decoration-color: #00ff00; font-style: italic">True</span><span style="color: #008080; text-decoration-color: #008080; font-weight: bold">)</span><span style="color: #008080; text-decoration-color: #008080"> to see private attributes </span><span style="color: #008080; text-decoration-color: #008080; font-weight: bold">(</span><span style="color: #008080; text-decoration-color: #008080">single underscore</span><span style="color: #008080; text-decoration-color: #008080; font-weight: bold">)</span><span style="color: #008080; text-decoration-color: #008080">.</span>                                <span style="color: #000080; text-decoration-color: #000080">│</span>
<span style="color: #000080; text-decoration-color: #000080">│</span> <span style="color: #008080; text-decoration-color: #008080">* </span><span style="color: #800080; text-decoration-color: #800080; font-weight: bold">inspect</span><span style="color: #008080; text-decoration-color: #008080; font-weight: bold">(&lt;</span><span style="color: #ff00ff; text-decoration-color: #ff00ff; font-weight: bold">OBJECT</span><span style="color: #008080; text-decoration-color: #008080; font-weight: bold">&gt;</span><span style="color: #008080; text-decoration-color: #008080">, </span><span style="color: #808000; text-decoration-color: #808000">dunder</span><span style="color: #008080; text-decoration-color: #008080">=</span><span style="color: #00ff00; text-decoration-color: #00ff00; font-style: italic">True</span><span style="color: #008080; text-decoration-color: #008080; font-weight: bold">)</span><span style="color: #008080; text-decoration-color: #008080"> to see attributes beginning with double underscore.</span>                            <span style="color: #000080; text-decoration-color: #000080">│</span>
<span style="color: #000080; text-decoration-color: #000080">│</span> <span style="color: #008080; text-decoration-color: #008080">* </span><span style="color: #800080; text-decoration-color: #800080; font-weight: bold">inspect</span><span style="color: #008080; text-decoration-color: #008080; font-weight: bold">(&lt;</span><span style="color: #ff00ff; text-decoration-color: #ff00ff; font-weight: bold">OBJECT</span><span style="color: #008080; text-decoration-color: #008080; font-weight: bold">&gt;</span><span style="color: #008080; text-decoration-color: #008080">, </span><span style="color: #808000; text-decoration-color: #808000">all</span><span style="color: #008080; text-decoration-color: #008080">=</span><span style="color: #00ff00; text-decoration-color: #00ff00; font-style: italic">True</span><span style="color: #008080; text-decoration-color: #008080; font-weight: bold">)</span><span style="color: #008080; text-decoration-color: #008080"> to see all attributes.</span>                                                            <span style="color: #000080; text-decoration-color: #000080">│</span>
<span style="color: #000080; text-decoration-color: #000080">│</span>                                                                                                                 <span style="color: #000080; text-decoration-color: #000080">│</span>
<span style="color: #000080; text-decoration-color: #000080">│</span> <span style="color: #008080; text-decoration-color: #008080">Args:</span>                                                                                                           <span style="color: #000080; text-decoration-color: #000080">│</span>
<span style="color: #000080; text-decoration-color: #000080">│</span> <span style="color: #008080; text-decoration-color: #008080">    obj </span><span style="color: #008080; text-decoration-color: #008080; font-weight: bold">(</span><span style="color: #008080; text-decoration-color: #008080">Any</span><span style="color: #008080; text-decoration-color: #008080; font-weight: bold">)</span><span style="color: #008080; text-decoration-color: #008080">: An object to inspect.</span>                                                                            <span style="color: #000080; text-decoration-color: #000080">│</span>
<span style="color: #000080; text-decoration-color: #000080">│</span> <span style="color: #008080; text-decoration-color: #008080">    title </span><span style="color: #008080; text-decoration-color: #008080; font-weight: bold">(</span><span style="color: #008080; text-decoration-color: #008080">str, optional</span><span style="color: #008080; text-decoration-color: #008080; font-weight: bold">)</span><span style="color: #008080; text-decoration-color: #008080">: Title to display over inspect result, or </span><span style="color: #800080; text-decoration-color: #800080; font-style: italic">None</span><span style="color: #008080; text-decoration-color: #008080"> use type. Defaults to </span><span style="color: #800080; text-decoration-color: #800080; font-style: italic">None</span><span style="color: #008080; text-decoration-color: #008080">.</span>            <span style="color: #000080; text-decoration-color: #000080">│</span>
<span style="color: #000080; text-decoration-color: #000080">│</span> <span style="color: #008080; text-decoration-color: #008080">    help </span><span style="color: #008080; text-decoration-color: #008080; font-weight: bold">(</span><span style="color: #008080; text-decoration-color: #008080">bool, optional</span><span style="color: #008080; text-decoration-color: #008080; font-weight: bold">)</span><span style="color: #008080; text-decoration-color: #008080">: Show full help text rather than just first paragraph. Defaults to </span><span style="color: #ff0000; text-decoration-color: #ff0000; font-style: italic">False</span><span style="color: #008080; text-decoration-color: #008080">.</span>             <span style="color: #000080; text-decoration-color: #000080">│</span>
<span style="color: #000080; text-decoration-color: #000080">│</span> <span style="color: #008080; text-decoration-color: #008080">    methods </span><span style="color: #008080; text-decoration-color: #008080; font-weight: bold">(</span><span style="color: #008080; text-decoration-color: #008080">bool, optional</span><span style="color: #008080; text-decoration-color: #008080; font-weight: bold">)</span><span style="color: #008080; text-decoration-color: #008080">: Enable inspection of callables. Defaults to </span><span style="color: #ff0000; text-decoration-color: #ff0000; font-style: italic">False</span><span style="color: #008080; text-decoration-color: #008080">.</span>                                <span style="color: #000080; text-decoration-color: #000080">│</span>
<span style="color: #000080; text-decoration-color: #000080">│</span> <span style="color: #008080; text-decoration-color: #008080">    docs </span><span style="color: #008080; text-decoration-color: #008080; font-weight: bold">(</span><span style="color: #008080; text-decoration-color: #008080">bool, optional</span><span style="color: #008080; text-decoration-color: #008080; font-weight: bold">)</span><span style="color: #008080; text-decoration-color: #008080">: Also render doc strings. Defaults to </span><span style="color: #00ff00; text-decoration-color: #00ff00; font-style: italic">True</span><span style="color: #008080; text-decoration-color: #008080">.</span>                                           <span style="color: #000080; text-decoration-color: #000080">│</span>
<span style="color: #000080; text-decoration-color: #000080">│</span> <span style="color: #008080; text-decoration-color: #008080">    private </span><span style="color: #008080; text-decoration-color: #008080; font-weight: bold">(</span><span style="color: #008080; text-decoration-color: #008080">bool, optional</span><span style="color: #008080; text-decoration-color: #008080; font-weight: bold">)</span><span style="color: #008080; text-decoration-color: #008080">: Show private attributes </span><span style="color: #008080; text-decoration-color: #008080; font-weight: bold">(</span><span style="color: #008080; text-decoration-color: #008080">beginning with underscore</span><span style="color: #008080; text-decoration-color: #008080; font-weight: bold">)</span><span style="color: #008080; text-decoration-color: #008080">. Defaults to </span><span style="color: #ff0000; text-decoration-color: #ff0000; font-style: italic">False</span><span style="color: #008080; text-decoration-color: #008080">.</span>           <span style="color: #000080; text-decoration-color: #000080">│</span>
<span style="color: #000080; text-decoration-color: #000080">│</span> <span style="color: #008080; text-decoration-color: #008080">    dunder </span><span style="color: #008080; text-decoration-color: #008080; font-weight: bold">(</span><span style="color: #008080; text-decoration-color: #008080">bool, optional</span><span style="color: #008080; text-decoration-color: #008080; font-weight: bold">)</span><span style="color: #008080; text-decoration-color: #008080">: Show attributes starting with double underscore. Defaults to </span><span style="color: #ff0000; text-decoration-color: #ff0000; font-style: italic">False</span><span style="color: #008080; text-decoration-color: #008080">.</span>                <span style="color: #000080; text-decoration-color: #000080">│</span>
<span style="color: #000080; text-decoration-color: #000080">│</span> <span style="color: #008080; text-decoration-color: #008080">    sort </span><span style="color: #008080; text-decoration-color: #008080; font-weight: bold">(</span><span style="color: #008080; text-decoration-color: #008080">bool, optional</span><span style="color: #008080; text-decoration-color: #008080; font-weight: bold">)</span><span style="color: #008080; text-decoration-color: #008080">: Sort attributes alphabetically. Defaults to </span><span style="color: #00ff00; text-decoration-color: #00ff00; font-style: italic">True</span><span style="color: #008080; text-decoration-color: #008080">.</span>                                    <span style="color: #000080; text-decoration-color: #000080">│</span>
<span style="color: #000080; text-decoration-color: #000080">│</span> <span style="color: #008080; text-decoration-color: #008080">    all </span><span style="color: #008080; text-decoration-color: #008080; font-weight: bold">(</span><span style="color: #008080; text-decoration-color: #008080">bool, optional</span><span style="color: #008080; text-decoration-color: #008080; font-weight: bold">)</span><span style="color: #008080; text-decoration-color: #008080">: Show all attributes. Defaults to </span><span style="color: #ff0000; text-decoration-color: #ff0000; font-style: italic">False</span><span style="color: #008080; text-decoration-color: #008080">.</span>                                               <span style="color: #000080; text-decoration-color: #000080">│</span>
<span style="color: #000080; text-decoration-color: #000080">│</span> <span style="color: #008080; text-decoration-color: #008080">    value </span><span style="color: #008080; text-decoration-color: #008080; font-weight: bold">(</span><span style="color: #008080; text-decoration-color: #008080">bool, optional</span><span style="color: #008080; text-decoration-color: #008080; font-weight: bold">)</span><span style="color: #008080; text-decoration-color: #008080">: Pretty print value. Defaults to </span><span style="color: #00ff00; text-decoration-color: #00ff00; font-style: italic">True</span><span style="color: #008080; text-decoration-color: #008080">.</span>                                               <span style="color: #000080; text-decoration-color: #000080">│</span>
<span style="color: #000080; text-decoration-color: #000080">│</span>                                                                                                                 <span style="color: #000080; text-decoration-color: #000080">│</span>
<span style="color: #000080; text-decoration-color: #000080">│</span> <span style="color: #008080; text-decoration-color: #008080; font-weight: bold">35</span><span style="font-style: italic"> attribute(s) not shown.</span> Run <span style="color: #800080; text-decoration-color: #800080; font-weight: bold">inspect</span><span style="font-weight: bold">(</span>inspect<span style="font-weight: bold">)</span> for options.                                                    <span style="color: #000080; text-decoration-color: #000080">│</span>
<span style="color: #000080; text-decoration-color: #000080">╰─────────────────────────────────────────────────────────────────────────────────────────────────────────────────╯</span>
</pre>
</div>
</div>
<div class="cell" data-execution_count="74">
<div class="sourceCode cell-code" id="cb51" style="background: #f1f3f5;"><pre class="sourceCode python code-with-copy"><code class="sourceCode python"><span id="cb51-1"><span class="im" style="color: #00769E;">from</span> dataclasses <span class="im" style="color: #00769E;">import</span> dataclass</span>
<span id="cb51-2"></span>
<span id="cb51-3"></span>
<span id="cb51-4"><span class="at" style="color: #657422;">@dataclass</span></span>
<span id="cb51-5"><span class="kw" style="color: #003B4F;">class</span> InventoryItem:</span>
<span id="cb51-6">    <span class="co" style="color: #5E5E5E;">"""Class for keeping track of an item in inventory."""</span></span>
<span id="cb51-7"></span>
<span id="cb51-8">    name: <span class="bu" style="color: null;">str</span></span>
<span id="cb51-9">    unit_price: <span class="bu" style="color: null;">float</span></span>
<span id="cb51-10">    quantity_on_hand: <span class="bu" style="color: null;">int</span> <span class="op" style="color: #5E5E5E;">=</span> <span class="dv" style="color: #AD0000;">0</span></span></code></pre></div>
</div>
<div class="cell" data-execution_count="75">
<div class="sourceCode cell-code" id="cb52" style="background: #f1f3f5;"><pre class="sourceCode python code-with-copy"><code class="sourceCode python"><span id="cb52-1">c <span class="op" style="color: #5E5E5E;">=</span> InventoryItem(<span class="st" style="color: #20794D;">"A"</span>, <span class="dv" style="color: #AD0000;">20</span>)</span></code></pre></div>
</div>
<div class="cell" data-execution_count="76">
<div class="sourceCode cell-code" id="cb53" style="background: #f1f3f5;"><pre class="sourceCode python code-with-copy"><code class="sourceCode python"><span id="cb53-1">c</span></code></pre></div>
<div class="cell-output cell-output-display" data-execution_count="76">
<pre><code>InventoryItem(name='A', unit_price=20, quantity_on_hand=0)</code></pre>
</div>
</div>
<div class="cell" data-execution_count="69">
<div class="sourceCode cell-code" id="cb55" style="background: #f1f3f5;"><pre class="sourceCode python code-with-copy"><code class="sourceCode python"><span id="cb55-1"><span class="kw" style="color: #003B4F;">class</span> InventoryItemOld:</span>
<span id="cb55-2">    <span class="kw" style="color: #003B4F;">def</span> <span class="fu" style="color: #4758AB;">__init__</span>(<span class="va" style="color: #111111;">self</span>, name: <span class="bu" style="color: null;">str</span>, unit_price: <span class="bu" style="color: null;">float</span>, </span>
<span id="cb55-3">                 quantity_on_hand: <span class="bu" style="color: null;">int</span> <span class="op" style="color: #5E5E5E;">=</span> <span class="dv" style="color: #AD0000;">0</span>):</span>
<span id="cb55-4">        <span class="va" style="color: #111111;">self</span>.name <span class="op" style="color: #5E5E5E;">=</span> name</span>
<span id="cb55-5">        <span class="va" style="color: #111111;">self</span>.unit_price <span class="op" style="color: #5E5E5E;">=</span> unit_price</span>
<span id="cb55-6">        <span class="va" style="color: #111111;">self</span>.quantity_on_hand <span class="op" style="color: #5E5E5E;">=</span> quantity_on_hand</span></code></pre></div>
</div>
<div class="cell" data-execution_count="73">
<div class="sourceCode cell-code" id="cb56" style="background: #f1f3f5;"><pre class="sourceCode python code-with-copy"><code class="sourceCode python"><span id="cb56-1">d <span class="op" style="color: #5E5E5E;">=</span> InventoryItemOld(<span class="st" style="color: #20794D;">"A"</span>, <span class="dv" style="color: #AD0000;">2</span>)</span>
<span id="cb56-2">d</span></code></pre></div>
<div class="cell-output cell-output-display" data-execution_count="73">
<pre><code>&lt;__main__.InventoryItemOld at 0x166340430&gt;</code></pre>
</div>
</div>
<div class="cell" data-execution_count="70">
<div class="sourceCode cell-code" id="cb58" style="background: #f1f3f5;"><pre class="sourceCode python code-with-copy"><code class="sourceCode python"><span id="cb58-1"><span class="kw" style="color: #003B4F;">def</span> greeting(name: <span class="bu" style="color: null;">str</span>) <span class="op" style="color: #5E5E5E;">-&gt;</span> <span class="bu" style="color: null;">str</span>:</span>
<span id="cb58-2">    <span class="cf" style="color: #003B4F;">return</span> <span class="st" style="color: #20794D;">'Hello '</span> <span class="op" style="color: #5E5E5E;">+</span> name</span></code></pre></div>
</div>
<div class="cell" data-execution_count="71">
<div class="sourceCode cell-code" id="cb59" style="background: #f1f3f5;"><pre class="sourceCode python code-with-copy"><code class="sourceCode python"><span id="cb59-1">greeting(<span class="st" style="color: #20794D;">"Abc"</span>)</span></code></pre></div>
<div class="cell-output cell-output-display" data-execution_count="71">
<pre><code>'Hello Abc'</code></pre>
</div>
</div>
<div class="cell" data-execution_count="72">
<div class="sourceCode cell-code" id="cb61" style="background: #f1f3f5;"><pre class="sourceCode python code-with-copy"><code class="sourceCode python"><span id="cb61-1">greeting(<span class="dv" style="color: #AD0000;">10</span>)</span></code></pre></div>
<div class="cell-output cell-output-error">
<pre><code>TypeError: can only concatenate str (not "int") to str</code></pre>
</div>
</div>


</section>

 ]]></description>
  <guid>https://github.com/nipunbatra/ml2023/notebooks/posts/tips.html</guid>
  <pubDate>Tue, 10 Jan 2023 00:00:00 GMT</pubDate>
</item>
</channel>
</rss>
